
warstars2.elf:     file format elf32-littlenios2
warstars2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000000

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00000210 memsz 0x00000210 flags r-x
    LOAD off    0x00002000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x0013be38 memsz 0x0013be38 flags r-x
    LOAD off    0x0013de38 vaddr 0x0813be38 paddr 0x0813d92c align 2**12
         filesz 0x00001af4 memsz 0x00001af4 flags rw-
    LOAD off    0x00140420 vaddr 0x0813f420 paddr 0x0813f420 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0013bb24  08000000  08000000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000314  0813bb24  0813bb24  0013db24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af4  0813be38  0813d92c  0013de38  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0813f420  0813f420  00140420  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000230  00000230  0013f92c  2**0
                  CONTENTS
  7 .sdram        00000000  0813f580  0813f580  0013f92c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0013f92c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f18  00000000  00000000  0013f950  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023870  00000000  00000000  00140868  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 000091f5  00000000  00000000  001640d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b7bd  00000000  00000000  0016d2cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002188  00000000  00000000  00178a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000039bc  00000000  00000000  0017ac14  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001786c  00000000  00000000  0017e5d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00195e3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018d0  00000000  00000000  00195e80  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0019a9ae  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0019a9b1  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0019a9bd  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0019a9be  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0019a9bf  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0019a9c3  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0019a9c7  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0019a9cb  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0019a9d6  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0019a9e1  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000003  00000000  00000000  0019a9ec  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000040  00000000  00000000  0019a9ef  2**0
                  CONTENTS, READONLY
 30 .jdi          00004a8a  00000000  00000000  0019aa2f  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0006f3e7  00000000  00000000  0019f4b9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
08000000 l    d  .text	00000000 .text
0813bb24 l    d  .rodata	00000000 .rodata
0813be38 l    d  .rwdata	00000000 .rwdata
0813f420 l    d  .bss	00000000 .bss
00000230 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
0813f580 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../warstars2_bsp//obj/HAL/src/crt0.o
08000038 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
0813d8e4 l     O .rwdata	00000004 vga_mem
00000000 l    df *ABS*	00000000 vga.c
0813d8e8 l     O .rwdata	00000004 vga_mem
00000000 l    df *ABS*	00000000 obj/default/memory_setup.o
080002b4 l       .text	00000000 vga_mem
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0813bb7e l     O .rodata	00000010 zeroes.4404
0812e7b0 l     F .text	000000bc __sbprintf
0813bb8e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0812e9c0 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
08130518 l     F .text	00000008 __fp_unlock
0813052c l     F .text	0000019c __sinit.part.1
081306c8 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0813be38 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0813c27c l     O .rwdata	00000020 lc_ctype_charset
0813c25c l     O .rwdata	00000020 lc_message_charset
0813c29c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0813bbc0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
08133b9c l     F .text	000000fc __sprint_r.part.0
0813bce4 l     O .rodata	00000010 zeroes.4349
081351d8 l     F .text	000000bc __sbprintf
0813bcf4 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
081391f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0813930c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
08139338 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0813942c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
08139514 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
08139600 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
081397dc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0813d91c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
08139a80 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
08139bbc l     F .text	00000034 alt_dev_reg
0813c884 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
08139eb0 l     F .text	0000020c altera_avalon_jtag_uart_irq
0813a0bc l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0813a6f4 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0813aa8c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0813aeec l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0813b04c l     F .text	0000003c alt_get_errno
0813b088 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0813f454 g     O .bss	00000004 alt_instruction_exception_handler
081331e0 g     F .text	00000074 _mprec_log10
081332cc g     F .text	0000008c __any_on
0813578c g     F .text	00000054 _isatty_r
0813bbcc g     O .rodata	00000028 __mprec_tinytens
08139718 g     F .text	0000007c alt_main
0812c34c g     F .text	000000c0 _puts_r
0813f480 g     O .bss	00000100 alt_irq
081357e0 g     F .text	00000060 _lseek_r
0813d92c g       *ABS*	00000000 __flash_rwdata_start
08137bd0 g     F .text	00000088 .hidden __eqdf2
0813f580 g       *ABS*	00000000 __alt_heap_start
0812c310 g     F .text	0000003c printf
081359f8 g     F .text	0000009c _wcrtomb_r
08133a5c g     F .text	0000005c __sseek
08130878 g     F .text	00000010 __sinit
081358a0 g     F .text	00000140 __swbuf_r
0813134c g     F .text	0000007c _setlocale_r
081306d0 g     F .text	00000078 __sfmoreglue
081397b8 g     F .text	00000024 __malloc_unlock
0813201c g     F .text	0000015c memmove
08130860 g     F .text	00000018 _cleanup
081322a0 g     F .text	000000a8 _Balloc
08137c58 g     F .text	000000dc .hidden __gtdf2
0813b474 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
08135730 g     F .text	0000005c _fstat_r
0813f438 g     O .bss	00000004 errno
081339d8 g     F .text	00000008 __seofread
0813f440 g     O .bss	00000004 alt_argv
081458e4 g       *ABS*	00000000 _gp
08139a50 g     F .text	00000030 usleep
0813c704 g     O .rwdata	00000180 alt_fd_list
0813b498 g     F .text	00000090 alt_find_dev
08131ed4 g     F .text	00000148 memcpy
08130520 g     F .text	0000000c _cleanup_r
08139010 g     F .text	000000dc .hidden __floatsidf
0813afd0 g     F .text	0000007c alt_io_redirect
08137d34 g     F .text	000000f4 .hidden __ltdf2
0813bb24 g       *ABS*	00000000 __DTOR_END__
0812c40c g     F .text	00000014 puts
0813b6f4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
081338bc g     F .text	00000074 __fpclassifyd
0813313c g     F .text	000000a4 __ratio
081351bc g     F .text	0000001c __vfiprintf_internal
0813a2b4 g     F .text	0000021c altera_avalon_jtag_uart_read
0812c2e0 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
08136898 g     F .text	00000064 .hidden __udivsi3
08139468 g     F .text	000000ac isatty
0813bc1c g     O .rodata	000000c8 __mprec_tens
081313c8 g     F .text	0000000c __locale_charset
0813f434 g     O .bss	00000004 __malloc_top_pad
0813d8f4 g     O .rwdata	00000004 __mb_cur_max
081313f8 g     F .text	0000000c _localeconv_r
081326d4 g     F .text	0000003c __i2b
08130cfc g     F .text	000004c8 __sfvwrite_r
08133930 g     F .text	00000054 _sbrk_r
08135840 g     F .text	00000060 _read_r
0813d914 g     O .rwdata	00000004 alt_max_fd
08135424 g     F .text	000000f0 _fclose_r
081304e8 g     F .text	00000030 fflush
0813f430 g     O .bss	00000004 __malloc_max_sbrked_mem
08136954 g     F .text	000008ac .hidden __adddf3
0800027c g     F .text	00000038 getFrame
08132ee4 g     F .text	0000010c __b2d
081361dc g     F .text	000005c4 .hidden __umoddi3
0813963c g     F .text	000000dc lseek
0813d8ec g     O .rwdata	00000004 _global_impure_ptr
08133358 g     F .text	00000564 _realloc_r
0813f580 g       *ABS*	00000000 __bss_end
0813adfc g     F .text	000000f0 alt_iic_isr_register
0813b36c g     F .text	00000108 alt_tick
08135be0 g     F .text	000005fc .hidden __udivdi3
0813568c g     F .text	00000024 _fputwc_r
0813bbf4 g     O .rodata	00000028 __mprec_bigtens
081324b8 g     F .text	00000104 __s2b
081390ec g     F .text	000000a8 .hidden __floatunsidf
08132c24 g     F .text	00000060 __mcmp
08130898 g     F .text	00000018 __fp_lock_all
0813adb0 g     F .text	0000004c alt_ic_irq_enabled
0813b2d0 g     F .text	0000009c alt_alarm_stop
0813f448 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
0813c6dc g     O .rwdata	00000028 alt_dev_null
0813aa6c g     F .text	00000020 alt_dcache_flush_all
081325bc g     F .text	00000068 __hi0bits
08138f90 g     F .text	00000080 .hidden __fixdfsi
0813d92c g       *ABS*	00000000 __ram_rwdata_end
0813d90c g     O .rwdata	00000008 alt_dev_list
08139abc g     F .text	00000100 write
0813be38 g       *ABS*	00000000 __ram_rodata_end
08139374 g     F .text	000000b8 fstat
08137d34 g     F .text	000000f4 .hidden __ledf2
0813299c g     F .text	00000140 __pow5mult
08133cb0 g     F .text	0000150c ___vfiprintf_internal_r
0813f428 g     O .bss	00000004 __nlocale_changed
081368fc g     F .text	00000058 .hidden __umodsi3
0813f580 g       *ABS*	00000000 end
08139df0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0813bb24 g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
0813a76c g     F .text	0000007c alt_avalon_timer_sc_init
08139194 g     F .text	00000064 .hidden __clzsi2
0813a4d0 g     F .text	00000224 altera_avalon_jtag_uart_write
08130888 g     F .text	00000004 __sfp_lock_acquire
08131df0 g     F .text	000000e4 memchr
0812c4b8 g     F .text	000022dc ___vfprintf_internal_r
081309ec g     F .text	00000310 _free_r
081313d4 g     F .text	00000010 __locale_mb_cur_max
0813b970 g     F .text	00000180 __call_exitprocs
0813f424 g     O .bss	00000004 __mlocale_changed
0813d8f8 g     O .rwdata	00000004 __malloc_sbrk_base
08000000 g     F .text	0000003c _start
0813f44c g     O .bss	00000004 _alt_tick_rate
08132adc g     F .text	00000148 __lshift
0813f450 g     O .bss	00000004 _alt_nticks
08139818 g     F .text	00000104 read
08139c28 g     F .text	00000064 alt_sys_init
0813b858 g     F .text	00000118 __register_exitproc
08132710 g     F .text	0000028c __multiply
0813a15c g     F .text	00000068 altera_avalon_jtag_uart_close
0812c2b8 g     F .text	00000028 .hidden __mulsi3
0813be38 g       *ABS*	00000000 __ram_rwdata_start
0813bb24 g       *ABS*	00000000 __ram_rodata_start
0813f458 g     O .bss	00000028 __malloc_current_mallinfo
08132ff0 g     F .text	0000014c __d2b
08139c8c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0813b630 g     F .text	000000c4 alt_get_fd
0813a914 g     F .text	00000158 alt_busy_sleep
081352f4 g     F .text	00000054 _close_r
0813b7dc g     F .text	0000007c memcmp
08139d4c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0813f580 g       *ABS*	00000000 __alt_stack_base
08139d9c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0812e86c g     F .text	00000154 __swsetup_r
08137200 g     F .text	000009d0 .hidden __divdf3
08130748 g     F .text	00000118 __sfp
08133254 g     F .text	00000078 __copybits
0813c2d4 g     O .rwdata	00000408 __malloc_av_
08130894 g     F .text	00000004 __sinit_lock_release
08137e28 g     F .text	0000086c .hidden __muldf3
08133984 g     F .text	00000054 __sread
0813b528 g     F .text	00000108 alt_find_file
0813aac8 g     F .text	000000a4 alt_dev_llist_insert
08139794 g     F .text	00000024 __malloc_lock
081399a0 g     F .text	000000b0 sbrk
0813048c g     F .text	0000005c _fflush_r
08135348 g     F .text	000000dc _calloc_r
0813f420 g       *ABS*	00000000 __bss_start
08132178 g     F .text	00000128 memset
0800003c g     F .text	000000bc main
0813f444 g     O .bss	00000004 alt_envp
0813f42c g     O .bss	00000004 __malloc_max_total_mem
08139cec g     F .text	00000060 altera_avalon_jtag_uart_write_fd
081359e0 g     F .text	00000018 __swbuf
08133ab8 g     F .text	00000008 __sclose
0c000000 g       *ABS*	00000000 __alt_heap_limit
08135514 g     F .text	00000014 fclose
0812ebe8 g     F .text	00001688 _dtoa_r
081315e4 g     F .text	0000080c _malloc_r
08135b54 g     F .text	00000030 __ascii_wctomb
0813d918 g     O .rwdata	00000004 alt_errno
081311c4 g     F .text	000000c4 _fwalk
081367a0 g     F .text	00000084 .hidden __divsi3
081308c8 g     F .text	00000124 _malloc_trim_r
0813bb24 g       *ABS*	00000000 __CTOR_END__
08133ac0 g     F .text	000000dc strcmp
0813bb24 g       *ABS*	00000000 __flash_rodata_start
0813bb24 g       *ABS*	00000000 __DTOR_LIST__
08137bd0 g     F .text	00000088 .hidden __nedf2
08139bf0 g     F .text	00000038 alt_irq_init
0813991c g     F .text	00000084 alt_release_fd
0813bd04 g     O .rodata	00000100 .hidden __clz_tab
0813f420 g     O .bss	00000004 _PathLocale
0813b790 g     F .text	00000014 atexit
08135294 g     F .text	00000060 _write_r
08131404 g     F .text	00000018 setlocale
0813d8f0 g     O .rwdata	00000004 _impure_ptr
0813f43c g     O .bss	00000004 alt_argc
08130270 g     F .text	0000021c __sflush_r
0813abcc g     F .text	00000060 _do_dtors
081313f0 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
08132e80 g     F .text	00000064 __ulp
081308b0 g     F .text	00000018 __fp_unlock_all
0813d904 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
0813141c g     F .text	0000000c localeconv
0813ac4c g     F .text	00000050 alt_ic_isr_register
0813d92c g       *ABS*	00000000 _edata
0813f580 g       *ABS*	00000000 _end
08135528 g     F .text	00000164 __fputwc
00000230 g       *ABS*	00000000 __ram_exceptions_end
0813a1c4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0813ad24 g     F .text	0000008c alt_ic_irq_disable
081339e0 g     F .text	0000007c __swrite
0813d8fc g     O .rwdata	00000004 __malloc_trim_threshold
081313e4 g     F .text	0000000c __locale_msgcharset
0813b7a4 g     F .text	00000038 exit
08131288 g     F .text	000000c4 _fwalk_reent
08132c84 g     F .text	000001fc __mdiff
08136824 g     F .text	00000074 .hidden __modsi3
0c000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
0813088c g     F .text	00000004 __sfp_lock_release
08000000 g       *ABS*	00000000 __alt_mem_sdram
0813baf0 g     F .text	00000034 _exit
0813a7e8 g     F .text	0000012c alt_alarm_start
08131428 g     F .text	000001bc __smakebuf_r
0812c420 g     F .text	00000098 strlen
0813b174 g     F .text	0000015c open
08137c58 g     F .text	000000dc .hidden __gedf2
080000f8 g     F .text	000000a4 clearScreen
0813d900 g     O .rwdata	00000004 __wctomb
0800019c g     F .text	000000e0 setPixel
08133c98 g     F .text	00000018 __sprint_r
0813ac2c g     F .text	00000020 alt_icache_flush_all
0813d920 g     O .rwdata	00000004 alt_priority_mask
0813ac9c g     F .text	00000088 alt_ic_irq_enable
0812e794 g     F .text	0000001c __vfprintf_internal
08135b84 g     F .text	0000005c _wctomb_r
08138694 g     F .text	000008fc .hidden __subdf3
08132624 g     F .text	000000b0 __lo0bits
0813d924 g     O .rwdata	00000008 alt_alarm_list
0813ab6c g     F .text	00000060 _do_ctors
08135a94 g     F .text	000000c0 wcrtomb
08139234 g     F .text	000000d8 close
0813957c g     F .text	00000084 alt_load
081356b0 g     F .text	00000080 fputwc
08130890 g     F .text	00000004 __sinit_lock_acquire
08132370 g     F .text	00000148 __multadd
08132348 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
   4:	08400014 	ori	at,at,0
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00820534 	movhi	r2,2068
 140:	10bd2004 	addi	r2,r2,-2944
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00820534 	movhi	r2,2068
 158:	10bd2004 	addi	r2,r2,-2944
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_data_end+0xf400012c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_data_end+0xf4000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a6dc17 	ldw	r2,-25744(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a6dc17 	ldw	r2,-25744(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

08000000 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000000:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 8000004:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8000008:	06820534 	movhi	gp,2068
    ori gp, gp, %lo(_gp)
 800000c:	d6963914 	ori	gp,gp,22756
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000010:	008204f4 	movhi	r2,2067
    ori r2, r2, %lo(__bss_start)
 8000014:	10bd0814 	ori	r2,r2,62496

    movhi r3, %hi(__bss_end)
 8000018:	00c204f4 	movhi	r3,2067
    ori r3, r3, %lo(__bss_end)
 800001c:	18fd6014 	ori	r3,r3,62848

    beq r2, r3, 1f
 8000020:	10c00326 	beq	r2,r3,8000030 <_start+0x30>

0:
    stw zero, (r2)
 8000024:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8000028:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 800002c:	10fffd36 	bltu	r2,r3,8000024 <__alt_data_end+0xfc000024>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000030:	813957c0 	call	813957c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000034:	81397180 	call	8139718 <alt_main>

08000038 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8000038:	003fff06 	br	8000038 <__alt_data_end+0xfc000038>

0800003c <main>:
#include <stdio.h>
#include <unistd.h>
#include "vga.h"

int main() {
 800003c:	defffa04 	addi	sp,sp,-24
 8000040:	dfc00515 	stw	ra,20(sp)
 8000044:	df000415 	stw	fp,16(sp)
 8000048:	df000404 	addi	fp,sp,16
    int loop = 0;
 800004c:	e03ffc15 	stw	zero,-16(fp)
    while (1) {
    	printf("start\n");
 8000050:	01020534 	movhi	r4,2068
 8000054:	212ec904 	addi	r4,r4,-17628
 8000058:	812c40c0 	call	812c40c <puts>
        for (int y = 0; y < SCREEN_HEIGHT; y++) {
 800005c:	e03ffd15 	stw	zero,-12(fp)
 8000060:	00001706 	br	80000c0 <main+0x84>
            uint16_t color = 0;
 8000064:	e03ffe0d 	sth	zero,-8(fp)
            for (int x = 0; x < SCREEN_WIDTH; x++) {
 8000068:	e03fff15 	stw	zero,-4(fp)
 800006c:	00000e06 	br	80000a8 <main+0x6c>
                setPixel(0, x, y, color++);
 8000070:	e13fff17 	ldw	r4,-4(fp)
 8000074:	e17ffd17 	ldw	r5,-12(fp)
 8000078:	e0bffe0b 	ldhu	r2,-8(fp)
 800007c:	10c00044 	addi	r3,r2,1
 8000080:	e0fffe0d 	sth	r3,-8(fp)
 8000084:	10bfffcc 	andi	r2,r2,65535
 8000088:	100f883a 	mov	r7,r2
 800008c:	280d883a 	mov	r6,r5
 8000090:	200b883a 	mov	r5,r4
 8000094:	0009883a 	mov	r4,zero
 8000098:	800019c0 	call	800019c <setPixel>
    int loop = 0;
    while (1) {
    	printf("start\n");
        for (int y = 0; y < SCREEN_HEIGHT; y++) {
            uint16_t color = 0;
            for (int x = 0; x < SCREEN_WIDTH; x++) {
 800009c:	e0bfff17 	ldw	r2,-4(fp)
 80000a0:	10800044 	addi	r2,r2,1
 80000a4:	e0bfff15 	stw	r2,-4(fp)
 80000a8:	e0bfff17 	ldw	r2,-4(fp)
 80000ac:	1080a010 	cmplti	r2,r2,640
 80000b0:	103fef1e 	bne	r2,zero,8000070 <__alt_data_end+0xfc000070>

int main() {
    int loop = 0;
    while (1) {
    	printf("start\n");
        for (int y = 0; y < SCREEN_HEIGHT; y++) {
 80000b4:	e0bffd17 	ldw	r2,-12(fp)
 80000b8:	10800044 	addi	r2,r2,1
 80000bc:	e0bffd15 	stw	r2,-12(fp)
 80000c0:	e0bffd17 	ldw	r2,-12(fp)
 80000c4:	10807810 	cmplti	r2,r2,480
 80000c8:	103fe61e 	bne	r2,zero,8000064 <__alt_data_end+0xfc000064>
            for (int x = 0; x < SCREEN_WIDTH; x++) {
                setPixel(0, x, y, color++);
            }
        }

        usleep(1000000);
 80000cc:	010003f4 	movhi	r4,15
 80000d0:	21109004 	addi	r4,r4,16960
 80000d4:	8139a500 	call	8139a50 <usleep>
        printf("loop %d\n", loop++);
 80000d8:	e0bffc17 	ldw	r2,-16(fp)
 80000dc:	10c00044 	addi	r3,r2,1
 80000e0:	e0fffc15 	stw	r3,-16(fp)
 80000e4:	100b883a 	mov	r5,r2
 80000e8:	01020534 	movhi	r4,2068
 80000ec:	212ecb04 	addi	r4,r4,-17620
 80000f0:	812c3100 	call	812c310 <printf>
    }
 80000f4:	003fd606 	br	8000050 <__alt_data_end+0xfc000050>

080000f8 <clearScreen>:
#include "vga.h"

void clearScreen() {
 80000f8:	defffb04 	addi	sp,sp,-20
 80000fc:	dfc00415 	stw	ra,16(sp)
 8000100:	df000315 	stw	fp,12(sp)
 8000104:	df000304 	addi	fp,sp,12
    for (int i = 0; i < 2; i++) {
 8000108:	e03ffd15 	stw	zero,-12(fp)
 800010c:	00001a06 	br	8000178 <clearScreen+0x80>
        for (int y = 0; y < SCREEN_HEIGHT; y++) {
 8000110:	e03ffe15 	stw	zero,-8(fp)
 8000114:	00001206 	br	8000160 <clearScreen+0x68>
            for (int x = 0; x < SCREEN_WIDTH; x++)
 8000118:	e03fff15 	stw	zero,-4(fp)
 800011c:	00000a06 	br	8000148 <clearScreen+0x50>
                setPixel(i, x, y, 0);
 8000120:	e0bfff17 	ldw	r2,-4(fp)
 8000124:	e0fffe17 	ldw	r3,-8(fp)
 8000128:	000f883a 	mov	r7,zero
 800012c:	180d883a 	mov	r6,r3
 8000130:	100b883a 	mov	r5,r2
 8000134:	e13ffd17 	ldw	r4,-12(fp)
 8000138:	800019c0 	call	800019c <setPixel>
#include "vga.h"

void clearScreen() {
    for (int i = 0; i < 2; i++) {
        for (int y = 0; y < SCREEN_HEIGHT; y++) {
            for (int x = 0; x < SCREEN_WIDTH; x++)
 800013c:	e0bfff17 	ldw	r2,-4(fp)
 8000140:	10800044 	addi	r2,r2,1
 8000144:	e0bfff15 	stw	r2,-4(fp)
 8000148:	e0bfff17 	ldw	r2,-4(fp)
 800014c:	1080a010 	cmplti	r2,r2,640
 8000150:	103ff31e 	bne	r2,zero,8000120 <__alt_data_end+0xfc000120>
#include "vga.h"

void clearScreen() {
    for (int i = 0; i < 2; i++) {
        for (int y = 0; y < SCREEN_HEIGHT; y++) {
 8000154:	e0bffe17 	ldw	r2,-8(fp)
 8000158:	10800044 	addi	r2,r2,1
 800015c:	e0bffe15 	stw	r2,-8(fp)
 8000160:	e0bffe17 	ldw	r2,-8(fp)
 8000164:	10807810 	cmplti	r2,r2,480
 8000168:	103feb1e 	bne	r2,zero,8000118 <__alt_data_end+0xfc000118>
#include "vga.h"

void clearScreen() {
    for (int i = 0; i < 2; i++) {
 800016c:	e0bffd17 	ldw	r2,-12(fp)
 8000170:	10800044 	addi	r2,r2,1
 8000174:	e0bffd15 	stw	r2,-12(fp)
 8000178:	e0bffd17 	ldw	r2,-12(fp)
 800017c:	10800090 	cmplti	r2,r2,2
 8000180:	103fe31e 	bne	r2,zero,8000110 <__alt_data_end+0xfc000110>
        for (int y = 0; y < SCREEN_HEIGHT; y++) {
            for (int x = 0; x < SCREEN_WIDTH; x++)
                setPixel(i, x, y, 0);
        }
    }
}
 8000184:	0001883a 	nop
 8000188:	e037883a 	mov	sp,fp
 800018c:	dfc00117 	ldw	ra,4(sp)
 8000190:	df000017 	ldw	fp,0(sp)
 8000194:	dec00204 	addi	sp,sp,8
 8000198:	f800283a 	ret

0800019c <setPixel>:

void setPixel(int frame, uint32_t x, uint32_t y, uint16_t color) {
 800019c:	defff904 	addi	sp,sp,-28
 80001a0:	dfc00615 	stw	ra,24(sp)
 80001a4:	df000515 	stw	fp,20(sp)
 80001a8:	dc000415 	stw	r16,16(sp)
 80001ac:	df000504 	addi	fp,sp,20
 80001b0:	e13ffb15 	stw	r4,-20(fp)
 80001b4:	e17ffc15 	stw	r5,-16(fp)
 80001b8:	e1bffd15 	stw	r6,-12(fp)
 80001bc:	3805883a 	mov	r2,r7
 80001c0:	e0bffe0d 	sth	r2,-8(fp)
    if (x >= SCREEN_WIDTH || y >= SCREEN_HEIGHT)
 80001c4:	e0bffc17 	ldw	r2,-16(fp)
 80001c8:	1080a028 	cmpgeui	r2,r2,640
 80001cc:	1000241e 	bne	r2,zero,8000260 <setPixel+0xc4>
 80001d0:	e0bffd17 	ldw	r2,-12(fp)
 80001d4:	10807830 	cmpltui	r2,r2,480
 80001d8:	10002126 	beq	r2,zero,8000260 <setPixel+0xc4>
        return;
    switch (frame) {
 80001dc:	e0bffb17 	ldw	r2,-20(fp)
 80001e0:	10000326 	beq	r2,zero,80001f0 <setPixel+0x54>
 80001e4:	10800060 	cmpeqi	r2,r2,1
 80001e8:	10000d1e 	bne	r2,zero,8000220 <setPixel+0x84>
 80001ec:	00001d06 	br	8000264 <setPixel+0xc8>
        case 0:
            vga_mem->frame0[y * SCREEN_WIDTH + x] = color;
 80001f0:	d4200117 	ldw	r16,-32764(gp)
 80001f4:	0140a004 	movi	r5,640
 80001f8:	e13ffd17 	ldw	r4,-12(fp)
 80001fc:	812c2b80 	call	812c2b8 <__mulsi3>
 8000200:	1007883a 	mov	r3,r2
 8000204:	e0bffc17 	ldw	r2,-16(fp)
 8000208:	1885883a 	add	r2,r3,r2
 800020c:	1085883a 	add	r2,r2,r2
 8000210:	8085883a 	add	r2,r16,r2
 8000214:	e0fffe0b 	ldhu	r3,-8(fp)
 8000218:	10c0000d 	sth	r3,0(r2)
            break;
 800021c:	00001106 	br	8000264 <setPixel+0xc8>
        case 1:
            vga_mem->frame1[y * SCREEN_WIDTH + x] = color;
 8000220:	d4200117 	ldw	r16,-32764(gp)
 8000224:	0140a004 	movi	r5,640
 8000228:	e13ffd17 	ldw	r4,-12(fp)
 800022c:	812c2b80 	call	812c2b8 <__mulsi3>
 8000230:	1007883a 	mov	r3,r2
 8000234:	e0bffc17 	ldw	r2,-16(fp)
 8000238:	1887883a 	add	r3,r3,r2
 800023c:	00800174 	movhi	r2,5
 8000240:	10ac0004 	addi	r2,r2,-20480
 8000244:	1885883a 	add	r2,r3,r2
 8000248:	1085883a 	add	r2,r2,r2
 800024c:	8085883a 	add	r2,r16,r2
 8000250:	e0fffe0b 	ldhu	r3,-8(fp)
 8000254:	10c0000d 	sth	r3,0(r2)
            break;
 8000258:	0001883a 	nop
 800025c:	00000106 	br	8000264 <setPixel+0xc8>
    }
}

void setPixel(int frame, uint32_t x, uint32_t y, uint16_t color) {
    if (x >= SCREEN_WIDTH || y >= SCREEN_HEIGHT)
        return;
 8000260:	0001883a 	nop
            break;
        case 1:
            vga_mem->frame1[y * SCREEN_WIDTH + x] = color;
            break;
    }
}
 8000264:	e6ffff04 	addi	sp,fp,-4
 8000268:	dfc00217 	ldw	ra,8(sp)
 800026c:	df000117 	ldw	fp,4(sp)
 8000270:	dc000017 	ldw	r16,0(sp)
 8000274:	dec00304 	addi	sp,sp,12
 8000278:	f800283a 	ret

0800027c <getFrame>:

int getFrame() { return vga_mem->control & 0x01; }
 800027c:	deffff04 	addi	sp,sp,-4
 8000280:	df000015 	stw	fp,0(sp)
 8000284:	d839883a 	mov	fp,sp
 8000288:	d0e00117 	ldw	r3,-32764(gp)
 800028c:	008004f4 	movhi	r2,19
 8000290:	10b00004 	addi	r2,r2,-16384
 8000294:	1885883a 	add	r2,r3,r2
 8000298:	1080000b 	ldhu	r2,0(r2)
 800029c:	10bfffcc 	andi	r2,r2,65535
 80002a0:	1080004c 	andi	r2,r2,1
 80002a4:	e037883a 	mov	sp,fp
 80002a8:	df000017 	ldw	fp,0(sp)
 80002ac:	dec00104 	addi	sp,sp,4
 80002b0:	f800283a 	ret

080002b4 <vga_mem>:
	...
 812c2b4:	883a0000 	call	883a000 <_gp+0x6f471c>

0812c2b8 <__mulsi3>:
 812c2b8:	0005883a 	mov	r2,zero
 812c2bc:	20000726 	beq	r4,zero,812c2dc <__mulsi3+0x24>
 812c2c0:	20c0004c 	andi	r3,r4,1
 812c2c4:	2008d07a 	srli	r4,r4,1
 812c2c8:	18000126 	beq	r3,zero,812c2d0 <__mulsi3+0x18>
 812c2cc:	1145883a 	add	r2,r2,r5
 812c2d0:	294b883a 	add	r5,r5,r5
 812c2d4:	203ffa1e 	bne	r4,zero,812c2c0 <__alt_data_end+0xfc12c2c0>
 812c2d8:	f800283a 	ret
 812c2dc:	f800283a 	ret

0812c2e0 <_printf_r>:
 812c2e0:	defffd04 	addi	sp,sp,-12
 812c2e4:	2805883a 	mov	r2,r5
 812c2e8:	dfc00015 	stw	ra,0(sp)
 812c2ec:	d9800115 	stw	r6,4(sp)
 812c2f0:	d9c00215 	stw	r7,8(sp)
 812c2f4:	21400217 	ldw	r5,8(r4)
 812c2f8:	d9c00104 	addi	r7,sp,4
 812c2fc:	100d883a 	mov	r6,r2
 812c300:	812c4b80 	call	812c4b8 <___vfprintf_internal_r>
 812c304:	dfc00017 	ldw	ra,0(sp)
 812c308:	dec00304 	addi	sp,sp,12
 812c30c:	f800283a 	ret

0812c310 <printf>:
 812c310:	defffc04 	addi	sp,sp,-16
 812c314:	dfc00015 	stw	ra,0(sp)
 812c318:	d9400115 	stw	r5,4(sp)
 812c31c:	d9800215 	stw	r6,8(sp)
 812c320:	d9c00315 	stw	r7,12(sp)
 812c324:	00820534 	movhi	r2,2068
 812c328:	10b63c04 	addi	r2,r2,-10000
 812c32c:	10800017 	ldw	r2,0(r2)
 812c330:	200b883a 	mov	r5,r4
 812c334:	d9800104 	addi	r6,sp,4
 812c338:	11000217 	ldw	r4,8(r2)
 812c33c:	812e7940 	call	812e794 <__vfprintf_internal>
 812c340:	dfc00017 	ldw	ra,0(sp)
 812c344:	dec00404 	addi	sp,sp,16
 812c348:	f800283a 	ret

0812c34c <_puts_r>:
 812c34c:	defff604 	addi	sp,sp,-40
 812c350:	dc000715 	stw	r16,28(sp)
 812c354:	2021883a 	mov	r16,r4
 812c358:	2809883a 	mov	r4,r5
 812c35c:	dc400815 	stw	r17,32(sp)
 812c360:	dfc00915 	stw	ra,36(sp)
 812c364:	2823883a 	mov	r17,r5
 812c368:	812c4200 	call	812c420 <strlen>
 812c36c:	10c00044 	addi	r3,r2,1
 812c370:	d8800115 	stw	r2,4(sp)
 812c374:	00820534 	movhi	r2,2068
 812c378:	10aece04 	addi	r2,r2,-17608
 812c37c:	d8800215 	stw	r2,8(sp)
 812c380:	00800044 	movi	r2,1
 812c384:	d8800315 	stw	r2,12(sp)
 812c388:	00800084 	movi	r2,2
 812c38c:	dc400015 	stw	r17,0(sp)
 812c390:	d8c00615 	stw	r3,24(sp)
 812c394:	dec00415 	stw	sp,16(sp)
 812c398:	d8800515 	stw	r2,20(sp)
 812c39c:	80000226 	beq	r16,zero,812c3a8 <_puts_r+0x5c>
 812c3a0:	80800e17 	ldw	r2,56(r16)
 812c3a4:	10001426 	beq	r2,zero,812c3f8 <_puts_r+0xac>
 812c3a8:	81400217 	ldw	r5,8(r16)
 812c3ac:	2880030b 	ldhu	r2,12(r5)
 812c3b0:	10c8000c 	andi	r3,r2,8192
 812c3b4:	1800061e 	bne	r3,zero,812c3d0 <_puts_r+0x84>
 812c3b8:	29001917 	ldw	r4,100(r5)
 812c3bc:	00f7ffc4 	movi	r3,-8193
 812c3c0:	10880014 	ori	r2,r2,8192
 812c3c4:	20c6703a 	and	r3,r4,r3
 812c3c8:	2880030d 	sth	r2,12(r5)
 812c3cc:	28c01915 	stw	r3,100(r5)
 812c3d0:	d9800404 	addi	r6,sp,16
 812c3d4:	8009883a 	mov	r4,r16
 812c3d8:	8130cfc0 	call	8130cfc <__sfvwrite_r>
 812c3dc:	1000091e 	bne	r2,zero,812c404 <_puts_r+0xb8>
 812c3e0:	00800284 	movi	r2,10
 812c3e4:	dfc00917 	ldw	ra,36(sp)
 812c3e8:	dc400817 	ldw	r17,32(sp)
 812c3ec:	dc000717 	ldw	r16,28(sp)
 812c3f0:	dec00a04 	addi	sp,sp,40
 812c3f4:	f800283a 	ret
 812c3f8:	8009883a 	mov	r4,r16
 812c3fc:	81308780 	call	8130878 <__sinit>
 812c400:	003fe906 	br	812c3a8 <__alt_data_end+0xfc12c3a8>
 812c404:	00bfffc4 	movi	r2,-1
 812c408:	003ff606 	br	812c3e4 <__alt_data_end+0xfc12c3e4>

0812c40c <puts>:
 812c40c:	00820534 	movhi	r2,2068
 812c410:	10b63c04 	addi	r2,r2,-10000
 812c414:	200b883a 	mov	r5,r4
 812c418:	11000017 	ldw	r4,0(r2)
 812c41c:	812c34c1 	jmpi	812c34c <_puts_r>

0812c420 <strlen>:
 812c420:	208000cc 	andi	r2,r4,3
 812c424:	10002026 	beq	r2,zero,812c4a8 <strlen+0x88>
 812c428:	20800007 	ldb	r2,0(r4)
 812c42c:	10002026 	beq	r2,zero,812c4b0 <strlen+0x90>
 812c430:	2005883a 	mov	r2,r4
 812c434:	00000206 	br	812c440 <strlen+0x20>
 812c438:	10c00007 	ldb	r3,0(r2)
 812c43c:	18001826 	beq	r3,zero,812c4a0 <strlen+0x80>
 812c440:	10800044 	addi	r2,r2,1
 812c444:	10c000cc 	andi	r3,r2,3
 812c448:	183ffb1e 	bne	r3,zero,812c438 <__alt_data_end+0xfc12c438>
 812c44c:	10c00017 	ldw	r3,0(r2)
 812c450:	01ffbff4 	movhi	r7,65279
 812c454:	39ffbfc4 	addi	r7,r7,-257
 812c458:	00ca303a 	nor	r5,zero,r3
 812c45c:	01a02074 	movhi	r6,32897
 812c460:	19c7883a 	add	r3,r3,r7
 812c464:	31a02004 	addi	r6,r6,-32640
 812c468:	1946703a 	and	r3,r3,r5
 812c46c:	1986703a 	and	r3,r3,r6
 812c470:	1800091e 	bne	r3,zero,812c498 <strlen+0x78>
 812c474:	10800104 	addi	r2,r2,4
 812c478:	10c00017 	ldw	r3,0(r2)
 812c47c:	19cb883a 	add	r5,r3,r7
 812c480:	00c6303a 	nor	r3,zero,r3
 812c484:	28c6703a 	and	r3,r5,r3
 812c488:	1986703a 	and	r3,r3,r6
 812c48c:	183ff926 	beq	r3,zero,812c474 <__alt_data_end+0xfc12c474>
 812c490:	00000106 	br	812c498 <strlen+0x78>
 812c494:	10800044 	addi	r2,r2,1
 812c498:	10c00007 	ldb	r3,0(r2)
 812c49c:	183ffd1e 	bne	r3,zero,812c494 <__alt_data_end+0xfc12c494>
 812c4a0:	1105c83a 	sub	r2,r2,r4
 812c4a4:	f800283a 	ret
 812c4a8:	2005883a 	mov	r2,r4
 812c4ac:	003fe706 	br	812c44c <__alt_data_end+0xfc12c44c>
 812c4b0:	0005883a 	mov	r2,zero
 812c4b4:	f800283a 	ret

0812c4b8 <___vfprintf_internal_r>:
 812c4b8:	deffb804 	addi	sp,sp,-288
 812c4bc:	dfc04715 	stw	ra,284(sp)
 812c4c0:	ddc04515 	stw	r23,276(sp)
 812c4c4:	dd404315 	stw	r21,268(sp)
 812c4c8:	d9002d15 	stw	r4,180(sp)
 812c4cc:	282f883a 	mov	r23,r5
 812c4d0:	302b883a 	mov	r21,r6
 812c4d4:	d9c02e15 	stw	r7,184(sp)
 812c4d8:	df004615 	stw	fp,280(sp)
 812c4dc:	dd804415 	stw	r22,272(sp)
 812c4e0:	dd004215 	stw	r20,264(sp)
 812c4e4:	dcc04115 	stw	r19,260(sp)
 812c4e8:	dc804015 	stw	r18,256(sp)
 812c4ec:	dc403f15 	stw	r17,252(sp)
 812c4f0:	dc003e15 	stw	r16,248(sp)
 812c4f4:	81313f80 	call	81313f8 <_localeconv_r>
 812c4f8:	10800017 	ldw	r2,0(r2)
 812c4fc:	1009883a 	mov	r4,r2
 812c500:	d8803415 	stw	r2,208(sp)
 812c504:	812c4200 	call	812c420 <strlen>
 812c508:	d8803715 	stw	r2,220(sp)
 812c50c:	d8802d17 	ldw	r2,180(sp)
 812c510:	10000226 	beq	r2,zero,812c51c <___vfprintf_internal_r+0x64>
 812c514:	10800e17 	ldw	r2,56(r2)
 812c518:	1000fb26 	beq	r2,zero,812c908 <___vfprintf_internal_r+0x450>
 812c51c:	b880030b 	ldhu	r2,12(r23)
 812c520:	10c8000c 	andi	r3,r2,8192
 812c524:	1800061e 	bne	r3,zero,812c540 <___vfprintf_internal_r+0x88>
 812c528:	b9001917 	ldw	r4,100(r23)
 812c52c:	00f7ffc4 	movi	r3,-8193
 812c530:	10880014 	ori	r2,r2,8192
 812c534:	20c6703a 	and	r3,r4,r3
 812c538:	b880030d 	sth	r2,12(r23)
 812c53c:	b8c01915 	stw	r3,100(r23)
 812c540:	10c0020c 	andi	r3,r2,8
 812c544:	1800c326 	beq	r3,zero,812c854 <___vfprintf_internal_r+0x39c>
 812c548:	b8c00417 	ldw	r3,16(r23)
 812c54c:	1800c126 	beq	r3,zero,812c854 <___vfprintf_internal_r+0x39c>
 812c550:	1080068c 	andi	r2,r2,26
 812c554:	00c00284 	movi	r3,10
 812c558:	10c0c626 	beq	r2,r3,812c874 <___vfprintf_internal_r+0x3bc>
 812c55c:	d8c00404 	addi	r3,sp,16
 812c560:	05020534 	movhi	r20,2068
 812c564:	d9001e04 	addi	r4,sp,120
 812c568:	a52edf84 	addi	r20,r20,-17538
 812c56c:	d8c01e15 	stw	r3,120(sp)
 812c570:	d8002015 	stw	zero,128(sp)
 812c574:	d8001f15 	stw	zero,124(sp)
 812c578:	d8003315 	stw	zero,204(sp)
 812c57c:	d8003615 	stw	zero,216(sp)
 812c580:	d8003815 	stw	zero,224(sp)
 812c584:	1811883a 	mov	r8,r3
 812c588:	d8003915 	stw	zero,228(sp)
 812c58c:	d8003a15 	stw	zero,232(sp)
 812c590:	d8002f15 	stw	zero,188(sp)
 812c594:	d9002815 	stw	r4,160(sp)
 812c598:	a8800007 	ldb	r2,0(r21)
 812c59c:	10028b26 	beq	r2,zero,812cfcc <___vfprintf_internal_r+0xb14>
 812c5a0:	00c00944 	movi	r3,37
 812c5a4:	a823883a 	mov	r17,r21
 812c5a8:	10c0021e 	bne	r2,r3,812c5b4 <___vfprintf_internal_r+0xfc>
 812c5ac:	00001406 	br	812c600 <___vfprintf_internal_r+0x148>
 812c5b0:	10c00326 	beq	r2,r3,812c5c0 <___vfprintf_internal_r+0x108>
 812c5b4:	8c400044 	addi	r17,r17,1
 812c5b8:	88800007 	ldb	r2,0(r17)
 812c5bc:	103ffc1e 	bne	r2,zero,812c5b0 <__alt_data_end+0xfc12c5b0>
 812c5c0:	8d61c83a 	sub	r16,r17,r21
 812c5c4:	80000e26 	beq	r16,zero,812c600 <___vfprintf_internal_r+0x148>
 812c5c8:	d8c02017 	ldw	r3,128(sp)
 812c5cc:	d8801f17 	ldw	r2,124(sp)
 812c5d0:	45400015 	stw	r21,0(r8)
 812c5d4:	1c07883a 	add	r3,r3,r16
 812c5d8:	10800044 	addi	r2,r2,1
 812c5dc:	d8c02015 	stw	r3,128(sp)
 812c5e0:	44000115 	stw	r16,4(r8)
 812c5e4:	d8801f15 	stw	r2,124(sp)
 812c5e8:	00c001c4 	movi	r3,7
 812c5ec:	1880a916 	blt	r3,r2,812c894 <___vfprintf_internal_r+0x3dc>
 812c5f0:	42000204 	addi	r8,r8,8
 812c5f4:	d9402f17 	ldw	r5,188(sp)
 812c5f8:	2c0b883a 	add	r5,r5,r16
 812c5fc:	d9402f15 	stw	r5,188(sp)
 812c600:	88800007 	ldb	r2,0(r17)
 812c604:	1000aa26 	beq	r2,zero,812c8b0 <___vfprintf_internal_r+0x3f8>
 812c608:	8d400044 	addi	r21,r17,1
 812c60c:	8c400047 	ldb	r17,1(r17)
 812c610:	0021883a 	mov	r16,zero
 812c614:	00bfffc4 	movi	r2,-1
 812c618:	0025883a 	mov	r18,zero
 812c61c:	dc002905 	stb	r16,164(sp)
 812c620:	d8002785 	stb	zero,158(sp)
 812c624:	d8002b05 	stb	zero,172(sp)
 812c628:	d8802a15 	stw	r2,168(sp)
 812c62c:	d8003115 	stw	zero,196(sp)
 812c630:	04c01604 	movi	r19,88
 812c634:	05800244 	movi	r22,9
 812c638:	9021883a 	mov	r16,r18
 812c63c:	4039883a 	mov	fp,r8
 812c640:	ad400044 	addi	r21,r21,1
 812c644:	88bff804 	addi	r2,r17,-32
 812c648:	98833236 	bltu	r19,r2,812d314 <___vfprintf_internal_r+0xe5c>
 812c64c:	100490ba 	slli	r2,r2,2
 812c650:	00c204f4 	movhi	r3,2067
 812c654:	18f19904 	addi	r3,r3,-14748
 812c658:	10c5883a 	add	r2,r2,r3
 812c65c:	10800017 	ldw	r2,0(r2)
 812c660:	1000683a 	jmp	r2
 812c664:	0812d20c 	andi	zero,at,19272
 812c668:	0812d314 	ori	zero,at,19276
 812c66c:	0812d314 	ori	zero,at,19276
 812c670:	0812d22c 	andhi	zero,at,19272
 812c674:	0812d314 	ori	zero,at,19276
 812c678:	0812d314 	ori	zero,at,19276
 812c67c:	0812d314 	ori	zero,at,19276
 812c680:	0812d314 	ori	zero,at,19276
 812c684:	0812d314 	ori	zero,at,19276
 812c688:	0812d314 	ori	zero,at,19276
 812c68c:	0812c914 	ori	zero,at,19236
 812c690:	0812d11c 	xori	zero,at,19268
 812c694:	0812d314 	ori	zero,at,19276
 812c698:	0812c7d8 	cmpnei	zero,at,19231
 812c69c:	0812c938 	rdprs	zero,at,19236
 812c6a0:	0812d314 	ori	zero,at,19276
 812c6a4:	0812c988 	cmpgei	zero,at,19238
 812c6a8:	0812c994 	ori	zero,at,19238
 812c6ac:	0812c994 	ori	zero,at,19238
 812c6b0:	0812c994 	ori	zero,at,19238
 812c6b4:	0812c994 	ori	zero,at,19238
 812c6b8:	0812c994 	ori	zero,at,19238
 812c6bc:	0812c994 	ori	zero,at,19238
 812c6c0:	0812c994 	ori	zero,at,19238
 812c6c4:	0812c994 	ori	zero,at,19238
 812c6c8:	0812c994 	ori	zero,at,19238
 812c6cc:	0812d314 	ori	zero,at,19276
 812c6d0:	0812d314 	ori	zero,at,19276
 812c6d4:	0812d314 	ori	zero,at,19276
 812c6d8:	0812d314 	ori	zero,at,19276
 812c6dc:	0812d314 	ori	zero,at,19276
 812c6e0:	0812d314 	ori	zero,at,19276
 812c6e4:	0812d314 	ori	zero,at,19276
 812c6e8:	0812d314 	ori	zero,at,19276
 812c6ec:	0812d314 	ori	zero,at,19276
 812c6f0:	0812d314 	ori	zero,at,19276
 812c6f4:	0812c9d0 	cmplti	zero,at,19239
 812c6f8:	0812ca98 	cmpnei	zero,at,19242
 812c6fc:	0812d314 	ori	zero,at,19276
 812c700:	0812ca98 	cmpnei	zero,at,19242
 812c704:	0812d314 	ori	zero,at,19276
 812c708:	0812d314 	ori	zero,at,19276
 812c70c:	0812d314 	ori	zero,at,19276
 812c710:	0812d314 	ori	zero,at,19276
 812c714:	0812cb44 	addi	zero,at,19245
 812c718:	0812d314 	ori	zero,at,19276
 812c71c:	0812d314 	ori	zero,at,19276
 812c720:	0812cb50 	cmplti	zero,at,19245
 812c724:	0812d314 	ori	zero,at,19276
 812c728:	0812d314 	ori	zero,at,19276
 812c72c:	0812d314 	ori	zero,at,19276
 812c730:	0812d314 	ori	zero,at,19276
 812c734:	0812d314 	ori	zero,at,19276
 812c738:	0812cfd4 	ori	zero,at,19263
 812c73c:	0812d314 	ori	zero,at,19276
 812c740:	0812d314 	ori	zero,at,19276
 812c744:	0812d040 	call	812d04 <__ram_exceptions_end+0x812ad4>
 812c748:	0812d314 	ori	zero,at,19276
 812c74c:	0812d314 	ori	zero,at,19276
 812c750:	0812d314 	ori	zero,at,19276
 812c754:	0812d314 	ori	zero,at,19276
 812c758:	0812d314 	ori	zero,at,19276
 812c75c:	0812d314 	ori	zero,at,19276
 812c760:	0812d314 	ori	zero,at,19276
 812c764:	0812d314 	ori	zero,at,19276
 812c768:	0812d314 	ori	zero,at,19276
 812c76c:	0812d314 	ori	zero,at,19276
 812c770:	0812d2b8 	rdprs	zero,at,19274
 812c774:	0812d238 	rdprs	zero,at,19272
 812c778:	0812ca98 	cmpnei	zero,at,19242
 812c77c:	0812ca98 	cmpnei	zero,at,19242
 812c780:	0812ca98 	cmpnei	zero,at,19242
 812c784:	0812d258 	cmpnei	zero,at,19273
 812c788:	0812d238 	rdprs	zero,at,19272
 812c78c:	0812d314 	ori	zero,at,19276
 812c790:	0812d314 	ori	zero,at,19276
 812c794:	0812d264 	muli	zero,at,19273
 812c798:	0812d314 	ori	zero,at,19276
 812c79c:	0812d278 	rdprs	zero,at,19273
 812c7a0:	0812d0fc 	xorhi	zero,at,19267
 812c7a4:	0812c7e4 	muli	zero,at,19231
 812c7a8:	0812d134 	orhi	zero,at,19268
 812c7ac:	0812d314 	ori	zero,at,19276
 812c7b0:	0812d140 	call	812d14 <__ram_exceptions_end+0x812ae4>
 812c7b4:	0812d314 	ori	zero,at,19276
 812c7b8:	0812d1a4 	muli	zero,at,19270
 812c7bc:	0812d314 	ori	zero,at,19276
 812c7c0:	0812d314 	ori	zero,at,19276
 812c7c4:	0812d1c4 	addi	zero,at,19271
 812c7c8:	d8c03117 	ldw	r3,196(sp)
 812c7cc:	d8802e15 	stw	r2,184(sp)
 812c7d0:	00c7c83a 	sub	r3,zero,r3
 812c7d4:	d8c03115 	stw	r3,196(sp)
 812c7d8:	84000114 	ori	r16,r16,4
 812c7dc:	ac400007 	ldb	r17,0(r21)
 812c7e0:	003f9706 	br	812c640 <__alt_data_end+0xfc12c640>
 812c7e4:	00800c04 	movi	r2,48
 812c7e8:	d8802705 	stb	r2,156(sp)
 812c7ec:	00801e04 	movi	r2,120
 812c7f0:	d8802745 	stb	r2,157(sp)
 812c7f4:	d9002a17 	ldw	r4,168(sp)
 812c7f8:	d8802e17 	ldw	r2,184(sp)
 812c7fc:	d8002785 	stb	zero,158(sp)
 812c800:	e011883a 	mov	r8,fp
 812c804:	10c00104 	addi	r3,r2,4
 812c808:	14c00017 	ldw	r19,0(r2)
 812c80c:	002d883a 	mov	r22,zero
 812c810:	80800094 	ori	r2,r16,2
 812c814:	2002ca16 	blt	r4,zero,812d340 <___vfprintf_internal_r+0xe88>
 812c818:	00bfdfc4 	movi	r2,-129
 812c81c:	80a4703a 	and	r18,r16,r2
 812c820:	d8c02e15 	stw	r3,184(sp)
 812c824:	94800094 	ori	r18,r18,2
 812c828:	9802b41e 	bne	r19,zero,812d2fc <___vfprintf_internal_r+0xe44>
 812c82c:	01420534 	movhi	r5,2068
 812c830:	296ed804 	addi	r5,r5,-17568
 812c834:	d9403915 	stw	r5,228(sp)
 812c838:	04401e04 	movi	r17,120
 812c83c:	d8802a17 	ldw	r2,168(sp)
 812c840:	0039883a 	mov	fp,zero
 812c844:	1001fa26 	beq	r2,zero,812d030 <___vfprintf_internal_r+0xb78>
 812c848:	0027883a 	mov	r19,zero
 812c84c:	002d883a 	mov	r22,zero
 812c850:	00021906 	br	812d0b8 <___vfprintf_internal_r+0xc00>
 812c854:	d9002d17 	ldw	r4,180(sp)
 812c858:	b80b883a 	mov	r5,r23
 812c85c:	812e86c0 	call	812e86c <__swsetup_r>
 812c860:	1005dc1e 	bne	r2,zero,812dfd4 <___vfprintf_internal_r+0x1b1c>
 812c864:	b880030b 	ldhu	r2,12(r23)
 812c868:	00c00284 	movi	r3,10
 812c86c:	1080068c 	andi	r2,r2,26
 812c870:	10ff3a1e 	bne	r2,r3,812c55c <__alt_data_end+0xfc12c55c>
 812c874:	b880038f 	ldh	r2,14(r23)
 812c878:	103f3816 	blt	r2,zero,812c55c <__alt_data_end+0xfc12c55c>
 812c87c:	d9c02e17 	ldw	r7,184(sp)
 812c880:	d9002d17 	ldw	r4,180(sp)
 812c884:	a80d883a 	mov	r6,r21
 812c888:	b80b883a 	mov	r5,r23
 812c88c:	812e7b00 	call	812e7b0 <__sbprintf>
 812c890:	00001106 	br	812c8d8 <___vfprintf_internal_r+0x420>
 812c894:	d9002d17 	ldw	r4,180(sp)
 812c898:	d9801e04 	addi	r6,sp,120
 812c89c:	b80b883a 	mov	r5,r23
 812c8a0:	8133c980 	call	8133c98 <__sprint_r>
 812c8a4:	1000081e 	bne	r2,zero,812c8c8 <___vfprintf_internal_r+0x410>
 812c8a8:	da000404 	addi	r8,sp,16
 812c8ac:	003f5106 	br	812c5f4 <__alt_data_end+0xfc12c5f4>
 812c8b0:	d8802017 	ldw	r2,128(sp)
 812c8b4:	10000426 	beq	r2,zero,812c8c8 <___vfprintf_internal_r+0x410>
 812c8b8:	d9002d17 	ldw	r4,180(sp)
 812c8bc:	d9801e04 	addi	r6,sp,120
 812c8c0:	b80b883a 	mov	r5,r23
 812c8c4:	8133c980 	call	8133c98 <__sprint_r>
 812c8c8:	b880030b 	ldhu	r2,12(r23)
 812c8cc:	1080100c 	andi	r2,r2,64
 812c8d0:	1005c01e 	bne	r2,zero,812dfd4 <___vfprintf_internal_r+0x1b1c>
 812c8d4:	d8802f17 	ldw	r2,188(sp)
 812c8d8:	dfc04717 	ldw	ra,284(sp)
 812c8dc:	df004617 	ldw	fp,280(sp)
 812c8e0:	ddc04517 	ldw	r23,276(sp)
 812c8e4:	dd804417 	ldw	r22,272(sp)
 812c8e8:	dd404317 	ldw	r21,268(sp)
 812c8ec:	dd004217 	ldw	r20,264(sp)
 812c8f0:	dcc04117 	ldw	r19,260(sp)
 812c8f4:	dc804017 	ldw	r18,256(sp)
 812c8f8:	dc403f17 	ldw	r17,252(sp)
 812c8fc:	dc003e17 	ldw	r16,248(sp)
 812c900:	dec04804 	addi	sp,sp,288
 812c904:	f800283a 	ret
 812c908:	d9002d17 	ldw	r4,180(sp)
 812c90c:	81308780 	call	8130878 <__sinit>
 812c910:	003f0206 	br	812c51c <__alt_data_end+0xfc12c51c>
 812c914:	d9002e17 	ldw	r4,184(sp)
 812c918:	d9402e17 	ldw	r5,184(sp)
 812c91c:	21000017 	ldw	r4,0(r4)
 812c920:	28800104 	addi	r2,r5,4
 812c924:	d9003115 	stw	r4,196(sp)
 812c928:	203fa716 	blt	r4,zero,812c7c8 <__alt_data_end+0xfc12c7c8>
 812c92c:	d8802e15 	stw	r2,184(sp)
 812c930:	ac400007 	ldb	r17,0(r21)
 812c934:	003f4206 	br	812c640 <__alt_data_end+0xfc12c640>
 812c938:	ac400007 	ldb	r17,0(r21)
 812c93c:	01000a84 	movi	r4,42
 812c940:	a8c00044 	addi	r3,r21,1
 812c944:	89075826 	beq	r17,r4,812e6a8 <___vfprintf_internal_r+0x21f0>
 812c948:	8cbff404 	addi	r18,r17,-48
 812c94c:	b486ae36 	bltu	r22,r18,812e408 <___vfprintf_internal_r+0x1f50>
 812c950:	0009883a 	mov	r4,zero
 812c954:	1823883a 	mov	r17,r3
 812c958:	01400284 	movi	r5,10
 812c95c:	812c2b80 	call	812c2b8 <__mulsi3>
 812c960:	88c00007 	ldb	r3,0(r17)
 812c964:	1489883a 	add	r4,r2,r18
 812c968:	8d400044 	addi	r21,r17,1
 812c96c:	1cbff404 	addi	r18,r3,-48
 812c970:	a823883a 	mov	r17,r21
 812c974:	b4bff82e 	bgeu	r22,r18,812c958 <__alt_data_end+0xfc12c958>
 812c978:	1823883a 	mov	r17,r3
 812c97c:	2005f616 	blt	r4,zero,812e158 <___vfprintf_internal_r+0x1ca0>
 812c980:	d9002a15 	stw	r4,168(sp)
 812c984:	003f2f06 	br	812c644 <__alt_data_end+0xfc12c644>
 812c988:	84002014 	ori	r16,r16,128
 812c98c:	ac400007 	ldb	r17,0(r21)
 812c990:	003f2b06 	br	812c640 <__alt_data_end+0xfc12c640>
 812c994:	8cbff404 	addi	r18,r17,-48
 812c998:	d8003115 	stw	zero,196(sp)
 812c99c:	0009883a 	mov	r4,zero
 812c9a0:	a823883a 	mov	r17,r21
 812c9a4:	01400284 	movi	r5,10
 812c9a8:	812c2b80 	call	812c2b8 <__mulsi3>
 812c9ac:	88c00007 	ldb	r3,0(r17)
 812c9b0:	9089883a 	add	r4,r18,r2
 812c9b4:	ad400044 	addi	r21,r21,1
 812c9b8:	1cbff404 	addi	r18,r3,-48
 812c9bc:	a823883a 	mov	r17,r21
 812c9c0:	b4bff82e 	bgeu	r22,r18,812c9a4 <__alt_data_end+0xfc12c9a4>
 812c9c4:	1823883a 	mov	r17,r3
 812c9c8:	d9003115 	stw	r4,196(sp)
 812c9cc:	003f1d06 	br	812c644 <__alt_data_end+0xfc12c644>
 812c9d0:	8025883a 	mov	r18,r16
 812c9d4:	dc002903 	ldbu	r16,164(sp)
 812c9d8:	e011883a 	mov	r8,fp
 812c9dc:	84003fcc 	andi	r16,r16,255
 812c9e0:	8007531e 	bne	r16,zero,812e730 <___vfprintf_internal_r+0x2278>
 812c9e4:	94800414 	ori	r18,r18,16
 812c9e8:	9080080c 	andi	r2,r18,32
 812c9ec:	1003a326 	beq	r2,zero,812d87c <___vfprintf_internal_r+0x13c4>
 812c9f0:	d9002e17 	ldw	r4,184(sp)
 812c9f4:	20800117 	ldw	r2,4(r4)
 812c9f8:	24c00017 	ldw	r19,0(r4)
 812c9fc:	21000204 	addi	r4,r4,8
 812ca00:	d9002e15 	stw	r4,184(sp)
 812ca04:	102d883a 	mov	r22,r2
 812ca08:	10047316 	blt	r2,zero,812dbd8 <___vfprintf_internal_r+0x1720>
 812ca0c:	d9002a17 	ldw	r4,168(sp)
 812ca10:	df002783 	ldbu	fp,158(sp)
 812ca14:	2003e416 	blt	r4,zero,812d9a8 <___vfprintf_internal_r+0x14f0>
 812ca18:	00ffdfc4 	movi	r3,-129
 812ca1c:	9d84b03a 	or	r2,r19,r22
 812ca20:	90e4703a 	and	r18,r18,r3
 812ca24:	10018026 	beq	r2,zero,812d028 <___vfprintf_internal_r+0xb70>
 812ca28:	b003ab26 	beq	r22,zero,812d8d8 <___vfprintf_internal_r+0x1420>
 812ca2c:	dc402915 	stw	r17,164(sp)
 812ca30:	dc001e04 	addi	r16,sp,120
 812ca34:	b023883a 	mov	r17,r22
 812ca38:	402d883a 	mov	r22,r8
 812ca3c:	9809883a 	mov	r4,r19
 812ca40:	880b883a 	mov	r5,r17
 812ca44:	01800284 	movi	r6,10
 812ca48:	000f883a 	mov	r7,zero
 812ca4c:	81361dc0 	call	81361dc <__umoddi3>
 812ca50:	10800c04 	addi	r2,r2,48
 812ca54:	843fffc4 	addi	r16,r16,-1
 812ca58:	9809883a 	mov	r4,r19
 812ca5c:	880b883a 	mov	r5,r17
 812ca60:	80800005 	stb	r2,0(r16)
 812ca64:	01800284 	movi	r6,10
 812ca68:	000f883a 	mov	r7,zero
 812ca6c:	8135be00 	call	8135be0 <__udivdi3>
 812ca70:	1027883a 	mov	r19,r2
 812ca74:	10c4b03a 	or	r2,r2,r3
 812ca78:	1823883a 	mov	r17,r3
 812ca7c:	103fef1e 	bne	r2,zero,812ca3c <__alt_data_end+0xfc12ca3c>
 812ca80:	d8c02817 	ldw	r3,160(sp)
 812ca84:	dc402917 	ldw	r17,164(sp)
 812ca88:	b011883a 	mov	r8,r22
 812ca8c:	1c07c83a 	sub	r3,r3,r16
 812ca90:	d8c02b15 	stw	r3,172(sp)
 812ca94:	00005f06 	br	812cc14 <___vfprintf_internal_r+0x75c>
 812ca98:	8025883a 	mov	r18,r16
 812ca9c:	dc002903 	ldbu	r16,164(sp)
 812caa0:	e011883a 	mov	r8,fp
 812caa4:	84003fcc 	andi	r16,r16,255
 812caa8:	80071e1e 	bne	r16,zero,812e724 <___vfprintf_internal_r+0x226c>
 812caac:	9080020c 	andi	r2,r18,8
 812cab0:	1004af26 	beq	r2,zero,812dd70 <___vfprintf_internal_r+0x18b8>
 812cab4:	d9002e17 	ldw	r4,184(sp)
 812cab8:	d9402e17 	ldw	r5,184(sp)
 812cabc:	d8802e17 	ldw	r2,184(sp)
 812cac0:	21000017 	ldw	r4,0(r4)
 812cac4:	29400117 	ldw	r5,4(r5)
 812cac8:	10800204 	addi	r2,r2,8
 812cacc:	d9003615 	stw	r4,216(sp)
 812cad0:	d9403815 	stw	r5,224(sp)
 812cad4:	d8802e15 	stw	r2,184(sp)
 812cad8:	d9003617 	ldw	r4,216(sp)
 812cadc:	d9403817 	ldw	r5,224(sp)
 812cae0:	da003d15 	stw	r8,244(sp)
 812cae4:	04000044 	movi	r16,1
 812cae8:	81338bc0 	call	81338bc <__fpclassifyd>
 812caec:	da003d17 	ldw	r8,244(sp)
 812caf0:	1404441e 	bne	r2,r16,812dc04 <___vfprintf_internal_r+0x174c>
 812caf4:	d9003617 	ldw	r4,216(sp)
 812caf8:	d9403817 	ldw	r5,224(sp)
 812cafc:	000d883a 	mov	r6,zero
 812cb00:	000f883a 	mov	r7,zero
 812cb04:	8137d340 	call	8137d34 <__ledf2>
 812cb08:	da003d17 	ldw	r8,244(sp)
 812cb0c:	1005e316 	blt	r2,zero,812e29c <___vfprintf_internal_r+0x1de4>
 812cb10:	df002783 	ldbu	fp,158(sp)
 812cb14:	008011c4 	movi	r2,71
 812cb18:	1445580e 	bge	r2,r17,812e07c <___vfprintf_internal_r+0x1bc4>
 812cb1c:	04020534 	movhi	r16,2068
 812cb20:	842ed004 	addi	r16,r16,-17600
 812cb24:	00c000c4 	movi	r3,3
 812cb28:	00bfdfc4 	movi	r2,-129
 812cb2c:	d8c02915 	stw	r3,164(sp)
 812cb30:	90a4703a 	and	r18,r18,r2
 812cb34:	d8c02b15 	stw	r3,172(sp)
 812cb38:	d8002a15 	stw	zero,168(sp)
 812cb3c:	d8003215 	stw	zero,200(sp)
 812cb40:	00003a06 	br	812cc2c <___vfprintf_internal_r+0x774>
 812cb44:	84000214 	ori	r16,r16,8
 812cb48:	ac400007 	ldb	r17,0(r21)
 812cb4c:	003ebc06 	br	812c640 <__alt_data_end+0xfc12c640>
 812cb50:	8025883a 	mov	r18,r16
 812cb54:	dc002903 	ldbu	r16,164(sp)
 812cb58:	e011883a 	mov	r8,fp
 812cb5c:	84003fcc 	andi	r16,r16,255
 812cb60:	8007001e 	bne	r16,zero,812e764 <___vfprintf_internal_r+0x22ac>
 812cb64:	94800414 	ori	r18,r18,16
 812cb68:	9080080c 	andi	r2,r18,32
 812cb6c:	1002fa26 	beq	r2,zero,812d758 <___vfprintf_internal_r+0x12a0>
 812cb70:	d9002e17 	ldw	r4,184(sp)
 812cb74:	d9402a17 	ldw	r5,168(sp)
 812cb78:	d8002785 	stb	zero,158(sp)
 812cb7c:	20800204 	addi	r2,r4,8
 812cb80:	24c00017 	ldw	r19,0(r4)
 812cb84:	25800117 	ldw	r22,4(r4)
 812cb88:	2804b116 	blt	r5,zero,812de50 <___vfprintf_internal_r+0x1998>
 812cb8c:	013fdfc4 	movi	r4,-129
 812cb90:	9d86b03a 	or	r3,r19,r22
 812cb94:	d8802e15 	stw	r2,184(sp)
 812cb98:	9124703a 	and	r18,r18,r4
 812cb9c:	1802fb1e 	bne	r3,zero,812d78c <___vfprintf_internal_r+0x12d4>
 812cba0:	d8c02a17 	ldw	r3,168(sp)
 812cba4:	0039883a 	mov	fp,zero
 812cba8:	1805e526 	beq	r3,zero,812e340 <___vfprintf_internal_r+0x1e88>
 812cbac:	0027883a 	mov	r19,zero
 812cbb0:	002d883a 	mov	r22,zero
 812cbb4:	dc001e04 	addi	r16,sp,120
 812cbb8:	9806d0fa 	srli	r3,r19,3
 812cbbc:	b008977a 	slli	r4,r22,29
 812cbc0:	b02cd0fa 	srli	r22,r22,3
 812cbc4:	9cc001cc 	andi	r19,r19,7
 812cbc8:	98800c04 	addi	r2,r19,48
 812cbcc:	843fffc4 	addi	r16,r16,-1
 812cbd0:	20e6b03a 	or	r19,r4,r3
 812cbd4:	80800005 	stb	r2,0(r16)
 812cbd8:	9d86b03a 	or	r3,r19,r22
 812cbdc:	183ff61e 	bne	r3,zero,812cbb8 <__alt_data_end+0xfc12cbb8>
 812cbe0:	90c0004c 	andi	r3,r18,1
 812cbe4:	18014126 	beq	r3,zero,812d0ec <___vfprintf_internal_r+0xc34>
 812cbe8:	10803fcc 	andi	r2,r2,255
 812cbec:	1080201c 	xori	r2,r2,128
 812cbf0:	10bfe004 	addi	r2,r2,-128
 812cbf4:	00c00c04 	movi	r3,48
 812cbf8:	10c13c26 	beq	r2,r3,812d0ec <___vfprintf_internal_r+0xc34>
 812cbfc:	80ffffc5 	stb	r3,-1(r16)
 812cc00:	d8c02817 	ldw	r3,160(sp)
 812cc04:	80bfffc4 	addi	r2,r16,-1
 812cc08:	1021883a 	mov	r16,r2
 812cc0c:	1887c83a 	sub	r3,r3,r2
 812cc10:	d8c02b15 	stw	r3,172(sp)
 812cc14:	d8802b17 	ldw	r2,172(sp)
 812cc18:	d9002a17 	ldw	r4,168(sp)
 812cc1c:	1100010e 	bge	r2,r4,812cc24 <___vfprintf_internal_r+0x76c>
 812cc20:	2005883a 	mov	r2,r4
 812cc24:	d8802915 	stw	r2,164(sp)
 812cc28:	d8003215 	stw	zero,200(sp)
 812cc2c:	e7003fcc 	andi	fp,fp,255
 812cc30:	e700201c 	xori	fp,fp,128
 812cc34:	e73fe004 	addi	fp,fp,-128
 812cc38:	e0000326 	beq	fp,zero,812cc48 <___vfprintf_internal_r+0x790>
 812cc3c:	d8c02917 	ldw	r3,164(sp)
 812cc40:	18c00044 	addi	r3,r3,1
 812cc44:	d8c02915 	stw	r3,164(sp)
 812cc48:	90c0008c 	andi	r3,r18,2
 812cc4c:	d8c02c15 	stw	r3,176(sp)
 812cc50:	18000326 	beq	r3,zero,812cc60 <___vfprintf_internal_r+0x7a8>
 812cc54:	d8c02917 	ldw	r3,164(sp)
 812cc58:	18c00084 	addi	r3,r3,2
 812cc5c:	d8c02915 	stw	r3,164(sp)
 812cc60:	90c0210c 	andi	r3,r18,132
 812cc64:	d8c03015 	stw	r3,192(sp)
 812cc68:	1801c51e 	bne	r3,zero,812d380 <___vfprintf_internal_r+0xec8>
 812cc6c:	d9003117 	ldw	r4,196(sp)
 812cc70:	d8c02917 	ldw	r3,164(sp)
 812cc74:	20e7c83a 	sub	r19,r4,r3
 812cc78:	04c1c10e 	bge	zero,r19,812d380 <___vfprintf_internal_r+0xec8>
 812cc7c:	02400404 	movi	r9,16
 812cc80:	d8c02017 	ldw	r3,128(sp)
 812cc84:	d8801f17 	ldw	r2,124(sp)
 812cc88:	4cc52f0e 	bge	r9,r19,812e148 <___vfprintf_internal_r+0x1c90>
 812cc8c:	01420534 	movhi	r5,2068
 812cc90:	296ee384 	addi	r5,r5,-17522
 812cc94:	dc403b15 	stw	r17,236(sp)
 812cc98:	d9403515 	stw	r5,212(sp)
 812cc9c:	9823883a 	mov	r17,r19
 812cca0:	482d883a 	mov	r22,r9
 812cca4:	9027883a 	mov	r19,r18
 812cca8:	070001c4 	movi	fp,7
 812ccac:	8025883a 	mov	r18,r16
 812ccb0:	dc002d17 	ldw	r16,180(sp)
 812ccb4:	00000306 	br	812ccc4 <___vfprintf_internal_r+0x80c>
 812ccb8:	8c7ffc04 	addi	r17,r17,-16
 812ccbc:	42000204 	addi	r8,r8,8
 812ccc0:	b440130e 	bge	r22,r17,812cd10 <___vfprintf_internal_r+0x858>
 812ccc4:	01020534 	movhi	r4,2068
 812ccc8:	18c00404 	addi	r3,r3,16
 812cccc:	10800044 	addi	r2,r2,1
 812ccd0:	212ee384 	addi	r4,r4,-17522
 812ccd4:	41000015 	stw	r4,0(r8)
 812ccd8:	45800115 	stw	r22,4(r8)
 812ccdc:	d8c02015 	stw	r3,128(sp)
 812cce0:	d8801f15 	stw	r2,124(sp)
 812cce4:	e0bff40e 	bge	fp,r2,812ccb8 <__alt_data_end+0xfc12ccb8>
 812cce8:	d9801e04 	addi	r6,sp,120
 812ccec:	b80b883a 	mov	r5,r23
 812ccf0:	8009883a 	mov	r4,r16
 812ccf4:	8133c980 	call	8133c98 <__sprint_r>
 812ccf8:	103ef31e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812ccfc:	8c7ffc04 	addi	r17,r17,-16
 812cd00:	d8c02017 	ldw	r3,128(sp)
 812cd04:	d8801f17 	ldw	r2,124(sp)
 812cd08:	da000404 	addi	r8,sp,16
 812cd0c:	b47fed16 	blt	r22,r17,812ccc4 <__alt_data_end+0xfc12ccc4>
 812cd10:	9021883a 	mov	r16,r18
 812cd14:	9825883a 	mov	r18,r19
 812cd18:	8827883a 	mov	r19,r17
 812cd1c:	dc403b17 	ldw	r17,236(sp)
 812cd20:	d9403517 	ldw	r5,212(sp)
 812cd24:	98c7883a 	add	r3,r19,r3
 812cd28:	10800044 	addi	r2,r2,1
 812cd2c:	41400015 	stw	r5,0(r8)
 812cd30:	44c00115 	stw	r19,4(r8)
 812cd34:	d8c02015 	stw	r3,128(sp)
 812cd38:	d8801f15 	stw	r2,124(sp)
 812cd3c:	010001c4 	movi	r4,7
 812cd40:	2082c516 	blt	r4,r2,812d858 <___vfprintf_internal_r+0x13a0>
 812cd44:	df002787 	ldb	fp,158(sp)
 812cd48:	42000204 	addi	r8,r8,8
 812cd4c:	e0000c26 	beq	fp,zero,812cd80 <___vfprintf_internal_r+0x8c8>
 812cd50:	d8801f17 	ldw	r2,124(sp)
 812cd54:	d9002784 	addi	r4,sp,158
 812cd58:	18c00044 	addi	r3,r3,1
 812cd5c:	10800044 	addi	r2,r2,1
 812cd60:	41000015 	stw	r4,0(r8)
 812cd64:	01000044 	movi	r4,1
 812cd68:	41000115 	stw	r4,4(r8)
 812cd6c:	d8c02015 	stw	r3,128(sp)
 812cd70:	d8801f15 	stw	r2,124(sp)
 812cd74:	010001c4 	movi	r4,7
 812cd78:	20825e16 	blt	r4,r2,812d6f4 <___vfprintf_internal_r+0x123c>
 812cd7c:	42000204 	addi	r8,r8,8
 812cd80:	d8802c17 	ldw	r2,176(sp)
 812cd84:	10000c26 	beq	r2,zero,812cdb8 <___vfprintf_internal_r+0x900>
 812cd88:	d8801f17 	ldw	r2,124(sp)
 812cd8c:	d9002704 	addi	r4,sp,156
 812cd90:	18c00084 	addi	r3,r3,2
 812cd94:	10800044 	addi	r2,r2,1
 812cd98:	41000015 	stw	r4,0(r8)
 812cd9c:	01000084 	movi	r4,2
 812cda0:	41000115 	stw	r4,4(r8)
 812cda4:	d8c02015 	stw	r3,128(sp)
 812cda8:	d8801f15 	stw	r2,124(sp)
 812cdac:	010001c4 	movi	r4,7
 812cdb0:	20825816 	blt	r4,r2,812d714 <___vfprintf_internal_r+0x125c>
 812cdb4:	42000204 	addi	r8,r8,8
 812cdb8:	d9003017 	ldw	r4,192(sp)
 812cdbc:	00802004 	movi	r2,128
 812cdc0:	2081bb26 	beq	r4,r2,812d4b0 <___vfprintf_internal_r+0xff8>
 812cdc4:	d9402a17 	ldw	r5,168(sp)
 812cdc8:	d8802b17 	ldw	r2,172(sp)
 812cdcc:	28adc83a 	sub	r22,r5,r2
 812cdd0:	0580310e 	bge	zero,r22,812ce98 <___vfprintf_internal_r+0x9e0>
 812cdd4:	07000404 	movi	fp,16
 812cdd8:	d8801f17 	ldw	r2,124(sp)
 812cddc:	e584360e 	bge	fp,r22,812deb8 <___vfprintf_internal_r+0x1a00>
 812cde0:	01420534 	movhi	r5,2068
 812cde4:	296edf84 	addi	r5,r5,-17538
 812cde8:	dc402a15 	stw	r17,168(sp)
 812cdec:	d9402c15 	stw	r5,176(sp)
 812cdf0:	b023883a 	mov	r17,r22
 812cdf4:	04c001c4 	movi	r19,7
 812cdf8:	a82d883a 	mov	r22,r21
 812cdfc:	902b883a 	mov	r21,r18
 812ce00:	8025883a 	mov	r18,r16
 812ce04:	dc002d17 	ldw	r16,180(sp)
 812ce08:	00000306 	br	812ce18 <___vfprintf_internal_r+0x960>
 812ce0c:	8c7ffc04 	addi	r17,r17,-16
 812ce10:	42000204 	addi	r8,r8,8
 812ce14:	e440110e 	bge	fp,r17,812ce5c <___vfprintf_internal_r+0x9a4>
 812ce18:	18c00404 	addi	r3,r3,16
 812ce1c:	10800044 	addi	r2,r2,1
 812ce20:	45000015 	stw	r20,0(r8)
 812ce24:	47000115 	stw	fp,4(r8)
 812ce28:	d8c02015 	stw	r3,128(sp)
 812ce2c:	d8801f15 	stw	r2,124(sp)
 812ce30:	98bff60e 	bge	r19,r2,812ce0c <__alt_data_end+0xfc12ce0c>
 812ce34:	d9801e04 	addi	r6,sp,120
 812ce38:	b80b883a 	mov	r5,r23
 812ce3c:	8009883a 	mov	r4,r16
 812ce40:	8133c980 	call	8133c98 <__sprint_r>
 812ce44:	103ea01e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812ce48:	8c7ffc04 	addi	r17,r17,-16
 812ce4c:	d8c02017 	ldw	r3,128(sp)
 812ce50:	d8801f17 	ldw	r2,124(sp)
 812ce54:	da000404 	addi	r8,sp,16
 812ce58:	e47fef16 	blt	fp,r17,812ce18 <__alt_data_end+0xfc12ce18>
 812ce5c:	9021883a 	mov	r16,r18
 812ce60:	a825883a 	mov	r18,r21
 812ce64:	b02b883a 	mov	r21,r22
 812ce68:	882d883a 	mov	r22,r17
 812ce6c:	dc402a17 	ldw	r17,168(sp)
 812ce70:	d9002c17 	ldw	r4,176(sp)
 812ce74:	1d87883a 	add	r3,r3,r22
 812ce78:	10800044 	addi	r2,r2,1
 812ce7c:	41000015 	stw	r4,0(r8)
 812ce80:	45800115 	stw	r22,4(r8)
 812ce84:	d8c02015 	stw	r3,128(sp)
 812ce88:	d8801f15 	stw	r2,124(sp)
 812ce8c:	010001c4 	movi	r4,7
 812ce90:	20821016 	blt	r4,r2,812d6d4 <___vfprintf_internal_r+0x121c>
 812ce94:	42000204 	addi	r8,r8,8
 812ce98:	9080400c 	andi	r2,r18,256
 812ce9c:	10013a1e 	bne	r2,zero,812d388 <___vfprintf_internal_r+0xed0>
 812cea0:	d9402b17 	ldw	r5,172(sp)
 812cea4:	d8801f17 	ldw	r2,124(sp)
 812cea8:	44000015 	stw	r16,0(r8)
 812ceac:	1947883a 	add	r3,r3,r5
 812ceb0:	10800044 	addi	r2,r2,1
 812ceb4:	41400115 	stw	r5,4(r8)
 812ceb8:	d8c02015 	stw	r3,128(sp)
 812cebc:	d8801f15 	stw	r2,124(sp)
 812cec0:	010001c4 	movi	r4,7
 812cec4:	2081f516 	blt	r4,r2,812d69c <___vfprintf_internal_r+0x11e4>
 812cec8:	42000204 	addi	r8,r8,8
 812cecc:	9480010c 	andi	r18,r18,4
 812ced0:	90003226 	beq	r18,zero,812cf9c <___vfprintf_internal_r+0xae4>
 812ced4:	d9403117 	ldw	r5,196(sp)
 812ced8:	d8802917 	ldw	r2,164(sp)
 812cedc:	28a1c83a 	sub	r16,r5,r2
 812cee0:	04002e0e 	bge	zero,r16,812cf9c <___vfprintf_internal_r+0xae4>
 812cee4:	04400404 	movi	r17,16
 812cee8:	d8801f17 	ldw	r2,124(sp)
 812ceec:	8c04c40e 	bge	r17,r16,812e200 <___vfprintf_internal_r+0x1d48>
 812cef0:	01420534 	movhi	r5,2068
 812cef4:	296ee384 	addi	r5,r5,-17522
 812cef8:	d9403515 	stw	r5,212(sp)
 812cefc:	048001c4 	movi	r18,7
 812cf00:	dcc02d17 	ldw	r19,180(sp)
 812cf04:	00000306 	br	812cf14 <___vfprintf_internal_r+0xa5c>
 812cf08:	843ffc04 	addi	r16,r16,-16
 812cf0c:	42000204 	addi	r8,r8,8
 812cf10:	8c00130e 	bge	r17,r16,812cf60 <___vfprintf_internal_r+0xaa8>
 812cf14:	01020534 	movhi	r4,2068
 812cf18:	18c00404 	addi	r3,r3,16
 812cf1c:	10800044 	addi	r2,r2,1
 812cf20:	212ee384 	addi	r4,r4,-17522
 812cf24:	41000015 	stw	r4,0(r8)
 812cf28:	44400115 	stw	r17,4(r8)
 812cf2c:	d8c02015 	stw	r3,128(sp)
 812cf30:	d8801f15 	stw	r2,124(sp)
 812cf34:	90bff40e 	bge	r18,r2,812cf08 <__alt_data_end+0xfc12cf08>
 812cf38:	d9801e04 	addi	r6,sp,120
 812cf3c:	b80b883a 	mov	r5,r23
 812cf40:	9809883a 	mov	r4,r19
 812cf44:	8133c980 	call	8133c98 <__sprint_r>
 812cf48:	103e5f1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812cf4c:	843ffc04 	addi	r16,r16,-16
 812cf50:	d8c02017 	ldw	r3,128(sp)
 812cf54:	d8801f17 	ldw	r2,124(sp)
 812cf58:	da000404 	addi	r8,sp,16
 812cf5c:	8c3fed16 	blt	r17,r16,812cf14 <__alt_data_end+0xfc12cf14>
 812cf60:	d9403517 	ldw	r5,212(sp)
 812cf64:	1c07883a 	add	r3,r3,r16
 812cf68:	10800044 	addi	r2,r2,1
 812cf6c:	41400015 	stw	r5,0(r8)
 812cf70:	44000115 	stw	r16,4(r8)
 812cf74:	d8c02015 	stw	r3,128(sp)
 812cf78:	d8801f15 	stw	r2,124(sp)
 812cf7c:	010001c4 	movi	r4,7
 812cf80:	2080060e 	bge	r4,r2,812cf9c <___vfprintf_internal_r+0xae4>
 812cf84:	d9002d17 	ldw	r4,180(sp)
 812cf88:	d9801e04 	addi	r6,sp,120
 812cf8c:	b80b883a 	mov	r5,r23
 812cf90:	8133c980 	call	8133c98 <__sprint_r>
 812cf94:	103e4c1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812cf98:	d8c02017 	ldw	r3,128(sp)
 812cf9c:	d8803117 	ldw	r2,196(sp)
 812cfa0:	d9002917 	ldw	r4,164(sp)
 812cfa4:	1100010e 	bge	r2,r4,812cfac <___vfprintf_internal_r+0xaf4>
 812cfa8:	2005883a 	mov	r2,r4
 812cfac:	d9402f17 	ldw	r5,188(sp)
 812cfb0:	288b883a 	add	r5,r5,r2
 812cfb4:	d9402f15 	stw	r5,188(sp)
 812cfb8:	1801c01e 	bne	r3,zero,812d6bc <___vfprintf_internal_r+0x1204>
 812cfbc:	a8800007 	ldb	r2,0(r21)
 812cfc0:	d8001f15 	stw	zero,124(sp)
 812cfc4:	da000404 	addi	r8,sp,16
 812cfc8:	103d751e 	bne	r2,zero,812c5a0 <__alt_data_end+0xfc12c5a0>
 812cfcc:	a823883a 	mov	r17,r21
 812cfd0:	003d8b06 	br	812c600 <__alt_data_end+0xfc12c600>
 812cfd4:	8025883a 	mov	r18,r16
 812cfd8:	dc002903 	ldbu	r16,164(sp)
 812cfdc:	e011883a 	mov	r8,fp
 812cfe0:	84003fcc 	andi	r16,r16,255
 812cfe4:	8005e51e 	bne	r16,zero,812e77c <___vfprintf_internal_r+0x22c4>
 812cfe8:	94800414 	ori	r18,r18,16
 812cfec:	9080080c 	andi	r2,r18,32
 812cff0:	10022b26 	beq	r2,zero,812d8a0 <___vfprintf_internal_r+0x13e8>
 812cff4:	d9002e17 	ldw	r4,184(sp)
 812cff8:	d9402a17 	ldw	r5,168(sp)
 812cffc:	d8002785 	stb	zero,158(sp)
 812d000:	20c00204 	addi	r3,r4,8
 812d004:	24c00017 	ldw	r19,0(r4)
 812d008:	25800117 	ldw	r22,4(r4)
 812d00c:	28042e16 	blt	r5,zero,812e0c8 <___vfprintf_internal_r+0x1c10>
 812d010:	013fdfc4 	movi	r4,-129
 812d014:	9d84b03a 	or	r2,r19,r22
 812d018:	d8c02e15 	stw	r3,184(sp)
 812d01c:	9124703a 	and	r18,r18,r4
 812d020:	0039883a 	mov	fp,zero
 812d024:	103e801e 	bne	r2,zero,812ca28 <__alt_data_end+0xfc12ca28>
 812d028:	d9002a17 	ldw	r4,168(sp)
 812d02c:	2002e01e 	bne	r4,zero,812dbb0 <___vfprintf_internal_r+0x16f8>
 812d030:	d8002a15 	stw	zero,168(sp)
 812d034:	d8002b15 	stw	zero,172(sp)
 812d038:	dc001e04 	addi	r16,sp,120
 812d03c:	003ef506 	br	812cc14 <__alt_data_end+0xfc12cc14>
 812d040:	8025883a 	mov	r18,r16
 812d044:	dc002903 	ldbu	r16,164(sp)
 812d048:	e011883a 	mov	r8,fp
 812d04c:	84003fcc 	andi	r16,r16,255
 812d050:	8005ba1e 	bne	r16,zero,812e73c <___vfprintf_internal_r+0x2284>
 812d054:	01020534 	movhi	r4,2068
 812d058:	212ed304 	addi	r4,r4,-17588
 812d05c:	d9003915 	stw	r4,228(sp)
 812d060:	9080080c 	andi	r2,r18,32
 812d064:	10006126 	beq	r2,zero,812d1ec <___vfprintf_internal_r+0xd34>
 812d068:	d9402e17 	ldw	r5,184(sp)
 812d06c:	2cc00017 	ldw	r19,0(r5)
 812d070:	2d800117 	ldw	r22,4(r5)
 812d074:	29400204 	addi	r5,r5,8
 812d078:	d9402e15 	stw	r5,184(sp)
 812d07c:	9080004c 	andi	r2,r18,1
 812d080:	1001ac26 	beq	r2,zero,812d734 <___vfprintf_internal_r+0x127c>
 812d084:	9d84b03a 	or	r2,r19,r22
 812d088:	10038526 	beq	r2,zero,812dea0 <___vfprintf_internal_r+0x19e8>
 812d08c:	d8c02a17 	ldw	r3,168(sp)
 812d090:	00800c04 	movi	r2,48
 812d094:	d8802705 	stb	r2,156(sp)
 812d098:	dc402745 	stb	r17,157(sp)
 812d09c:	d8002785 	stb	zero,158(sp)
 812d0a0:	90800094 	ori	r2,r18,2
 812d0a4:	18047916 	blt	r3,zero,812e28c <___vfprintf_internal_r+0x1dd4>
 812d0a8:	00bfdfc4 	movi	r2,-129
 812d0ac:	90a4703a 	and	r18,r18,r2
 812d0b0:	94800094 	ori	r18,r18,2
 812d0b4:	0039883a 	mov	fp,zero
 812d0b8:	d9003917 	ldw	r4,228(sp)
 812d0bc:	dc001e04 	addi	r16,sp,120
 812d0c0:	988003cc 	andi	r2,r19,15
 812d0c4:	b006973a 	slli	r3,r22,28
 812d0c8:	2085883a 	add	r2,r4,r2
 812d0cc:	9826d13a 	srli	r19,r19,4
 812d0d0:	10800003 	ldbu	r2,0(r2)
 812d0d4:	b02cd13a 	srli	r22,r22,4
 812d0d8:	843fffc4 	addi	r16,r16,-1
 812d0dc:	1ce6b03a 	or	r19,r3,r19
 812d0e0:	80800005 	stb	r2,0(r16)
 812d0e4:	9d84b03a 	or	r2,r19,r22
 812d0e8:	103ff51e 	bne	r2,zero,812d0c0 <__alt_data_end+0xfc12d0c0>
 812d0ec:	d8c02817 	ldw	r3,160(sp)
 812d0f0:	1c07c83a 	sub	r3,r3,r16
 812d0f4:	d8c02b15 	stw	r3,172(sp)
 812d0f8:	003ec606 	br	812cc14 <__alt_data_end+0xfc12cc14>
 812d0fc:	8025883a 	mov	r18,r16
 812d100:	dc002903 	ldbu	r16,164(sp)
 812d104:	e011883a 	mov	r8,fp
 812d108:	84003fcc 	andi	r16,r16,255
 812d10c:	803e9626 	beq	r16,zero,812cb68 <__alt_data_end+0xfc12cb68>
 812d110:	d8c02b03 	ldbu	r3,172(sp)
 812d114:	d8c02785 	stb	r3,158(sp)
 812d118:	003e9306 	br	812cb68 <__alt_data_end+0xfc12cb68>
 812d11c:	00c00044 	movi	r3,1
 812d120:	d8c02905 	stb	r3,164(sp)
 812d124:	00c00ac4 	movi	r3,43
 812d128:	d8c02b05 	stb	r3,172(sp)
 812d12c:	ac400007 	ldb	r17,0(r21)
 812d130:	003d4306 	br	812c640 <__alt_data_end+0xfc12c640>
 812d134:	84000814 	ori	r16,r16,32
 812d138:	ac400007 	ldb	r17,0(r21)
 812d13c:	003d4006 	br	812c640 <__alt_data_end+0xfc12c640>
 812d140:	d8802e17 	ldw	r2,184(sp)
 812d144:	8025883a 	mov	r18,r16
 812d148:	d8002785 	stb	zero,158(sp)
 812d14c:	14000017 	ldw	r16,0(r2)
 812d150:	e011883a 	mov	r8,fp
 812d154:	14c00104 	addi	r19,r2,4
 812d158:	80042d26 	beq	r16,zero,812e210 <___vfprintf_internal_r+0x1d58>
 812d15c:	d8c02a17 	ldw	r3,168(sp)
 812d160:	1803e416 	blt	r3,zero,812e0f4 <___vfprintf_internal_r+0x1c3c>
 812d164:	180d883a 	mov	r6,r3
 812d168:	000b883a 	mov	r5,zero
 812d16c:	8009883a 	mov	r4,r16
 812d170:	df003d15 	stw	fp,244(sp)
 812d174:	8131df00 	call	8131df0 <memchr>
 812d178:	da003d17 	ldw	r8,244(sp)
 812d17c:	10046826 	beq	r2,zero,812e320 <___vfprintf_internal_r+0x1e68>
 812d180:	1405c83a 	sub	r2,r2,r16
 812d184:	d8802b15 	stw	r2,172(sp)
 812d188:	1003e016 	blt	r2,zero,812e10c <___vfprintf_internal_r+0x1c54>
 812d18c:	df002783 	ldbu	fp,158(sp)
 812d190:	d8802915 	stw	r2,164(sp)
 812d194:	dcc02e15 	stw	r19,184(sp)
 812d198:	d8002a15 	stw	zero,168(sp)
 812d19c:	d8003215 	stw	zero,200(sp)
 812d1a0:	003ea206 	br	812cc2c <__alt_data_end+0xfc12cc2c>
 812d1a4:	8025883a 	mov	r18,r16
 812d1a8:	dc002903 	ldbu	r16,164(sp)
 812d1ac:	e011883a 	mov	r8,fp
 812d1b0:	84003fcc 	andi	r16,r16,255
 812d1b4:	803f8d26 	beq	r16,zero,812cfec <__alt_data_end+0xfc12cfec>
 812d1b8:	d8c02b03 	ldbu	r3,172(sp)
 812d1bc:	d8c02785 	stb	r3,158(sp)
 812d1c0:	003f8a06 	br	812cfec <__alt_data_end+0xfc12cfec>
 812d1c4:	8025883a 	mov	r18,r16
 812d1c8:	dc002903 	ldbu	r16,164(sp)
 812d1cc:	e011883a 	mov	r8,fp
 812d1d0:	84003fcc 	andi	r16,r16,255
 812d1d4:	8005661e 	bne	r16,zero,812e770 <___vfprintf_internal_r+0x22b8>
 812d1d8:	01020534 	movhi	r4,2068
 812d1dc:	212ed804 	addi	r4,r4,-17568
 812d1e0:	d9003915 	stw	r4,228(sp)
 812d1e4:	9080080c 	andi	r2,r18,32
 812d1e8:	103f9f1e 	bne	r2,zero,812d068 <__alt_data_end+0xfc12d068>
 812d1ec:	9080040c 	andi	r2,r18,16
 812d1f0:	1002eb26 	beq	r2,zero,812dda0 <___vfprintf_internal_r+0x18e8>
 812d1f4:	d8802e17 	ldw	r2,184(sp)
 812d1f8:	002d883a 	mov	r22,zero
 812d1fc:	14c00017 	ldw	r19,0(r2)
 812d200:	10800104 	addi	r2,r2,4
 812d204:	d8802e15 	stw	r2,184(sp)
 812d208:	003f9c06 	br	812d07c <__alt_data_end+0xfc12d07c>
 812d20c:	d8802b07 	ldb	r2,172(sp)
 812d210:	1002e11e 	bne	r2,zero,812dd98 <___vfprintf_internal_r+0x18e0>
 812d214:	00c00044 	movi	r3,1
 812d218:	d8c02905 	stb	r3,164(sp)
 812d21c:	00c00804 	movi	r3,32
 812d220:	d8c02b05 	stb	r3,172(sp)
 812d224:	ac400007 	ldb	r17,0(r21)
 812d228:	003d0506 	br	812c640 <__alt_data_end+0xfc12c640>
 812d22c:	84000054 	ori	r16,r16,1
 812d230:	ac400007 	ldb	r17,0(r21)
 812d234:	003d0206 	br	812c640 <__alt_data_end+0xfc12c640>
 812d238:	8025883a 	mov	r18,r16
 812d23c:	dc002903 	ldbu	r16,164(sp)
 812d240:	e011883a 	mov	r8,fp
 812d244:	84003fcc 	andi	r16,r16,255
 812d248:	803de726 	beq	r16,zero,812c9e8 <__alt_data_end+0xfc12c9e8>
 812d24c:	d8c02b03 	ldbu	r3,172(sp)
 812d250:	d8c02785 	stb	r3,158(sp)
 812d254:	003de406 	br	812c9e8 <__alt_data_end+0xfc12c9e8>
 812d258:	84001014 	ori	r16,r16,64
 812d25c:	ac400007 	ldb	r17,0(r21)
 812d260:	003cf706 	br	812c640 <__alt_data_end+0xfc12c640>
 812d264:	ac400007 	ldb	r17,0(r21)
 812d268:	00801b04 	movi	r2,108
 812d26c:	88838f26 	beq	r17,r2,812e0ac <___vfprintf_internal_r+0x1bf4>
 812d270:	84000414 	ori	r16,r16,16
 812d274:	003cf206 	br	812c640 <__alt_data_end+0xfc12c640>
 812d278:	8025883a 	mov	r18,r16
 812d27c:	dc002903 	ldbu	r16,164(sp)
 812d280:	e011883a 	mov	r8,fp
 812d284:	84003fcc 	andi	r16,r16,255
 812d288:	80053f1e 	bne	r16,zero,812e788 <___vfprintf_internal_r+0x22d0>
 812d28c:	9080080c 	andi	r2,r18,32
 812d290:	1002d226 	beq	r2,zero,812dddc <___vfprintf_internal_r+0x1924>
 812d294:	d9002e17 	ldw	r4,184(sp)
 812d298:	d9402f17 	ldw	r5,188(sp)
 812d29c:	20800017 	ldw	r2,0(r4)
 812d2a0:	2807d7fa 	srai	r3,r5,31
 812d2a4:	21000104 	addi	r4,r4,4
 812d2a8:	d9002e15 	stw	r4,184(sp)
 812d2ac:	11400015 	stw	r5,0(r2)
 812d2b0:	10c00115 	stw	r3,4(r2)
 812d2b4:	003cb806 	br	812c598 <__alt_data_end+0xfc12c598>
 812d2b8:	d8c02e17 	ldw	r3,184(sp)
 812d2bc:	d9002e17 	ldw	r4,184(sp)
 812d2c0:	8025883a 	mov	r18,r16
 812d2c4:	18800017 	ldw	r2,0(r3)
 812d2c8:	21000104 	addi	r4,r4,4
 812d2cc:	00c00044 	movi	r3,1
 812d2d0:	e011883a 	mov	r8,fp
 812d2d4:	d8c02915 	stw	r3,164(sp)
 812d2d8:	d8002785 	stb	zero,158(sp)
 812d2dc:	d8801405 	stb	r2,80(sp)
 812d2e0:	d9002e15 	stw	r4,184(sp)
 812d2e4:	d8c02b15 	stw	r3,172(sp)
 812d2e8:	d8002a15 	stw	zero,168(sp)
 812d2ec:	d8003215 	stw	zero,200(sp)
 812d2f0:	dc001404 	addi	r16,sp,80
 812d2f4:	0039883a 	mov	fp,zero
 812d2f8:	003e5306 	br	812cc48 <__alt_data_end+0xfc12cc48>
 812d2fc:	01020534 	movhi	r4,2068
 812d300:	212ed804 	addi	r4,r4,-17568
 812d304:	0039883a 	mov	fp,zero
 812d308:	d9003915 	stw	r4,228(sp)
 812d30c:	04401e04 	movi	r17,120
 812d310:	003f6906 	br	812d0b8 <__alt_data_end+0xfc12d0b8>
 812d314:	8025883a 	mov	r18,r16
 812d318:	dc002903 	ldbu	r16,164(sp)
 812d31c:	e011883a 	mov	r8,fp
 812d320:	84003fcc 	andi	r16,r16,255
 812d324:	8005081e 	bne	r16,zero,812e748 <___vfprintf_internal_r+0x2290>
 812d328:	883d6126 	beq	r17,zero,812c8b0 <__alt_data_end+0xfc12c8b0>
 812d32c:	00c00044 	movi	r3,1
 812d330:	d8c02915 	stw	r3,164(sp)
 812d334:	dc401405 	stb	r17,80(sp)
 812d338:	d8002785 	stb	zero,158(sp)
 812d33c:	003fe906 	br	812d2e4 <__alt_data_end+0xfc12d2e4>
 812d340:	01420534 	movhi	r5,2068
 812d344:	296ed804 	addi	r5,r5,-17568
 812d348:	d9403915 	stw	r5,228(sp)
 812d34c:	d8c02e15 	stw	r3,184(sp)
 812d350:	1025883a 	mov	r18,r2
 812d354:	04401e04 	movi	r17,120
 812d358:	9d84b03a 	or	r2,r19,r22
 812d35c:	1000fc1e 	bne	r2,zero,812d750 <___vfprintf_internal_r+0x1298>
 812d360:	0039883a 	mov	fp,zero
 812d364:	00800084 	movi	r2,2
 812d368:	10803fcc 	andi	r2,r2,255
 812d36c:	00c00044 	movi	r3,1
 812d370:	10c20f26 	beq	r2,r3,812dbb0 <___vfprintf_internal_r+0x16f8>
 812d374:	00c00084 	movi	r3,2
 812d378:	10fd3326 	beq	r2,r3,812c848 <__alt_data_end+0xfc12c848>
 812d37c:	003e0b06 	br	812cbac <__alt_data_end+0xfc12cbac>
 812d380:	d8c02017 	ldw	r3,128(sp)
 812d384:	003e7106 	br	812cd4c <__alt_data_end+0xfc12cd4c>
 812d388:	00801944 	movi	r2,101
 812d38c:	14407e0e 	bge	r2,r17,812d588 <___vfprintf_internal_r+0x10d0>
 812d390:	d9003617 	ldw	r4,216(sp)
 812d394:	d9403817 	ldw	r5,224(sp)
 812d398:	000d883a 	mov	r6,zero
 812d39c:	000f883a 	mov	r7,zero
 812d3a0:	d8c03c15 	stw	r3,240(sp)
 812d3a4:	da003d15 	stw	r8,244(sp)
 812d3a8:	8137bd00 	call	8137bd0 <__eqdf2>
 812d3ac:	d8c03c17 	ldw	r3,240(sp)
 812d3b0:	da003d17 	ldw	r8,244(sp)
 812d3b4:	1000f71e 	bne	r2,zero,812d794 <___vfprintf_internal_r+0x12dc>
 812d3b8:	d8801f17 	ldw	r2,124(sp)
 812d3bc:	01020534 	movhi	r4,2068
 812d3c0:	212edf04 	addi	r4,r4,-17540
 812d3c4:	18c00044 	addi	r3,r3,1
 812d3c8:	10800044 	addi	r2,r2,1
 812d3cc:	41000015 	stw	r4,0(r8)
 812d3d0:	01000044 	movi	r4,1
 812d3d4:	41000115 	stw	r4,4(r8)
 812d3d8:	d8c02015 	stw	r3,128(sp)
 812d3dc:	d8801f15 	stw	r2,124(sp)
 812d3e0:	010001c4 	movi	r4,7
 812d3e4:	2082b816 	blt	r4,r2,812dec8 <___vfprintf_internal_r+0x1a10>
 812d3e8:	42000204 	addi	r8,r8,8
 812d3ec:	d8802617 	ldw	r2,152(sp)
 812d3f0:	d9403317 	ldw	r5,204(sp)
 812d3f4:	11400216 	blt	r2,r5,812d400 <___vfprintf_internal_r+0xf48>
 812d3f8:	9080004c 	andi	r2,r18,1
 812d3fc:	103eb326 	beq	r2,zero,812cecc <__alt_data_end+0xfc12cecc>
 812d400:	d8803717 	ldw	r2,220(sp)
 812d404:	d9003417 	ldw	r4,208(sp)
 812d408:	d9403717 	ldw	r5,220(sp)
 812d40c:	1887883a 	add	r3,r3,r2
 812d410:	d8801f17 	ldw	r2,124(sp)
 812d414:	41000015 	stw	r4,0(r8)
 812d418:	41400115 	stw	r5,4(r8)
 812d41c:	10800044 	addi	r2,r2,1
 812d420:	d8c02015 	stw	r3,128(sp)
 812d424:	d8801f15 	stw	r2,124(sp)
 812d428:	010001c4 	movi	r4,7
 812d42c:	20832916 	blt	r4,r2,812e0d4 <___vfprintf_internal_r+0x1c1c>
 812d430:	42000204 	addi	r8,r8,8
 812d434:	d8803317 	ldw	r2,204(sp)
 812d438:	143fffc4 	addi	r16,r2,-1
 812d43c:	043ea30e 	bge	zero,r16,812cecc <__alt_data_end+0xfc12cecc>
 812d440:	04400404 	movi	r17,16
 812d444:	d8801f17 	ldw	r2,124(sp)
 812d448:	8c00880e 	bge	r17,r16,812d66c <___vfprintf_internal_r+0x11b4>
 812d44c:	01420534 	movhi	r5,2068
 812d450:	296edf84 	addi	r5,r5,-17538
 812d454:	d9402c15 	stw	r5,176(sp)
 812d458:	058001c4 	movi	r22,7
 812d45c:	dcc02d17 	ldw	r19,180(sp)
 812d460:	00000306 	br	812d470 <___vfprintf_internal_r+0xfb8>
 812d464:	42000204 	addi	r8,r8,8
 812d468:	843ffc04 	addi	r16,r16,-16
 812d46c:	8c00820e 	bge	r17,r16,812d678 <___vfprintf_internal_r+0x11c0>
 812d470:	18c00404 	addi	r3,r3,16
 812d474:	10800044 	addi	r2,r2,1
 812d478:	45000015 	stw	r20,0(r8)
 812d47c:	44400115 	stw	r17,4(r8)
 812d480:	d8c02015 	stw	r3,128(sp)
 812d484:	d8801f15 	stw	r2,124(sp)
 812d488:	b0bff60e 	bge	r22,r2,812d464 <__alt_data_end+0xfc12d464>
 812d48c:	d9801e04 	addi	r6,sp,120
 812d490:	b80b883a 	mov	r5,r23
 812d494:	9809883a 	mov	r4,r19
 812d498:	8133c980 	call	8133c98 <__sprint_r>
 812d49c:	103d0a1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d4a0:	d8c02017 	ldw	r3,128(sp)
 812d4a4:	d8801f17 	ldw	r2,124(sp)
 812d4a8:	da000404 	addi	r8,sp,16
 812d4ac:	003fee06 	br	812d468 <__alt_data_end+0xfc12d468>
 812d4b0:	d9403117 	ldw	r5,196(sp)
 812d4b4:	d8802917 	ldw	r2,164(sp)
 812d4b8:	28adc83a 	sub	r22,r5,r2
 812d4bc:	05be410e 	bge	zero,r22,812cdc4 <__alt_data_end+0xfc12cdc4>
 812d4c0:	07000404 	movi	fp,16
 812d4c4:	d8801f17 	ldw	r2,124(sp)
 812d4c8:	e5838f0e 	bge	fp,r22,812e308 <___vfprintf_internal_r+0x1e50>
 812d4cc:	01420534 	movhi	r5,2068
 812d4d0:	296edf84 	addi	r5,r5,-17538
 812d4d4:	dc403015 	stw	r17,192(sp)
 812d4d8:	d9402c15 	stw	r5,176(sp)
 812d4dc:	b023883a 	mov	r17,r22
 812d4e0:	04c001c4 	movi	r19,7
 812d4e4:	a82d883a 	mov	r22,r21
 812d4e8:	902b883a 	mov	r21,r18
 812d4ec:	8025883a 	mov	r18,r16
 812d4f0:	dc002d17 	ldw	r16,180(sp)
 812d4f4:	00000306 	br	812d504 <___vfprintf_internal_r+0x104c>
 812d4f8:	8c7ffc04 	addi	r17,r17,-16
 812d4fc:	42000204 	addi	r8,r8,8
 812d500:	e440110e 	bge	fp,r17,812d548 <___vfprintf_internal_r+0x1090>
 812d504:	18c00404 	addi	r3,r3,16
 812d508:	10800044 	addi	r2,r2,1
 812d50c:	45000015 	stw	r20,0(r8)
 812d510:	47000115 	stw	fp,4(r8)
 812d514:	d8c02015 	stw	r3,128(sp)
 812d518:	d8801f15 	stw	r2,124(sp)
 812d51c:	98bff60e 	bge	r19,r2,812d4f8 <__alt_data_end+0xfc12d4f8>
 812d520:	d9801e04 	addi	r6,sp,120
 812d524:	b80b883a 	mov	r5,r23
 812d528:	8009883a 	mov	r4,r16
 812d52c:	8133c980 	call	8133c98 <__sprint_r>
 812d530:	103ce51e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d534:	8c7ffc04 	addi	r17,r17,-16
 812d538:	d8c02017 	ldw	r3,128(sp)
 812d53c:	d8801f17 	ldw	r2,124(sp)
 812d540:	da000404 	addi	r8,sp,16
 812d544:	e47fef16 	blt	fp,r17,812d504 <__alt_data_end+0xfc12d504>
 812d548:	9021883a 	mov	r16,r18
 812d54c:	a825883a 	mov	r18,r21
 812d550:	b02b883a 	mov	r21,r22
 812d554:	882d883a 	mov	r22,r17
 812d558:	dc403017 	ldw	r17,192(sp)
 812d55c:	d9002c17 	ldw	r4,176(sp)
 812d560:	1d87883a 	add	r3,r3,r22
 812d564:	10800044 	addi	r2,r2,1
 812d568:	41000015 	stw	r4,0(r8)
 812d56c:	45800115 	stw	r22,4(r8)
 812d570:	d8c02015 	stw	r3,128(sp)
 812d574:	d8801f15 	stw	r2,124(sp)
 812d578:	010001c4 	movi	r4,7
 812d57c:	20818e16 	blt	r4,r2,812dbb8 <___vfprintf_internal_r+0x1700>
 812d580:	42000204 	addi	r8,r8,8
 812d584:	003e0f06 	br	812cdc4 <__alt_data_end+0xfc12cdc4>
 812d588:	d9403317 	ldw	r5,204(sp)
 812d58c:	00800044 	movi	r2,1
 812d590:	18c00044 	addi	r3,r3,1
 812d594:	1141530e 	bge	r2,r5,812dae4 <___vfprintf_internal_r+0x162c>
 812d598:	dc401f17 	ldw	r17,124(sp)
 812d59c:	00800044 	movi	r2,1
 812d5a0:	40800115 	stw	r2,4(r8)
 812d5a4:	8c400044 	addi	r17,r17,1
 812d5a8:	44000015 	stw	r16,0(r8)
 812d5ac:	d8c02015 	stw	r3,128(sp)
 812d5b0:	dc401f15 	stw	r17,124(sp)
 812d5b4:	008001c4 	movi	r2,7
 812d5b8:	14416b16 	blt	r2,r17,812db68 <___vfprintf_internal_r+0x16b0>
 812d5bc:	42000204 	addi	r8,r8,8
 812d5c0:	d8803717 	ldw	r2,220(sp)
 812d5c4:	d9003417 	ldw	r4,208(sp)
 812d5c8:	8c400044 	addi	r17,r17,1
 812d5cc:	10c7883a 	add	r3,r2,r3
 812d5d0:	40800115 	stw	r2,4(r8)
 812d5d4:	41000015 	stw	r4,0(r8)
 812d5d8:	d8c02015 	stw	r3,128(sp)
 812d5dc:	dc401f15 	stw	r17,124(sp)
 812d5e0:	008001c4 	movi	r2,7
 812d5e4:	14416916 	blt	r2,r17,812db8c <___vfprintf_internal_r+0x16d4>
 812d5e8:	45800204 	addi	r22,r8,8
 812d5ec:	d9003617 	ldw	r4,216(sp)
 812d5f0:	d9403817 	ldw	r5,224(sp)
 812d5f4:	000d883a 	mov	r6,zero
 812d5f8:	000f883a 	mov	r7,zero
 812d5fc:	d8c03c15 	stw	r3,240(sp)
 812d600:	8137bd00 	call	8137bd0 <__eqdf2>
 812d604:	d8c03c17 	ldw	r3,240(sp)
 812d608:	1000bc26 	beq	r2,zero,812d8fc <___vfprintf_internal_r+0x1444>
 812d60c:	d9403317 	ldw	r5,204(sp)
 812d610:	84000044 	addi	r16,r16,1
 812d614:	8c400044 	addi	r17,r17,1
 812d618:	28bfffc4 	addi	r2,r5,-1
 812d61c:	1887883a 	add	r3,r3,r2
 812d620:	b0800115 	stw	r2,4(r22)
 812d624:	b4000015 	stw	r16,0(r22)
 812d628:	d8c02015 	stw	r3,128(sp)
 812d62c:	dc401f15 	stw	r17,124(sp)
 812d630:	008001c4 	movi	r2,7
 812d634:	14414316 	blt	r2,r17,812db44 <___vfprintf_internal_r+0x168c>
 812d638:	b5800204 	addi	r22,r22,8
 812d63c:	d9003a17 	ldw	r4,232(sp)
 812d640:	df0022c4 	addi	fp,sp,139
 812d644:	8c400044 	addi	r17,r17,1
 812d648:	20c7883a 	add	r3,r4,r3
 812d64c:	b7000015 	stw	fp,0(r22)
 812d650:	b1000115 	stw	r4,4(r22)
 812d654:	d8c02015 	stw	r3,128(sp)
 812d658:	dc401f15 	stw	r17,124(sp)
 812d65c:	008001c4 	movi	r2,7
 812d660:	14400e16 	blt	r2,r17,812d69c <___vfprintf_internal_r+0x11e4>
 812d664:	b2000204 	addi	r8,r22,8
 812d668:	003e1806 	br	812cecc <__alt_data_end+0xfc12cecc>
 812d66c:	01020534 	movhi	r4,2068
 812d670:	212edf84 	addi	r4,r4,-17538
 812d674:	d9002c15 	stw	r4,176(sp)
 812d678:	d9002c17 	ldw	r4,176(sp)
 812d67c:	1c07883a 	add	r3,r3,r16
 812d680:	44000115 	stw	r16,4(r8)
 812d684:	41000015 	stw	r4,0(r8)
 812d688:	10800044 	addi	r2,r2,1
 812d68c:	d8c02015 	stw	r3,128(sp)
 812d690:	d8801f15 	stw	r2,124(sp)
 812d694:	010001c4 	movi	r4,7
 812d698:	20be0b0e 	bge	r4,r2,812cec8 <__alt_data_end+0xfc12cec8>
 812d69c:	d9002d17 	ldw	r4,180(sp)
 812d6a0:	d9801e04 	addi	r6,sp,120
 812d6a4:	b80b883a 	mov	r5,r23
 812d6a8:	8133c980 	call	8133c98 <__sprint_r>
 812d6ac:	103c861e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d6b0:	d8c02017 	ldw	r3,128(sp)
 812d6b4:	da000404 	addi	r8,sp,16
 812d6b8:	003e0406 	br	812cecc <__alt_data_end+0xfc12cecc>
 812d6bc:	d9002d17 	ldw	r4,180(sp)
 812d6c0:	d9801e04 	addi	r6,sp,120
 812d6c4:	b80b883a 	mov	r5,r23
 812d6c8:	8133c980 	call	8133c98 <__sprint_r>
 812d6cc:	103e3b26 	beq	r2,zero,812cfbc <__alt_data_end+0xfc12cfbc>
 812d6d0:	003c7d06 	br	812c8c8 <__alt_data_end+0xfc12c8c8>
 812d6d4:	d9002d17 	ldw	r4,180(sp)
 812d6d8:	d9801e04 	addi	r6,sp,120
 812d6dc:	b80b883a 	mov	r5,r23
 812d6e0:	8133c980 	call	8133c98 <__sprint_r>
 812d6e4:	103c781e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d6e8:	d8c02017 	ldw	r3,128(sp)
 812d6ec:	da000404 	addi	r8,sp,16
 812d6f0:	003de906 	br	812ce98 <__alt_data_end+0xfc12ce98>
 812d6f4:	d9002d17 	ldw	r4,180(sp)
 812d6f8:	d9801e04 	addi	r6,sp,120
 812d6fc:	b80b883a 	mov	r5,r23
 812d700:	8133c980 	call	8133c98 <__sprint_r>
 812d704:	103c701e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d708:	d8c02017 	ldw	r3,128(sp)
 812d70c:	da000404 	addi	r8,sp,16
 812d710:	003d9b06 	br	812cd80 <__alt_data_end+0xfc12cd80>
 812d714:	d9002d17 	ldw	r4,180(sp)
 812d718:	d9801e04 	addi	r6,sp,120
 812d71c:	b80b883a 	mov	r5,r23
 812d720:	8133c980 	call	8133c98 <__sprint_r>
 812d724:	103c681e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d728:	d8c02017 	ldw	r3,128(sp)
 812d72c:	da000404 	addi	r8,sp,16
 812d730:	003da106 	br	812cdb8 <__alt_data_end+0xfc12cdb8>
 812d734:	d9402a17 	ldw	r5,168(sp)
 812d738:	d8002785 	stb	zero,158(sp)
 812d73c:	283f0616 	blt	r5,zero,812d358 <__alt_data_end+0xfc12d358>
 812d740:	00ffdfc4 	movi	r3,-129
 812d744:	9d84b03a 	or	r2,r19,r22
 812d748:	90e4703a 	and	r18,r18,r3
 812d74c:	103c3b26 	beq	r2,zero,812c83c <__alt_data_end+0xfc12c83c>
 812d750:	0039883a 	mov	fp,zero
 812d754:	003e5806 	br	812d0b8 <__alt_data_end+0xfc12d0b8>
 812d758:	9080040c 	andi	r2,r18,16
 812d75c:	1001b326 	beq	r2,zero,812de2c <___vfprintf_internal_r+0x1974>
 812d760:	d8c02e17 	ldw	r3,184(sp)
 812d764:	d9002a17 	ldw	r4,168(sp)
 812d768:	d8002785 	stb	zero,158(sp)
 812d76c:	18800104 	addi	r2,r3,4
 812d770:	1cc00017 	ldw	r19,0(r3)
 812d774:	002d883a 	mov	r22,zero
 812d778:	2001b516 	blt	r4,zero,812de50 <___vfprintf_internal_r+0x1998>
 812d77c:	00ffdfc4 	movi	r3,-129
 812d780:	d8802e15 	stw	r2,184(sp)
 812d784:	90e4703a 	and	r18,r18,r3
 812d788:	983d0526 	beq	r19,zero,812cba0 <__alt_data_end+0xfc12cba0>
 812d78c:	0039883a 	mov	fp,zero
 812d790:	003d0806 	br	812cbb4 <__alt_data_end+0xfc12cbb4>
 812d794:	dc402617 	ldw	r17,152(sp)
 812d798:	0441d30e 	bge	zero,r17,812dee8 <___vfprintf_internal_r+0x1a30>
 812d79c:	dc403217 	ldw	r17,200(sp)
 812d7a0:	d8803317 	ldw	r2,204(sp)
 812d7a4:	1440010e 	bge	r2,r17,812d7ac <___vfprintf_internal_r+0x12f4>
 812d7a8:	1023883a 	mov	r17,r2
 812d7ac:	04400a0e 	bge	zero,r17,812d7d8 <___vfprintf_internal_r+0x1320>
 812d7b0:	d8801f17 	ldw	r2,124(sp)
 812d7b4:	1c47883a 	add	r3,r3,r17
 812d7b8:	44000015 	stw	r16,0(r8)
 812d7bc:	10800044 	addi	r2,r2,1
 812d7c0:	44400115 	stw	r17,4(r8)
 812d7c4:	d8c02015 	stw	r3,128(sp)
 812d7c8:	d8801f15 	stw	r2,124(sp)
 812d7cc:	010001c4 	movi	r4,7
 812d7d0:	20826516 	blt	r4,r2,812e168 <___vfprintf_internal_r+0x1cb0>
 812d7d4:	42000204 	addi	r8,r8,8
 812d7d8:	88026116 	blt	r17,zero,812e160 <___vfprintf_internal_r+0x1ca8>
 812d7dc:	d9003217 	ldw	r4,200(sp)
 812d7e0:	2463c83a 	sub	r17,r4,r17
 812d7e4:	04407b0e 	bge	zero,r17,812d9d4 <___vfprintf_internal_r+0x151c>
 812d7e8:	05800404 	movi	r22,16
 812d7ec:	d8801f17 	ldw	r2,124(sp)
 812d7f0:	b4419d0e 	bge	r22,r17,812de68 <___vfprintf_internal_r+0x19b0>
 812d7f4:	01020534 	movhi	r4,2068
 812d7f8:	212edf84 	addi	r4,r4,-17538
 812d7fc:	d9002c15 	stw	r4,176(sp)
 812d800:	070001c4 	movi	fp,7
 812d804:	dcc02d17 	ldw	r19,180(sp)
 812d808:	00000306 	br	812d818 <___vfprintf_internal_r+0x1360>
 812d80c:	42000204 	addi	r8,r8,8
 812d810:	8c7ffc04 	addi	r17,r17,-16
 812d814:	b441970e 	bge	r22,r17,812de74 <___vfprintf_internal_r+0x19bc>
 812d818:	18c00404 	addi	r3,r3,16
 812d81c:	10800044 	addi	r2,r2,1
 812d820:	45000015 	stw	r20,0(r8)
 812d824:	45800115 	stw	r22,4(r8)
 812d828:	d8c02015 	stw	r3,128(sp)
 812d82c:	d8801f15 	stw	r2,124(sp)
 812d830:	e0bff60e 	bge	fp,r2,812d80c <__alt_data_end+0xfc12d80c>
 812d834:	d9801e04 	addi	r6,sp,120
 812d838:	b80b883a 	mov	r5,r23
 812d83c:	9809883a 	mov	r4,r19
 812d840:	8133c980 	call	8133c98 <__sprint_r>
 812d844:	103c201e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d848:	d8c02017 	ldw	r3,128(sp)
 812d84c:	d8801f17 	ldw	r2,124(sp)
 812d850:	da000404 	addi	r8,sp,16
 812d854:	003fee06 	br	812d810 <__alt_data_end+0xfc12d810>
 812d858:	d9002d17 	ldw	r4,180(sp)
 812d85c:	d9801e04 	addi	r6,sp,120
 812d860:	b80b883a 	mov	r5,r23
 812d864:	8133c980 	call	8133c98 <__sprint_r>
 812d868:	103c171e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d86c:	d8c02017 	ldw	r3,128(sp)
 812d870:	df002787 	ldb	fp,158(sp)
 812d874:	da000404 	addi	r8,sp,16
 812d878:	003d3406 	br	812cd4c <__alt_data_end+0xfc12cd4c>
 812d87c:	9080040c 	andi	r2,r18,16
 812d880:	10016126 	beq	r2,zero,812de08 <___vfprintf_internal_r+0x1950>
 812d884:	d9402e17 	ldw	r5,184(sp)
 812d888:	2cc00017 	ldw	r19,0(r5)
 812d88c:	29400104 	addi	r5,r5,4
 812d890:	d9402e15 	stw	r5,184(sp)
 812d894:	982dd7fa 	srai	r22,r19,31
 812d898:	b005883a 	mov	r2,r22
 812d89c:	003c5a06 	br	812ca08 <__alt_data_end+0xfc12ca08>
 812d8a0:	9080040c 	andi	r2,r18,16
 812d8a4:	10003526 	beq	r2,zero,812d97c <___vfprintf_internal_r+0x14c4>
 812d8a8:	d8c02e17 	ldw	r3,184(sp)
 812d8ac:	d9002a17 	ldw	r4,168(sp)
 812d8b0:	d8002785 	stb	zero,158(sp)
 812d8b4:	18800104 	addi	r2,r3,4
 812d8b8:	1cc00017 	ldw	r19,0(r3)
 812d8bc:	002d883a 	mov	r22,zero
 812d8c0:	20003716 	blt	r4,zero,812d9a0 <___vfprintf_internal_r+0x14e8>
 812d8c4:	00ffdfc4 	movi	r3,-129
 812d8c8:	d8802e15 	stw	r2,184(sp)
 812d8cc:	90e4703a 	and	r18,r18,r3
 812d8d0:	0039883a 	mov	fp,zero
 812d8d4:	983dd426 	beq	r19,zero,812d028 <__alt_data_end+0xfc12d028>
 812d8d8:	00800244 	movi	r2,9
 812d8dc:	14fc5336 	bltu	r2,r19,812ca2c <__alt_data_end+0xfc12ca2c>
 812d8e0:	d8c02817 	ldw	r3,160(sp)
 812d8e4:	dc001dc4 	addi	r16,sp,119
 812d8e8:	9cc00c04 	addi	r19,r19,48
 812d8ec:	1c07c83a 	sub	r3,r3,r16
 812d8f0:	dcc01dc5 	stb	r19,119(sp)
 812d8f4:	d8c02b15 	stw	r3,172(sp)
 812d8f8:	003cc606 	br	812cc14 <__alt_data_end+0xfc12cc14>
 812d8fc:	d8803317 	ldw	r2,204(sp)
 812d900:	143fffc4 	addi	r16,r2,-1
 812d904:	043f4d0e 	bge	zero,r16,812d63c <__alt_data_end+0xfc12d63c>
 812d908:	07000404 	movi	fp,16
 812d90c:	e400810e 	bge	fp,r16,812db14 <___vfprintf_internal_r+0x165c>
 812d910:	01420534 	movhi	r5,2068
 812d914:	296edf84 	addi	r5,r5,-17538
 812d918:	d9402c15 	stw	r5,176(sp)
 812d91c:	01c001c4 	movi	r7,7
 812d920:	dcc02d17 	ldw	r19,180(sp)
 812d924:	00000306 	br	812d934 <___vfprintf_internal_r+0x147c>
 812d928:	b5800204 	addi	r22,r22,8
 812d92c:	843ffc04 	addi	r16,r16,-16
 812d930:	e4007b0e 	bge	fp,r16,812db20 <___vfprintf_internal_r+0x1668>
 812d934:	18c00404 	addi	r3,r3,16
 812d938:	8c400044 	addi	r17,r17,1
 812d93c:	b5000015 	stw	r20,0(r22)
 812d940:	b7000115 	stw	fp,4(r22)
 812d944:	d8c02015 	stw	r3,128(sp)
 812d948:	dc401f15 	stw	r17,124(sp)
 812d94c:	3c7ff60e 	bge	r7,r17,812d928 <__alt_data_end+0xfc12d928>
 812d950:	d9801e04 	addi	r6,sp,120
 812d954:	b80b883a 	mov	r5,r23
 812d958:	9809883a 	mov	r4,r19
 812d95c:	d9c03c15 	stw	r7,240(sp)
 812d960:	8133c980 	call	8133c98 <__sprint_r>
 812d964:	d9c03c17 	ldw	r7,240(sp)
 812d968:	103bd71e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d96c:	d8c02017 	ldw	r3,128(sp)
 812d970:	dc401f17 	ldw	r17,124(sp)
 812d974:	dd800404 	addi	r22,sp,16
 812d978:	003fec06 	br	812d92c <__alt_data_end+0xfc12d92c>
 812d97c:	9080100c 	andi	r2,r18,64
 812d980:	d8002785 	stb	zero,158(sp)
 812d984:	10010e26 	beq	r2,zero,812ddc0 <___vfprintf_internal_r+0x1908>
 812d988:	d9402e17 	ldw	r5,184(sp)
 812d98c:	d8c02a17 	ldw	r3,168(sp)
 812d990:	002d883a 	mov	r22,zero
 812d994:	28800104 	addi	r2,r5,4
 812d998:	2cc0000b 	ldhu	r19,0(r5)
 812d99c:	183fc90e 	bge	r3,zero,812d8c4 <__alt_data_end+0xfc12d8c4>
 812d9a0:	d8802e15 	stw	r2,184(sp)
 812d9a4:	0039883a 	mov	fp,zero
 812d9a8:	9d84b03a 	or	r2,r19,r22
 812d9ac:	103c1e1e 	bne	r2,zero,812ca28 <__alt_data_end+0xfc12ca28>
 812d9b0:	00800044 	movi	r2,1
 812d9b4:	003e6c06 	br	812d368 <__alt_data_end+0xfc12d368>
 812d9b8:	d9002d17 	ldw	r4,180(sp)
 812d9bc:	d9801e04 	addi	r6,sp,120
 812d9c0:	b80b883a 	mov	r5,r23
 812d9c4:	8133c980 	call	8133c98 <__sprint_r>
 812d9c8:	103bbf1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812d9cc:	d8c02017 	ldw	r3,128(sp)
 812d9d0:	da000404 	addi	r8,sp,16
 812d9d4:	d9003217 	ldw	r4,200(sp)
 812d9d8:	d8802617 	ldw	r2,152(sp)
 812d9dc:	d9403317 	ldw	r5,204(sp)
 812d9e0:	8123883a 	add	r17,r16,r4
 812d9e4:	11400216 	blt	r2,r5,812d9f0 <___vfprintf_internal_r+0x1538>
 812d9e8:	9100004c 	andi	r4,r18,1
 812d9ec:	20000d26 	beq	r4,zero,812da24 <___vfprintf_internal_r+0x156c>
 812d9f0:	d9003717 	ldw	r4,220(sp)
 812d9f4:	d9403417 	ldw	r5,208(sp)
 812d9f8:	1907883a 	add	r3,r3,r4
 812d9fc:	d9001f17 	ldw	r4,124(sp)
 812da00:	41400015 	stw	r5,0(r8)
 812da04:	d9403717 	ldw	r5,220(sp)
 812da08:	21000044 	addi	r4,r4,1
 812da0c:	d8c02015 	stw	r3,128(sp)
 812da10:	41400115 	stw	r5,4(r8)
 812da14:	d9001f15 	stw	r4,124(sp)
 812da18:	014001c4 	movi	r5,7
 812da1c:	2901e816 	blt	r5,r4,812e1c0 <___vfprintf_internal_r+0x1d08>
 812da20:	42000204 	addi	r8,r8,8
 812da24:	d9003317 	ldw	r4,204(sp)
 812da28:	8121883a 	add	r16,r16,r4
 812da2c:	2085c83a 	sub	r2,r4,r2
 812da30:	8461c83a 	sub	r16,r16,r17
 812da34:	1400010e 	bge	r2,r16,812da3c <___vfprintf_internal_r+0x1584>
 812da38:	1021883a 	mov	r16,r2
 812da3c:	04000a0e 	bge	zero,r16,812da68 <___vfprintf_internal_r+0x15b0>
 812da40:	d9001f17 	ldw	r4,124(sp)
 812da44:	1c07883a 	add	r3,r3,r16
 812da48:	44400015 	stw	r17,0(r8)
 812da4c:	21000044 	addi	r4,r4,1
 812da50:	44000115 	stw	r16,4(r8)
 812da54:	d8c02015 	stw	r3,128(sp)
 812da58:	d9001f15 	stw	r4,124(sp)
 812da5c:	014001c4 	movi	r5,7
 812da60:	2901fb16 	blt	r5,r4,812e250 <___vfprintf_internal_r+0x1d98>
 812da64:	42000204 	addi	r8,r8,8
 812da68:	8001f716 	blt	r16,zero,812e248 <___vfprintf_internal_r+0x1d90>
 812da6c:	1421c83a 	sub	r16,r2,r16
 812da70:	043d160e 	bge	zero,r16,812cecc <__alt_data_end+0xfc12cecc>
 812da74:	04400404 	movi	r17,16
 812da78:	d8801f17 	ldw	r2,124(sp)
 812da7c:	8c3efb0e 	bge	r17,r16,812d66c <__alt_data_end+0xfc12d66c>
 812da80:	01420534 	movhi	r5,2068
 812da84:	296edf84 	addi	r5,r5,-17538
 812da88:	d9402c15 	stw	r5,176(sp)
 812da8c:	058001c4 	movi	r22,7
 812da90:	dcc02d17 	ldw	r19,180(sp)
 812da94:	00000306 	br	812daa4 <___vfprintf_internal_r+0x15ec>
 812da98:	42000204 	addi	r8,r8,8
 812da9c:	843ffc04 	addi	r16,r16,-16
 812daa0:	8c3ef50e 	bge	r17,r16,812d678 <__alt_data_end+0xfc12d678>
 812daa4:	18c00404 	addi	r3,r3,16
 812daa8:	10800044 	addi	r2,r2,1
 812daac:	45000015 	stw	r20,0(r8)
 812dab0:	44400115 	stw	r17,4(r8)
 812dab4:	d8c02015 	stw	r3,128(sp)
 812dab8:	d8801f15 	stw	r2,124(sp)
 812dabc:	b0bff60e 	bge	r22,r2,812da98 <__alt_data_end+0xfc12da98>
 812dac0:	d9801e04 	addi	r6,sp,120
 812dac4:	b80b883a 	mov	r5,r23
 812dac8:	9809883a 	mov	r4,r19
 812dacc:	8133c980 	call	8133c98 <__sprint_r>
 812dad0:	103b7d1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812dad4:	d8c02017 	ldw	r3,128(sp)
 812dad8:	d8801f17 	ldw	r2,124(sp)
 812dadc:	da000404 	addi	r8,sp,16
 812dae0:	003fee06 	br	812da9c <__alt_data_end+0xfc12da9c>
 812dae4:	9088703a 	and	r4,r18,r2
 812dae8:	203eab1e 	bne	r4,zero,812d598 <__alt_data_end+0xfc12d598>
 812daec:	dc401f17 	ldw	r17,124(sp)
 812daf0:	40800115 	stw	r2,4(r8)
 812daf4:	44000015 	stw	r16,0(r8)
 812daf8:	8c400044 	addi	r17,r17,1
 812dafc:	d8c02015 	stw	r3,128(sp)
 812db00:	dc401f15 	stw	r17,124(sp)
 812db04:	008001c4 	movi	r2,7
 812db08:	14400e16 	blt	r2,r17,812db44 <___vfprintf_internal_r+0x168c>
 812db0c:	45800204 	addi	r22,r8,8
 812db10:	003eca06 	br	812d63c <__alt_data_end+0xfc12d63c>
 812db14:	01020534 	movhi	r4,2068
 812db18:	212edf84 	addi	r4,r4,-17538
 812db1c:	d9002c15 	stw	r4,176(sp)
 812db20:	d8802c17 	ldw	r2,176(sp)
 812db24:	1c07883a 	add	r3,r3,r16
 812db28:	8c400044 	addi	r17,r17,1
 812db2c:	b0800015 	stw	r2,0(r22)
 812db30:	b4000115 	stw	r16,4(r22)
 812db34:	d8c02015 	stw	r3,128(sp)
 812db38:	dc401f15 	stw	r17,124(sp)
 812db3c:	008001c4 	movi	r2,7
 812db40:	147ebd0e 	bge	r2,r17,812d638 <__alt_data_end+0xfc12d638>
 812db44:	d9002d17 	ldw	r4,180(sp)
 812db48:	d9801e04 	addi	r6,sp,120
 812db4c:	b80b883a 	mov	r5,r23
 812db50:	8133c980 	call	8133c98 <__sprint_r>
 812db54:	103b5c1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812db58:	d8c02017 	ldw	r3,128(sp)
 812db5c:	dc401f17 	ldw	r17,124(sp)
 812db60:	dd800404 	addi	r22,sp,16
 812db64:	003eb506 	br	812d63c <__alt_data_end+0xfc12d63c>
 812db68:	d9002d17 	ldw	r4,180(sp)
 812db6c:	d9801e04 	addi	r6,sp,120
 812db70:	b80b883a 	mov	r5,r23
 812db74:	8133c980 	call	8133c98 <__sprint_r>
 812db78:	103b531e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812db7c:	d8c02017 	ldw	r3,128(sp)
 812db80:	dc401f17 	ldw	r17,124(sp)
 812db84:	da000404 	addi	r8,sp,16
 812db88:	003e8d06 	br	812d5c0 <__alt_data_end+0xfc12d5c0>
 812db8c:	d9002d17 	ldw	r4,180(sp)
 812db90:	d9801e04 	addi	r6,sp,120
 812db94:	b80b883a 	mov	r5,r23
 812db98:	8133c980 	call	8133c98 <__sprint_r>
 812db9c:	103b4a1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812dba0:	d8c02017 	ldw	r3,128(sp)
 812dba4:	dc401f17 	ldw	r17,124(sp)
 812dba8:	dd800404 	addi	r22,sp,16
 812dbac:	003e8f06 	br	812d5ec <__alt_data_end+0xfc12d5ec>
 812dbb0:	0027883a 	mov	r19,zero
 812dbb4:	003f4a06 	br	812d8e0 <__alt_data_end+0xfc12d8e0>
 812dbb8:	d9002d17 	ldw	r4,180(sp)
 812dbbc:	d9801e04 	addi	r6,sp,120
 812dbc0:	b80b883a 	mov	r5,r23
 812dbc4:	8133c980 	call	8133c98 <__sprint_r>
 812dbc8:	103b3f1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812dbcc:	d8c02017 	ldw	r3,128(sp)
 812dbd0:	da000404 	addi	r8,sp,16
 812dbd4:	003c7b06 	br	812cdc4 <__alt_data_end+0xfc12cdc4>
 812dbd8:	d9402a17 	ldw	r5,168(sp)
 812dbdc:	04e7c83a 	sub	r19,zero,r19
 812dbe0:	07000b44 	movi	fp,45
 812dbe4:	9804c03a 	cmpne	r2,r19,zero
 812dbe8:	05adc83a 	sub	r22,zero,r22
 812dbec:	df002785 	stb	fp,158(sp)
 812dbf0:	b0adc83a 	sub	r22,r22,r2
 812dbf4:	28017b16 	blt	r5,zero,812e1e4 <___vfprintf_internal_r+0x1d2c>
 812dbf8:	00bfdfc4 	movi	r2,-129
 812dbfc:	90a4703a 	and	r18,r18,r2
 812dc00:	003b8906 	br	812ca28 <__alt_data_end+0xfc12ca28>
 812dc04:	d9003617 	ldw	r4,216(sp)
 812dc08:	d9403817 	ldw	r5,224(sp)
 812dc0c:	da003d15 	stw	r8,244(sp)
 812dc10:	81338bc0 	call	81338bc <__fpclassifyd>
 812dc14:	da003d17 	ldw	r8,244(sp)
 812dc18:	1000f026 	beq	r2,zero,812dfdc <___vfprintf_internal_r+0x1b24>
 812dc1c:	d9002a17 	ldw	r4,168(sp)
 812dc20:	05bff7c4 	movi	r22,-33
 812dc24:	00bfffc4 	movi	r2,-1
 812dc28:	8dac703a 	and	r22,r17,r22
 812dc2c:	20820026 	beq	r4,r2,812e430 <___vfprintf_internal_r+0x1f78>
 812dc30:	008011c4 	movi	r2,71
 812dc34:	b081f726 	beq	r22,r2,812e414 <___vfprintf_internal_r+0x1f5c>
 812dc38:	d9003817 	ldw	r4,224(sp)
 812dc3c:	90c04014 	ori	r3,r18,256
 812dc40:	d8c02c15 	stw	r3,176(sp)
 812dc44:	20021516 	blt	r4,zero,812e49c <___vfprintf_internal_r+0x1fe4>
 812dc48:	dcc03817 	ldw	r19,224(sp)
 812dc4c:	d8002905 	stb	zero,164(sp)
 812dc50:	00801984 	movi	r2,102
 812dc54:	8881f926 	beq	r17,r2,812e43c <___vfprintf_internal_r+0x1f84>
 812dc58:	00801184 	movi	r2,70
 812dc5c:	88821c26 	beq	r17,r2,812e4d0 <___vfprintf_internal_r+0x2018>
 812dc60:	00801144 	movi	r2,69
 812dc64:	b081ef26 	beq	r22,r2,812e424 <___vfprintf_internal_r+0x1f6c>
 812dc68:	d8c02a17 	ldw	r3,168(sp)
 812dc6c:	d8802104 	addi	r2,sp,132
 812dc70:	d8800315 	stw	r2,12(sp)
 812dc74:	d9403617 	ldw	r5,216(sp)
 812dc78:	d8802504 	addi	r2,sp,148
 812dc7c:	d9002d17 	ldw	r4,180(sp)
 812dc80:	d8800215 	stw	r2,8(sp)
 812dc84:	d8802604 	addi	r2,sp,152
 812dc88:	d8c00015 	stw	r3,0(sp)
 812dc8c:	d8800115 	stw	r2,4(sp)
 812dc90:	01c00084 	movi	r7,2
 812dc94:	980d883a 	mov	r6,r19
 812dc98:	d8c03c15 	stw	r3,240(sp)
 812dc9c:	da003d15 	stw	r8,244(sp)
 812dca0:	812ebe80 	call	812ebe8 <_dtoa_r>
 812dca4:	1021883a 	mov	r16,r2
 812dca8:	008019c4 	movi	r2,103
 812dcac:	d8c03c17 	ldw	r3,240(sp)
 812dcb0:	da003d17 	ldw	r8,244(sp)
 812dcb4:	88817126 	beq	r17,r2,812e27c <___vfprintf_internal_r+0x1dc4>
 812dcb8:	008011c4 	movi	r2,71
 812dcbc:	88829126 	beq	r17,r2,812e704 <___vfprintf_internal_r+0x224c>
 812dcc0:	80f9883a 	add	fp,r16,r3
 812dcc4:	d9003617 	ldw	r4,216(sp)
 812dcc8:	000d883a 	mov	r6,zero
 812dccc:	000f883a 	mov	r7,zero
 812dcd0:	980b883a 	mov	r5,r19
 812dcd4:	da003d15 	stw	r8,244(sp)
 812dcd8:	8137bd00 	call	8137bd0 <__eqdf2>
 812dcdc:	da003d17 	ldw	r8,244(sp)
 812dce0:	10018d26 	beq	r2,zero,812e318 <___vfprintf_internal_r+0x1e60>
 812dce4:	d8802117 	ldw	r2,132(sp)
 812dce8:	1700062e 	bgeu	r2,fp,812dd04 <___vfprintf_internal_r+0x184c>
 812dcec:	01000c04 	movi	r4,48
 812dcf0:	10c00044 	addi	r3,r2,1
 812dcf4:	d8c02115 	stw	r3,132(sp)
 812dcf8:	11000005 	stb	r4,0(r2)
 812dcfc:	d8802117 	ldw	r2,132(sp)
 812dd00:	173ffb36 	bltu	r2,fp,812dcf0 <__alt_data_end+0xfc12dcf0>
 812dd04:	1405c83a 	sub	r2,r2,r16
 812dd08:	d8803315 	stw	r2,204(sp)
 812dd0c:	008011c4 	movi	r2,71
 812dd10:	b0817626 	beq	r22,r2,812e2ec <___vfprintf_internal_r+0x1e34>
 812dd14:	00801944 	movi	r2,101
 812dd18:	1442800e 	bge	r2,r17,812e71c <___vfprintf_internal_r+0x2264>
 812dd1c:	d8c02617 	ldw	r3,152(sp)
 812dd20:	00801984 	movi	r2,102
 812dd24:	d8c03215 	stw	r3,200(sp)
 812dd28:	8881fe26 	beq	r17,r2,812e524 <___vfprintf_internal_r+0x206c>
 812dd2c:	d8c03217 	ldw	r3,200(sp)
 812dd30:	d9003317 	ldw	r4,204(sp)
 812dd34:	1901dd16 	blt	r3,r4,812e4ac <___vfprintf_internal_r+0x1ff4>
 812dd38:	9480004c 	andi	r18,r18,1
 812dd3c:	90022b1e 	bne	r18,zero,812e5ec <___vfprintf_internal_r+0x2134>
 812dd40:	1805883a 	mov	r2,r3
 812dd44:	18028316 	blt	r3,zero,812e754 <___vfprintf_internal_r+0x229c>
 812dd48:	d8c03217 	ldw	r3,200(sp)
 812dd4c:	044019c4 	movi	r17,103
 812dd50:	d8c02b15 	stw	r3,172(sp)
 812dd54:	df002907 	ldb	fp,164(sp)
 812dd58:	e001531e 	bne	fp,zero,812e2a8 <___vfprintf_internal_r+0x1df0>
 812dd5c:	df002783 	ldbu	fp,158(sp)
 812dd60:	d8802915 	stw	r2,164(sp)
 812dd64:	dc802c17 	ldw	r18,176(sp)
 812dd68:	d8002a15 	stw	zero,168(sp)
 812dd6c:	003baf06 	br	812cc2c <__alt_data_end+0xfc12cc2c>
 812dd70:	d8c02e17 	ldw	r3,184(sp)
 812dd74:	d9002e17 	ldw	r4,184(sp)
 812dd78:	d9402e17 	ldw	r5,184(sp)
 812dd7c:	18c00017 	ldw	r3,0(r3)
 812dd80:	21000117 	ldw	r4,4(r4)
 812dd84:	29400204 	addi	r5,r5,8
 812dd88:	d8c03615 	stw	r3,216(sp)
 812dd8c:	d9003815 	stw	r4,224(sp)
 812dd90:	d9402e15 	stw	r5,184(sp)
 812dd94:	003b5006 	br	812cad8 <__alt_data_end+0xfc12cad8>
 812dd98:	ac400007 	ldb	r17,0(r21)
 812dd9c:	003a2806 	br	812c640 <__alt_data_end+0xfc12c640>
 812dda0:	9080100c 	andi	r2,r18,64
 812dda4:	1000a826 	beq	r2,zero,812e048 <___vfprintf_internal_r+0x1b90>
 812dda8:	d8c02e17 	ldw	r3,184(sp)
 812ddac:	002d883a 	mov	r22,zero
 812ddb0:	1cc0000b 	ldhu	r19,0(r3)
 812ddb4:	18c00104 	addi	r3,r3,4
 812ddb8:	d8c02e15 	stw	r3,184(sp)
 812ddbc:	003caf06 	br	812d07c <__alt_data_end+0xfc12d07c>
 812ddc0:	d9002e17 	ldw	r4,184(sp)
 812ddc4:	d9402a17 	ldw	r5,168(sp)
 812ddc8:	002d883a 	mov	r22,zero
 812ddcc:	20800104 	addi	r2,r4,4
 812ddd0:	24c00017 	ldw	r19,0(r4)
 812ddd4:	283ebb0e 	bge	r5,zero,812d8c4 <__alt_data_end+0xfc12d8c4>
 812ddd8:	003ef106 	br	812d9a0 <__alt_data_end+0xfc12d9a0>
 812dddc:	9080040c 	andi	r2,r18,16
 812dde0:	1000921e 	bne	r2,zero,812e02c <___vfprintf_internal_r+0x1b74>
 812dde4:	9480100c 	andi	r18,r18,64
 812dde8:	90013926 	beq	r18,zero,812e2d0 <___vfprintf_internal_r+0x1e18>
 812ddec:	d9402e17 	ldw	r5,184(sp)
 812ddf0:	d8c02f17 	ldw	r3,188(sp)
 812ddf4:	28800017 	ldw	r2,0(r5)
 812ddf8:	29400104 	addi	r5,r5,4
 812ddfc:	d9402e15 	stw	r5,184(sp)
 812de00:	10c0000d 	sth	r3,0(r2)
 812de04:	0039e406 	br	812c598 <__alt_data_end+0xfc12c598>
 812de08:	9080100c 	andi	r2,r18,64
 812de0c:	10008026 	beq	r2,zero,812e010 <___vfprintf_internal_r+0x1b58>
 812de10:	d8802e17 	ldw	r2,184(sp)
 812de14:	14c0000f 	ldh	r19,0(r2)
 812de18:	10800104 	addi	r2,r2,4
 812de1c:	d8802e15 	stw	r2,184(sp)
 812de20:	982dd7fa 	srai	r22,r19,31
 812de24:	b005883a 	mov	r2,r22
 812de28:	003af706 	br	812ca08 <__alt_data_end+0xfc12ca08>
 812de2c:	9080100c 	andi	r2,r18,64
 812de30:	d8002785 	stb	zero,158(sp)
 812de34:	10008a1e 	bne	r2,zero,812e060 <___vfprintf_internal_r+0x1ba8>
 812de38:	d9002e17 	ldw	r4,184(sp)
 812de3c:	d9402a17 	ldw	r5,168(sp)
 812de40:	002d883a 	mov	r22,zero
 812de44:	20800104 	addi	r2,r4,4
 812de48:	24c00017 	ldw	r19,0(r4)
 812de4c:	283e4b0e 	bge	r5,zero,812d77c <__alt_data_end+0xfc12d77c>
 812de50:	9d86b03a 	or	r3,r19,r22
 812de54:	d8802e15 	stw	r2,184(sp)
 812de58:	183e4c1e 	bne	r3,zero,812d78c <__alt_data_end+0xfc12d78c>
 812de5c:	0039883a 	mov	fp,zero
 812de60:	0005883a 	mov	r2,zero
 812de64:	003d4006 	br	812d368 <__alt_data_end+0xfc12d368>
 812de68:	01420534 	movhi	r5,2068
 812de6c:	296edf84 	addi	r5,r5,-17538
 812de70:	d9402c15 	stw	r5,176(sp)
 812de74:	d9402c17 	ldw	r5,176(sp)
 812de78:	1c47883a 	add	r3,r3,r17
 812de7c:	10800044 	addi	r2,r2,1
 812de80:	41400015 	stw	r5,0(r8)
 812de84:	44400115 	stw	r17,4(r8)
 812de88:	d8c02015 	stw	r3,128(sp)
 812de8c:	d8801f15 	stw	r2,124(sp)
 812de90:	010001c4 	movi	r4,7
 812de94:	20bec816 	blt	r4,r2,812d9b8 <__alt_data_end+0xfc12d9b8>
 812de98:	42000204 	addi	r8,r8,8
 812de9c:	003ecd06 	br	812d9d4 <__alt_data_end+0xfc12d9d4>
 812dea0:	d9002a17 	ldw	r4,168(sp)
 812dea4:	d8002785 	stb	zero,158(sp)
 812dea8:	203d2d16 	blt	r4,zero,812d360 <__alt_data_end+0xfc12d360>
 812deac:	00bfdfc4 	movi	r2,-129
 812deb0:	90a4703a 	and	r18,r18,r2
 812deb4:	003a6106 	br	812c83c <__alt_data_end+0xfc12c83c>
 812deb8:	01020534 	movhi	r4,2068
 812debc:	212edf84 	addi	r4,r4,-17538
 812dec0:	d9002c15 	stw	r4,176(sp)
 812dec4:	003bea06 	br	812ce70 <__alt_data_end+0xfc12ce70>
 812dec8:	d9002d17 	ldw	r4,180(sp)
 812decc:	d9801e04 	addi	r6,sp,120
 812ded0:	b80b883a 	mov	r5,r23
 812ded4:	8133c980 	call	8133c98 <__sprint_r>
 812ded8:	103a7b1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812dedc:	d8c02017 	ldw	r3,128(sp)
 812dee0:	da000404 	addi	r8,sp,16
 812dee4:	003d4106 	br	812d3ec <__alt_data_end+0xfc12d3ec>
 812dee8:	d8801f17 	ldw	r2,124(sp)
 812deec:	01420534 	movhi	r5,2068
 812def0:	01000044 	movi	r4,1
 812def4:	18c00044 	addi	r3,r3,1
 812def8:	10800044 	addi	r2,r2,1
 812defc:	296edf04 	addi	r5,r5,-17540
 812df00:	41000115 	stw	r4,4(r8)
 812df04:	41400015 	stw	r5,0(r8)
 812df08:	d8c02015 	stw	r3,128(sp)
 812df0c:	d8801f15 	stw	r2,124(sp)
 812df10:	010001c4 	movi	r4,7
 812df14:	20805c16 	blt	r4,r2,812e088 <___vfprintf_internal_r+0x1bd0>
 812df18:	42000204 	addi	r8,r8,8
 812df1c:	8800041e 	bne	r17,zero,812df30 <___vfprintf_internal_r+0x1a78>
 812df20:	d8803317 	ldw	r2,204(sp)
 812df24:	1000021e 	bne	r2,zero,812df30 <___vfprintf_internal_r+0x1a78>
 812df28:	9080004c 	andi	r2,r18,1
 812df2c:	103be726 	beq	r2,zero,812cecc <__alt_data_end+0xfc12cecc>
 812df30:	d9003717 	ldw	r4,220(sp)
 812df34:	d8801f17 	ldw	r2,124(sp)
 812df38:	d9403417 	ldw	r5,208(sp)
 812df3c:	20c7883a 	add	r3,r4,r3
 812df40:	10800044 	addi	r2,r2,1
 812df44:	41000115 	stw	r4,4(r8)
 812df48:	41400015 	stw	r5,0(r8)
 812df4c:	d8c02015 	stw	r3,128(sp)
 812df50:	d8801f15 	stw	r2,124(sp)
 812df54:	010001c4 	movi	r4,7
 812df58:	20812116 	blt	r4,r2,812e3e0 <___vfprintf_internal_r+0x1f28>
 812df5c:	42000204 	addi	r8,r8,8
 812df60:	0463c83a 	sub	r17,zero,r17
 812df64:	0440730e 	bge	zero,r17,812e134 <___vfprintf_internal_r+0x1c7c>
 812df68:	05800404 	movi	r22,16
 812df6c:	b440860e 	bge	r22,r17,812e188 <___vfprintf_internal_r+0x1cd0>
 812df70:	01420534 	movhi	r5,2068
 812df74:	296edf84 	addi	r5,r5,-17538
 812df78:	d9402c15 	stw	r5,176(sp)
 812df7c:	070001c4 	movi	fp,7
 812df80:	dcc02d17 	ldw	r19,180(sp)
 812df84:	00000306 	br	812df94 <___vfprintf_internal_r+0x1adc>
 812df88:	42000204 	addi	r8,r8,8
 812df8c:	8c7ffc04 	addi	r17,r17,-16
 812df90:	b440800e 	bge	r22,r17,812e194 <___vfprintf_internal_r+0x1cdc>
 812df94:	18c00404 	addi	r3,r3,16
 812df98:	10800044 	addi	r2,r2,1
 812df9c:	45000015 	stw	r20,0(r8)
 812dfa0:	45800115 	stw	r22,4(r8)
 812dfa4:	d8c02015 	stw	r3,128(sp)
 812dfa8:	d8801f15 	stw	r2,124(sp)
 812dfac:	e0bff60e 	bge	fp,r2,812df88 <__alt_data_end+0xfc12df88>
 812dfb0:	d9801e04 	addi	r6,sp,120
 812dfb4:	b80b883a 	mov	r5,r23
 812dfb8:	9809883a 	mov	r4,r19
 812dfbc:	8133c980 	call	8133c98 <__sprint_r>
 812dfc0:	103a411e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812dfc4:	d8c02017 	ldw	r3,128(sp)
 812dfc8:	d8801f17 	ldw	r2,124(sp)
 812dfcc:	da000404 	addi	r8,sp,16
 812dfd0:	003fee06 	br	812df8c <__alt_data_end+0xfc12df8c>
 812dfd4:	00bfffc4 	movi	r2,-1
 812dfd8:	003a3f06 	br	812c8d8 <__alt_data_end+0xfc12c8d8>
 812dfdc:	008011c4 	movi	r2,71
 812dfe0:	1440b816 	blt	r2,r17,812e2c4 <___vfprintf_internal_r+0x1e0c>
 812dfe4:	04020534 	movhi	r16,2068
 812dfe8:	842ed104 	addi	r16,r16,-17596
 812dfec:	00c000c4 	movi	r3,3
 812dff0:	00bfdfc4 	movi	r2,-129
 812dff4:	d8c02915 	stw	r3,164(sp)
 812dff8:	90a4703a 	and	r18,r18,r2
 812dffc:	df002783 	ldbu	fp,158(sp)
 812e000:	d8c02b15 	stw	r3,172(sp)
 812e004:	d8002a15 	stw	zero,168(sp)
 812e008:	d8003215 	stw	zero,200(sp)
 812e00c:	003b0706 	br	812cc2c <__alt_data_end+0xfc12cc2c>
 812e010:	d8c02e17 	ldw	r3,184(sp)
 812e014:	1cc00017 	ldw	r19,0(r3)
 812e018:	18c00104 	addi	r3,r3,4
 812e01c:	d8c02e15 	stw	r3,184(sp)
 812e020:	982dd7fa 	srai	r22,r19,31
 812e024:	b005883a 	mov	r2,r22
 812e028:	003a7706 	br	812ca08 <__alt_data_end+0xfc12ca08>
 812e02c:	d8c02e17 	ldw	r3,184(sp)
 812e030:	d9002f17 	ldw	r4,188(sp)
 812e034:	18800017 	ldw	r2,0(r3)
 812e038:	18c00104 	addi	r3,r3,4
 812e03c:	d8c02e15 	stw	r3,184(sp)
 812e040:	11000015 	stw	r4,0(r2)
 812e044:	00395406 	br	812c598 <__alt_data_end+0xfc12c598>
 812e048:	d9002e17 	ldw	r4,184(sp)
 812e04c:	002d883a 	mov	r22,zero
 812e050:	24c00017 	ldw	r19,0(r4)
 812e054:	21000104 	addi	r4,r4,4
 812e058:	d9002e15 	stw	r4,184(sp)
 812e05c:	003c0706 	br	812d07c <__alt_data_end+0xfc12d07c>
 812e060:	d9402e17 	ldw	r5,184(sp)
 812e064:	d8c02a17 	ldw	r3,168(sp)
 812e068:	002d883a 	mov	r22,zero
 812e06c:	28800104 	addi	r2,r5,4
 812e070:	2cc0000b 	ldhu	r19,0(r5)
 812e074:	183dc10e 	bge	r3,zero,812d77c <__alt_data_end+0xfc12d77c>
 812e078:	003f7506 	br	812de50 <__alt_data_end+0xfc12de50>
 812e07c:	04020534 	movhi	r16,2068
 812e080:	842ecf04 	addi	r16,r16,-17604
 812e084:	003aa706 	br	812cb24 <__alt_data_end+0xfc12cb24>
 812e088:	d9002d17 	ldw	r4,180(sp)
 812e08c:	d9801e04 	addi	r6,sp,120
 812e090:	b80b883a 	mov	r5,r23
 812e094:	8133c980 	call	8133c98 <__sprint_r>
 812e098:	103a0b1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812e09c:	dc402617 	ldw	r17,152(sp)
 812e0a0:	d8c02017 	ldw	r3,128(sp)
 812e0a4:	da000404 	addi	r8,sp,16
 812e0a8:	003f9c06 	br	812df1c <__alt_data_end+0xfc12df1c>
 812e0ac:	ac400043 	ldbu	r17,1(r21)
 812e0b0:	84000814 	ori	r16,r16,32
 812e0b4:	ad400044 	addi	r21,r21,1
 812e0b8:	8c403fcc 	andi	r17,r17,255
 812e0bc:	8c40201c 	xori	r17,r17,128
 812e0c0:	8c7fe004 	addi	r17,r17,-128
 812e0c4:	00395e06 	br	812c640 <__alt_data_end+0xfc12c640>
 812e0c8:	d8c02e15 	stw	r3,184(sp)
 812e0cc:	0039883a 	mov	fp,zero
 812e0d0:	003e3506 	br	812d9a8 <__alt_data_end+0xfc12d9a8>
 812e0d4:	d9002d17 	ldw	r4,180(sp)
 812e0d8:	d9801e04 	addi	r6,sp,120
 812e0dc:	b80b883a 	mov	r5,r23
 812e0e0:	8133c980 	call	8133c98 <__sprint_r>
 812e0e4:	1039f81e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812e0e8:	d8c02017 	ldw	r3,128(sp)
 812e0ec:	da000404 	addi	r8,sp,16
 812e0f0:	003cd006 	br	812d434 <__alt_data_end+0xfc12d434>
 812e0f4:	8009883a 	mov	r4,r16
 812e0f8:	df003d15 	stw	fp,244(sp)
 812e0fc:	812c4200 	call	812c420 <strlen>
 812e100:	d8802b15 	stw	r2,172(sp)
 812e104:	da003d17 	ldw	r8,244(sp)
 812e108:	103c200e 	bge	r2,zero,812d18c <__alt_data_end+0xfc12d18c>
 812e10c:	0005883a 	mov	r2,zero
 812e110:	003c1e06 	br	812d18c <__alt_data_end+0xfc12d18c>
 812e114:	d9002d17 	ldw	r4,180(sp)
 812e118:	d9801e04 	addi	r6,sp,120
 812e11c:	b80b883a 	mov	r5,r23
 812e120:	8133c980 	call	8133c98 <__sprint_r>
 812e124:	1039e81e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812e128:	d8c02017 	ldw	r3,128(sp)
 812e12c:	d8801f17 	ldw	r2,124(sp)
 812e130:	da000404 	addi	r8,sp,16
 812e134:	d9403317 	ldw	r5,204(sp)
 812e138:	10800044 	addi	r2,r2,1
 812e13c:	44000015 	stw	r16,0(r8)
 812e140:	28c7883a 	add	r3,r5,r3
 812e144:	003b5b06 	br	812ceb4 <__alt_data_end+0xfc12ceb4>
 812e148:	01020534 	movhi	r4,2068
 812e14c:	212ee384 	addi	r4,r4,-17522
 812e150:	d9003515 	stw	r4,212(sp)
 812e154:	003af206 	br	812cd20 <__alt_data_end+0xfc12cd20>
 812e158:	013fffc4 	movi	r4,-1
 812e15c:	003a0806 	br	812c980 <__alt_data_end+0xfc12c980>
 812e160:	0023883a 	mov	r17,zero
 812e164:	003d9d06 	br	812d7dc <__alt_data_end+0xfc12d7dc>
 812e168:	d9002d17 	ldw	r4,180(sp)
 812e16c:	d9801e04 	addi	r6,sp,120
 812e170:	b80b883a 	mov	r5,r23
 812e174:	8133c980 	call	8133c98 <__sprint_r>
 812e178:	1039d31e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812e17c:	d8c02017 	ldw	r3,128(sp)
 812e180:	da000404 	addi	r8,sp,16
 812e184:	003d9406 	br	812d7d8 <__alt_data_end+0xfc12d7d8>
 812e188:	01020534 	movhi	r4,2068
 812e18c:	212edf84 	addi	r4,r4,-17538
 812e190:	d9002c15 	stw	r4,176(sp)
 812e194:	d9002c17 	ldw	r4,176(sp)
 812e198:	1c47883a 	add	r3,r3,r17
 812e19c:	10800044 	addi	r2,r2,1
 812e1a0:	41000015 	stw	r4,0(r8)
 812e1a4:	44400115 	stw	r17,4(r8)
 812e1a8:	d8c02015 	stw	r3,128(sp)
 812e1ac:	d8801f15 	stw	r2,124(sp)
 812e1b0:	010001c4 	movi	r4,7
 812e1b4:	20bfd716 	blt	r4,r2,812e114 <__alt_data_end+0xfc12e114>
 812e1b8:	42000204 	addi	r8,r8,8
 812e1bc:	003fdd06 	br	812e134 <__alt_data_end+0xfc12e134>
 812e1c0:	d9002d17 	ldw	r4,180(sp)
 812e1c4:	d9801e04 	addi	r6,sp,120
 812e1c8:	b80b883a 	mov	r5,r23
 812e1cc:	8133c980 	call	8133c98 <__sprint_r>
 812e1d0:	1039bd1e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812e1d4:	d8802617 	ldw	r2,152(sp)
 812e1d8:	d8c02017 	ldw	r3,128(sp)
 812e1dc:	da000404 	addi	r8,sp,16
 812e1e0:	003e1006 	br	812da24 <__alt_data_end+0xfc12da24>
 812e1e4:	00800044 	movi	r2,1
 812e1e8:	10803fcc 	andi	r2,r2,255
 812e1ec:	00c00044 	movi	r3,1
 812e1f0:	10fa0d26 	beq	r2,r3,812ca28 <__alt_data_end+0xfc12ca28>
 812e1f4:	00c00084 	movi	r3,2
 812e1f8:	10fbaf26 	beq	r2,r3,812d0b8 <__alt_data_end+0xfc12d0b8>
 812e1fc:	003a6d06 	br	812cbb4 <__alt_data_end+0xfc12cbb4>
 812e200:	01020534 	movhi	r4,2068
 812e204:	212ee384 	addi	r4,r4,-17522
 812e208:	d9003515 	stw	r4,212(sp)
 812e20c:	003b5406 	br	812cf60 <__alt_data_end+0xfc12cf60>
 812e210:	d8802a17 	ldw	r2,168(sp)
 812e214:	00c00184 	movi	r3,6
 812e218:	1880012e 	bgeu	r3,r2,812e220 <___vfprintf_internal_r+0x1d68>
 812e21c:	1805883a 	mov	r2,r3
 812e220:	d8802b15 	stw	r2,172(sp)
 812e224:	1000ef16 	blt	r2,zero,812e5e4 <___vfprintf_internal_r+0x212c>
 812e228:	04020534 	movhi	r16,2068
 812e22c:	d8802915 	stw	r2,164(sp)
 812e230:	dcc02e15 	stw	r19,184(sp)
 812e234:	d8002a15 	stw	zero,168(sp)
 812e238:	d8003215 	stw	zero,200(sp)
 812e23c:	842edd04 	addi	r16,r16,-17548
 812e240:	0039883a 	mov	fp,zero
 812e244:	003a8006 	br	812cc48 <__alt_data_end+0xfc12cc48>
 812e248:	0021883a 	mov	r16,zero
 812e24c:	003e0706 	br	812da6c <__alt_data_end+0xfc12da6c>
 812e250:	d9002d17 	ldw	r4,180(sp)
 812e254:	d9801e04 	addi	r6,sp,120
 812e258:	b80b883a 	mov	r5,r23
 812e25c:	8133c980 	call	8133c98 <__sprint_r>
 812e260:	1039991e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812e264:	d8802617 	ldw	r2,152(sp)
 812e268:	d9403317 	ldw	r5,204(sp)
 812e26c:	d8c02017 	ldw	r3,128(sp)
 812e270:	da000404 	addi	r8,sp,16
 812e274:	2885c83a 	sub	r2,r5,r2
 812e278:	003dfb06 	br	812da68 <__alt_data_end+0xfc12da68>
 812e27c:	9080004c 	andi	r2,r18,1
 812e280:	103e8f1e 	bne	r2,zero,812dcc0 <__alt_data_end+0xfc12dcc0>
 812e284:	d8802117 	ldw	r2,132(sp)
 812e288:	003e9e06 	br	812dd04 <__alt_data_end+0xfc12dd04>
 812e28c:	1025883a 	mov	r18,r2
 812e290:	0039883a 	mov	fp,zero
 812e294:	00800084 	movi	r2,2
 812e298:	003fd306 	br	812e1e8 <__alt_data_end+0xfc12e1e8>
 812e29c:	07000b44 	movi	fp,45
 812e2a0:	df002785 	stb	fp,158(sp)
 812e2a4:	003a1b06 	br	812cb14 <__alt_data_end+0xfc12cb14>
 812e2a8:	00c00b44 	movi	r3,45
 812e2ac:	d8c02785 	stb	r3,158(sp)
 812e2b0:	d8802915 	stw	r2,164(sp)
 812e2b4:	dc802c17 	ldw	r18,176(sp)
 812e2b8:	d8002a15 	stw	zero,168(sp)
 812e2bc:	07000b44 	movi	fp,45
 812e2c0:	003a5e06 	br	812cc3c <__alt_data_end+0xfc12cc3c>
 812e2c4:	04020534 	movhi	r16,2068
 812e2c8:	842ed204 	addi	r16,r16,-17592
 812e2cc:	003f4706 	br	812dfec <__alt_data_end+0xfc12dfec>
 812e2d0:	d9002e17 	ldw	r4,184(sp)
 812e2d4:	d9402f17 	ldw	r5,188(sp)
 812e2d8:	20800017 	ldw	r2,0(r4)
 812e2dc:	21000104 	addi	r4,r4,4
 812e2e0:	d9002e15 	stw	r4,184(sp)
 812e2e4:	11400015 	stw	r5,0(r2)
 812e2e8:	0038ab06 	br	812c598 <__alt_data_end+0xfc12c598>
 812e2ec:	dd802617 	ldw	r22,152(sp)
 812e2f0:	00bfff44 	movi	r2,-3
 812e2f4:	b0801c16 	blt	r22,r2,812e368 <___vfprintf_internal_r+0x1eb0>
 812e2f8:	d9402a17 	ldw	r5,168(sp)
 812e2fc:	2d801a16 	blt	r5,r22,812e368 <___vfprintf_internal_r+0x1eb0>
 812e300:	dd803215 	stw	r22,200(sp)
 812e304:	003e8906 	br	812dd2c <__alt_data_end+0xfc12dd2c>
 812e308:	01020534 	movhi	r4,2068
 812e30c:	212edf84 	addi	r4,r4,-17538
 812e310:	d9002c15 	stw	r4,176(sp)
 812e314:	003c9106 	br	812d55c <__alt_data_end+0xfc12d55c>
 812e318:	e005883a 	mov	r2,fp
 812e31c:	003e7906 	br	812dd04 <__alt_data_end+0xfc12dd04>
 812e320:	d9002a17 	ldw	r4,168(sp)
 812e324:	df002783 	ldbu	fp,158(sp)
 812e328:	dcc02e15 	stw	r19,184(sp)
 812e32c:	d9002915 	stw	r4,164(sp)
 812e330:	d9002b15 	stw	r4,172(sp)
 812e334:	d8002a15 	stw	zero,168(sp)
 812e338:	d8003215 	stw	zero,200(sp)
 812e33c:	003a3b06 	br	812cc2c <__alt_data_end+0xfc12cc2c>
 812e340:	9080004c 	andi	r2,r18,1
 812e344:	0039883a 	mov	fp,zero
 812e348:	10000426 	beq	r2,zero,812e35c <___vfprintf_internal_r+0x1ea4>
 812e34c:	00800c04 	movi	r2,48
 812e350:	dc001dc4 	addi	r16,sp,119
 812e354:	d8801dc5 	stb	r2,119(sp)
 812e358:	003b6406 	br	812d0ec <__alt_data_end+0xfc12d0ec>
 812e35c:	d8002b15 	stw	zero,172(sp)
 812e360:	dc001e04 	addi	r16,sp,120
 812e364:	003a2b06 	br	812cc14 <__alt_data_end+0xfc12cc14>
 812e368:	8c7fff84 	addi	r17,r17,-2
 812e36c:	b5bfffc4 	addi	r22,r22,-1
 812e370:	dd802615 	stw	r22,152(sp)
 812e374:	dc4022c5 	stb	r17,139(sp)
 812e378:	b000bf16 	blt	r22,zero,812e678 <___vfprintf_internal_r+0x21c0>
 812e37c:	00800ac4 	movi	r2,43
 812e380:	d8802305 	stb	r2,140(sp)
 812e384:	00800244 	movi	r2,9
 812e388:	15807016 	blt	r2,r22,812e54c <___vfprintf_internal_r+0x2094>
 812e38c:	00800c04 	movi	r2,48
 812e390:	b5800c04 	addi	r22,r22,48
 812e394:	d8802345 	stb	r2,141(sp)
 812e398:	dd802385 	stb	r22,142(sp)
 812e39c:	d88023c4 	addi	r2,sp,143
 812e3a0:	df0022c4 	addi	fp,sp,139
 812e3a4:	d8c03317 	ldw	r3,204(sp)
 812e3a8:	1739c83a 	sub	fp,r2,fp
 812e3ac:	d9003317 	ldw	r4,204(sp)
 812e3b0:	e0c7883a 	add	r3,fp,r3
 812e3b4:	df003a15 	stw	fp,232(sp)
 812e3b8:	d8c02b15 	stw	r3,172(sp)
 812e3bc:	00800044 	movi	r2,1
 812e3c0:	1100b30e 	bge	r2,r4,812e690 <___vfprintf_internal_r+0x21d8>
 812e3c4:	d8c02b17 	ldw	r3,172(sp)
 812e3c8:	18c00044 	addi	r3,r3,1
 812e3cc:	d8c02b15 	stw	r3,172(sp)
 812e3d0:	1805883a 	mov	r2,r3
 812e3d4:	1800ac16 	blt	r3,zero,812e688 <___vfprintf_internal_r+0x21d0>
 812e3d8:	d8003215 	stw	zero,200(sp)
 812e3dc:	003e5d06 	br	812dd54 <__alt_data_end+0xfc12dd54>
 812e3e0:	d9002d17 	ldw	r4,180(sp)
 812e3e4:	d9801e04 	addi	r6,sp,120
 812e3e8:	b80b883a 	mov	r5,r23
 812e3ec:	8133c980 	call	8133c98 <__sprint_r>
 812e3f0:	1039351e 	bne	r2,zero,812c8c8 <__alt_data_end+0xfc12c8c8>
 812e3f4:	dc402617 	ldw	r17,152(sp)
 812e3f8:	d8c02017 	ldw	r3,128(sp)
 812e3fc:	d8801f17 	ldw	r2,124(sp)
 812e400:	da000404 	addi	r8,sp,16
 812e404:	003ed606 	br	812df60 <__alt_data_end+0xfc12df60>
 812e408:	182b883a 	mov	r21,r3
 812e40c:	d8002a15 	stw	zero,168(sp)
 812e410:	00388c06 	br	812c644 <__alt_data_end+0xfc12c644>
 812e414:	d8802a17 	ldw	r2,168(sp)
 812e418:	103e071e 	bne	r2,zero,812dc38 <__alt_data_end+0xfc12dc38>
 812e41c:	dc002a15 	stw	r16,168(sp)
 812e420:	003e0506 	br	812dc38 <__alt_data_end+0xfc12dc38>
 812e424:	d9002a17 	ldw	r4,168(sp)
 812e428:	20c00044 	addi	r3,r4,1
 812e42c:	003e0f06 	br	812dc6c <__alt_data_end+0xfc12dc6c>
 812e430:	01400184 	movi	r5,6
 812e434:	d9402a15 	stw	r5,168(sp)
 812e438:	003dff06 	br	812dc38 <__alt_data_end+0xfc12dc38>
 812e43c:	d8802104 	addi	r2,sp,132
 812e440:	d8800315 	stw	r2,12(sp)
 812e444:	d8802504 	addi	r2,sp,148
 812e448:	d8800215 	stw	r2,8(sp)
 812e44c:	d8802604 	addi	r2,sp,152
 812e450:	d8800115 	stw	r2,4(sp)
 812e454:	d8802a17 	ldw	r2,168(sp)
 812e458:	d9403617 	ldw	r5,216(sp)
 812e45c:	d9002d17 	ldw	r4,180(sp)
 812e460:	d8800015 	stw	r2,0(sp)
 812e464:	01c000c4 	movi	r7,3
 812e468:	980d883a 	mov	r6,r19
 812e46c:	da003d15 	stw	r8,244(sp)
 812e470:	812ebe80 	call	812ebe8 <_dtoa_r>
 812e474:	d8c02a17 	ldw	r3,168(sp)
 812e478:	da003d17 	ldw	r8,244(sp)
 812e47c:	1021883a 	mov	r16,r2
 812e480:	10f9883a 	add	fp,r2,r3
 812e484:	81000007 	ldb	r4,0(r16)
 812e488:	00800c04 	movi	r2,48
 812e48c:	20805e26 	beq	r4,r2,812e608 <___vfprintf_internal_r+0x2150>
 812e490:	d8c02617 	ldw	r3,152(sp)
 812e494:	e0f9883a 	add	fp,fp,r3
 812e498:	003e0a06 	br	812dcc4 <__alt_data_end+0xfc12dcc4>
 812e49c:	00c00b44 	movi	r3,45
 812e4a0:	24e0003c 	xorhi	r19,r4,32768
 812e4a4:	d8c02905 	stb	r3,164(sp)
 812e4a8:	003de906 	br	812dc50 <__alt_data_end+0xfc12dc50>
 812e4ac:	d8c03217 	ldw	r3,200(sp)
 812e4b0:	00c07a0e 	bge	zero,r3,812e69c <___vfprintf_internal_r+0x21e4>
 812e4b4:	00800044 	movi	r2,1
 812e4b8:	d9003317 	ldw	r4,204(sp)
 812e4bc:	1105883a 	add	r2,r2,r4
 812e4c0:	d8802b15 	stw	r2,172(sp)
 812e4c4:	10004e16 	blt	r2,zero,812e600 <___vfprintf_internal_r+0x2148>
 812e4c8:	044019c4 	movi	r17,103
 812e4cc:	003e2106 	br	812dd54 <__alt_data_end+0xfc12dd54>
 812e4d0:	d9002a17 	ldw	r4,168(sp)
 812e4d4:	d8802104 	addi	r2,sp,132
 812e4d8:	d8800315 	stw	r2,12(sp)
 812e4dc:	d9000015 	stw	r4,0(sp)
 812e4e0:	d8802504 	addi	r2,sp,148
 812e4e4:	d9403617 	ldw	r5,216(sp)
 812e4e8:	d9002d17 	ldw	r4,180(sp)
 812e4ec:	d8800215 	stw	r2,8(sp)
 812e4f0:	d8802604 	addi	r2,sp,152
 812e4f4:	d8800115 	stw	r2,4(sp)
 812e4f8:	01c000c4 	movi	r7,3
 812e4fc:	980d883a 	mov	r6,r19
 812e500:	da003d15 	stw	r8,244(sp)
 812e504:	812ebe80 	call	812ebe8 <_dtoa_r>
 812e508:	d8c02a17 	ldw	r3,168(sp)
 812e50c:	da003d17 	ldw	r8,244(sp)
 812e510:	1021883a 	mov	r16,r2
 812e514:	00801184 	movi	r2,70
 812e518:	80f9883a 	add	fp,r16,r3
 812e51c:	88bfd926 	beq	r17,r2,812e484 <__alt_data_end+0xfc12e484>
 812e520:	003de806 	br	812dcc4 <__alt_data_end+0xfc12dcc4>
 812e524:	d9002a17 	ldw	r4,168(sp)
 812e528:	00c04d0e 	bge	zero,r3,812e660 <___vfprintf_internal_r+0x21a8>
 812e52c:	2000441e 	bne	r4,zero,812e640 <___vfprintf_internal_r+0x2188>
 812e530:	9480004c 	andi	r18,r18,1
 812e534:	9000421e 	bne	r18,zero,812e640 <___vfprintf_internal_r+0x2188>
 812e538:	1805883a 	mov	r2,r3
 812e53c:	18006f16 	blt	r3,zero,812e6fc <___vfprintf_internal_r+0x2244>
 812e540:	d8c03217 	ldw	r3,200(sp)
 812e544:	d8c02b15 	stw	r3,172(sp)
 812e548:	003e0206 	br	812dd54 <__alt_data_end+0xfc12dd54>
 812e54c:	df0022c4 	addi	fp,sp,139
 812e550:	dc002a15 	stw	r16,168(sp)
 812e554:	4027883a 	mov	r19,r8
 812e558:	e021883a 	mov	r16,fp
 812e55c:	b009883a 	mov	r4,r22
 812e560:	01400284 	movi	r5,10
 812e564:	81368240 	call	8136824 <__modsi3>
 812e568:	10800c04 	addi	r2,r2,48
 812e56c:	843fffc4 	addi	r16,r16,-1
 812e570:	b009883a 	mov	r4,r22
 812e574:	01400284 	movi	r5,10
 812e578:	80800005 	stb	r2,0(r16)
 812e57c:	81367a00 	call	81367a0 <__divsi3>
 812e580:	102d883a 	mov	r22,r2
 812e584:	00800244 	movi	r2,9
 812e588:	15bff416 	blt	r2,r22,812e55c <__alt_data_end+0xfc12e55c>
 812e58c:	9811883a 	mov	r8,r19
 812e590:	b0800c04 	addi	r2,r22,48
 812e594:	8027883a 	mov	r19,r16
 812e598:	997fffc4 	addi	r5,r19,-1
 812e59c:	98bfffc5 	stb	r2,-1(r19)
 812e5a0:	dc002a17 	ldw	r16,168(sp)
 812e5a4:	2f006d2e 	bgeu	r5,fp,812e75c <___vfprintf_internal_r+0x22a4>
 812e5a8:	d9c02384 	addi	r7,sp,142
 812e5ac:	3ccfc83a 	sub	r7,r7,r19
 812e5b0:	d9002344 	addi	r4,sp,141
 812e5b4:	e1cf883a 	add	r7,fp,r7
 812e5b8:	00000106 	br	812e5c0 <___vfprintf_internal_r+0x2108>
 812e5bc:	28800003 	ldbu	r2,0(r5)
 812e5c0:	20800005 	stb	r2,0(r4)
 812e5c4:	21000044 	addi	r4,r4,1
 812e5c8:	29400044 	addi	r5,r5,1
 812e5cc:	393ffb1e 	bne	r7,r4,812e5bc <__alt_data_end+0xfc12e5bc>
 812e5d0:	d8802304 	addi	r2,sp,140
 812e5d4:	14c5c83a 	sub	r2,r2,r19
 812e5d8:	d8c02344 	addi	r3,sp,141
 812e5dc:	1885883a 	add	r2,r3,r2
 812e5e0:	003f7006 	br	812e3a4 <__alt_data_end+0xfc12e3a4>
 812e5e4:	0005883a 	mov	r2,zero
 812e5e8:	003f0f06 	br	812e228 <__alt_data_end+0xfc12e228>
 812e5ec:	d8c03217 	ldw	r3,200(sp)
 812e5f0:	18c00044 	addi	r3,r3,1
 812e5f4:	d8c02b15 	stw	r3,172(sp)
 812e5f8:	1805883a 	mov	r2,r3
 812e5fc:	183fb20e 	bge	r3,zero,812e4c8 <__alt_data_end+0xfc12e4c8>
 812e600:	0005883a 	mov	r2,zero
 812e604:	003fb006 	br	812e4c8 <__alt_data_end+0xfc12e4c8>
 812e608:	d9003617 	ldw	r4,216(sp)
 812e60c:	000d883a 	mov	r6,zero
 812e610:	000f883a 	mov	r7,zero
 812e614:	980b883a 	mov	r5,r19
 812e618:	d8c03c15 	stw	r3,240(sp)
 812e61c:	da003d15 	stw	r8,244(sp)
 812e620:	8137bd00 	call	8137bd0 <__eqdf2>
 812e624:	d8c03c17 	ldw	r3,240(sp)
 812e628:	da003d17 	ldw	r8,244(sp)
 812e62c:	103f9826 	beq	r2,zero,812e490 <__alt_data_end+0xfc12e490>
 812e630:	00800044 	movi	r2,1
 812e634:	10c7c83a 	sub	r3,r2,r3
 812e638:	d8c02615 	stw	r3,152(sp)
 812e63c:	003f9506 	br	812e494 <__alt_data_end+0xfc12e494>
 812e640:	d9002a17 	ldw	r4,168(sp)
 812e644:	d8c03217 	ldw	r3,200(sp)
 812e648:	20800044 	addi	r2,r4,1
 812e64c:	1885883a 	add	r2,r3,r2
 812e650:	d8802b15 	stw	r2,172(sp)
 812e654:	103dbf0e 	bge	r2,zero,812dd54 <__alt_data_end+0xfc12dd54>
 812e658:	0005883a 	mov	r2,zero
 812e65c:	003dbd06 	br	812dd54 <__alt_data_end+0xfc12dd54>
 812e660:	2000201e 	bne	r4,zero,812e6e4 <___vfprintf_internal_r+0x222c>
 812e664:	9480004c 	andi	r18,r18,1
 812e668:	90001e1e 	bne	r18,zero,812e6e4 <___vfprintf_internal_r+0x222c>
 812e66c:	00800044 	movi	r2,1
 812e670:	d8802b15 	stw	r2,172(sp)
 812e674:	003db706 	br	812dd54 <__alt_data_end+0xfc12dd54>
 812e678:	00800b44 	movi	r2,45
 812e67c:	05adc83a 	sub	r22,zero,r22
 812e680:	d8802305 	stb	r2,140(sp)
 812e684:	003f3f06 	br	812e384 <__alt_data_end+0xfc12e384>
 812e688:	0005883a 	mov	r2,zero
 812e68c:	003f5206 	br	812e3d8 <__alt_data_end+0xfc12e3d8>
 812e690:	90a4703a 	and	r18,r18,r2
 812e694:	903f4e26 	beq	r18,zero,812e3d0 <__alt_data_end+0xfc12e3d0>
 812e698:	003f4a06 	br	812e3c4 <__alt_data_end+0xfc12e3c4>
 812e69c:	00800084 	movi	r2,2
 812e6a0:	10c5c83a 	sub	r2,r2,r3
 812e6a4:	003f8406 	br	812e4b8 <__alt_data_end+0xfc12e4b8>
 812e6a8:	d9402e17 	ldw	r5,184(sp)
 812e6ac:	d9002e17 	ldw	r4,184(sp)
 812e6b0:	ac400043 	ldbu	r17,1(r21)
 812e6b4:	29400017 	ldw	r5,0(r5)
 812e6b8:	20800104 	addi	r2,r4,4
 812e6bc:	d8802e15 	stw	r2,184(sp)
 812e6c0:	d9402a15 	stw	r5,168(sp)
 812e6c4:	182b883a 	mov	r21,r3
 812e6c8:	283e7b0e 	bge	r5,zero,812e0b8 <__alt_data_end+0xfc12e0b8>
 812e6cc:	8c403fcc 	andi	r17,r17,255
 812e6d0:	017fffc4 	movi	r5,-1
 812e6d4:	8c40201c 	xori	r17,r17,128
 812e6d8:	d9402a15 	stw	r5,168(sp)
 812e6dc:	8c7fe004 	addi	r17,r17,-128
 812e6e0:	0037d706 	br	812c640 <__alt_data_end+0xfc12c640>
 812e6e4:	d8c02a17 	ldw	r3,168(sp)
 812e6e8:	18c00084 	addi	r3,r3,2
 812e6ec:	d8c02b15 	stw	r3,172(sp)
 812e6f0:	1805883a 	mov	r2,r3
 812e6f4:	183d970e 	bge	r3,zero,812dd54 <__alt_data_end+0xfc12dd54>
 812e6f8:	003fd706 	br	812e658 <__alt_data_end+0xfc12e658>
 812e6fc:	0005883a 	mov	r2,zero
 812e700:	003f8f06 	br	812e540 <__alt_data_end+0xfc12e540>
 812e704:	9080004c 	andi	r2,r18,1
 812e708:	103f821e 	bne	r2,zero,812e514 <__alt_data_end+0xfc12e514>
 812e70c:	d8802117 	ldw	r2,132(sp)
 812e710:	1405c83a 	sub	r2,r2,r16
 812e714:	d8803315 	stw	r2,204(sp)
 812e718:	b47ef426 	beq	r22,r17,812e2ec <__alt_data_end+0xfc12e2ec>
 812e71c:	dd802617 	ldw	r22,152(sp)
 812e720:	003f1206 	br	812e36c <__alt_data_end+0xfc12e36c>
 812e724:	d8c02b03 	ldbu	r3,172(sp)
 812e728:	d8c02785 	stb	r3,158(sp)
 812e72c:	0038df06 	br	812caac <__alt_data_end+0xfc12caac>
 812e730:	d8c02b03 	ldbu	r3,172(sp)
 812e734:	d8c02785 	stb	r3,158(sp)
 812e738:	0038aa06 	br	812c9e4 <__alt_data_end+0xfc12c9e4>
 812e73c:	d8c02b03 	ldbu	r3,172(sp)
 812e740:	d8c02785 	stb	r3,158(sp)
 812e744:	003a4306 	br	812d054 <__alt_data_end+0xfc12d054>
 812e748:	d8c02b03 	ldbu	r3,172(sp)
 812e74c:	d8c02785 	stb	r3,158(sp)
 812e750:	003af506 	br	812d328 <__alt_data_end+0xfc12d328>
 812e754:	0005883a 	mov	r2,zero
 812e758:	003d7b06 	br	812dd48 <__alt_data_end+0xfc12dd48>
 812e75c:	d8802344 	addi	r2,sp,141
 812e760:	003f1006 	br	812e3a4 <__alt_data_end+0xfc12e3a4>
 812e764:	d8c02b03 	ldbu	r3,172(sp)
 812e768:	d8c02785 	stb	r3,158(sp)
 812e76c:	0038fd06 	br	812cb64 <__alt_data_end+0xfc12cb64>
 812e770:	d8c02b03 	ldbu	r3,172(sp)
 812e774:	d8c02785 	stb	r3,158(sp)
 812e778:	003a9706 	br	812d1d8 <__alt_data_end+0xfc12d1d8>
 812e77c:	d8c02b03 	ldbu	r3,172(sp)
 812e780:	d8c02785 	stb	r3,158(sp)
 812e784:	003a1806 	br	812cfe8 <__alt_data_end+0xfc12cfe8>
 812e788:	d8c02b03 	ldbu	r3,172(sp)
 812e78c:	d8c02785 	stb	r3,158(sp)
 812e790:	003abe06 	br	812d28c <__alt_data_end+0xfc12d28c>

0812e794 <__vfprintf_internal>:
 812e794:	00820534 	movhi	r2,2068
 812e798:	10b63c04 	addi	r2,r2,-10000
 812e79c:	300f883a 	mov	r7,r6
 812e7a0:	280d883a 	mov	r6,r5
 812e7a4:	200b883a 	mov	r5,r4
 812e7a8:	11000017 	ldw	r4,0(r2)
 812e7ac:	812c4b81 	jmpi	812c4b8 <___vfprintf_internal_r>

0812e7b0 <__sbprintf>:
 812e7b0:	2880030b 	ldhu	r2,12(r5)
 812e7b4:	2ac01917 	ldw	r11,100(r5)
 812e7b8:	2a80038b 	ldhu	r10,14(r5)
 812e7bc:	2a400717 	ldw	r9,28(r5)
 812e7c0:	2a000917 	ldw	r8,36(r5)
 812e7c4:	defee204 	addi	sp,sp,-1144
 812e7c8:	00c10004 	movi	r3,1024
 812e7cc:	dc011a15 	stw	r16,1128(sp)
 812e7d0:	10bfff4c 	andi	r2,r2,65533
 812e7d4:	2821883a 	mov	r16,r5
 812e7d8:	d8cb883a 	add	r5,sp,r3
 812e7dc:	dc811c15 	stw	r18,1136(sp)
 812e7e0:	dc411b15 	stw	r17,1132(sp)
 812e7e4:	dfc11d15 	stw	ra,1140(sp)
 812e7e8:	2025883a 	mov	r18,r4
 812e7ec:	d881030d 	sth	r2,1036(sp)
 812e7f0:	dac11915 	stw	r11,1124(sp)
 812e7f4:	da81038d 	sth	r10,1038(sp)
 812e7f8:	da410715 	stw	r9,1052(sp)
 812e7fc:	da010915 	stw	r8,1060(sp)
 812e800:	dec10015 	stw	sp,1024(sp)
 812e804:	dec10415 	stw	sp,1040(sp)
 812e808:	d8c10215 	stw	r3,1032(sp)
 812e80c:	d8c10515 	stw	r3,1044(sp)
 812e810:	d8010615 	stw	zero,1048(sp)
 812e814:	812c4b80 	call	812c4b8 <___vfprintf_internal_r>
 812e818:	1023883a 	mov	r17,r2
 812e81c:	10000416 	blt	r2,zero,812e830 <__sbprintf+0x80>
 812e820:	d9410004 	addi	r5,sp,1024
 812e824:	9009883a 	mov	r4,r18
 812e828:	813048c0 	call	813048c <_fflush_r>
 812e82c:	10000d1e 	bne	r2,zero,812e864 <__sbprintf+0xb4>
 812e830:	d881030b 	ldhu	r2,1036(sp)
 812e834:	1080100c 	andi	r2,r2,64
 812e838:	10000326 	beq	r2,zero,812e848 <__sbprintf+0x98>
 812e83c:	8080030b 	ldhu	r2,12(r16)
 812e840:	10801014 	ori	r2,r2,64
 812e844:	8080030d 	sth	r2,12(r16)
 812e848:	8805883a 	mov	r2,r17
 812e84c:	dfc11d17 	ldw	ra,1140(sp)
 812e850:	dc811c17 	ldw	r18,1136(sp)
 812e854:	dc411b17 	ldw	r17,1132(sp)
 812e858:	dc011a17 	ldw	r16,1128(sp)
 812e85c:	dec11e04 	addi	sp,sp,1144
 812e860:	f800283a 	ret
 812e864:	047fffc4 	movi	r17,-1
 812e868:	003ff106 	br	812e830 <__alt_data_end+0xfc12e830>

0812e86c <__swsetup_r>:
 812e86c:	00820534 	movhi	r2,2068
 812e870:	defffd04 	addi	sp,sp,-12
 812e874:	10b63c04 	addi	r2,r2,-10000
 812e878:	dc400115 	stw	r17,4(sp)
 812e87c:	2023883a 	mov	r17,r4
 812e880:	11000017 	ldw	r4,0(r2)
 812e884:	dc000015 	stw	r16,0(sp)
 812e888:	dfc00215 	stw	ra,8(sp)
 812e88c:	2821883a 	mov	r16,r5
 812e890:	20000226 	beq	r4,zero,812e89c <__swsetup_r+0x30>
 812e894:	20800e17 	ldw	r2,56(r4)
 812e898:	10003126 	beq	r2,zero,812e960 <__swsetup_r+0xf4>
 812e89c:	8080030b 	ldhu	r2,12(r16)
 812e8a0:	10c0020c 	andi	r3,r2,8
 812e8a4:	1009883a 	mov	r4,r2
 812e8a8:	18000f26 	beq	r3,zero,812e8e8 <__swsetup_r+0x7c>
 812e8ac:	80c00417 	ldw	r3,16(r16)
 812e8b0:	18001526 	beq	r3,zero,812e908 <__swsetup_r+0x9c>
 812e8b4:	1100004c 	andi	r4,r2,1
 812e8b8:	20001c1e 	bne	r4,zero,812e92c <__swsetup_r+0xc0>
 812e8bc:	1080008c 	andi	r2,r2,2
 812e8c0:	1000291e 	bne	r2,zero,812e968 <__swsetup_r+0xfc>
 812e8c4:	80800517 	ldw	r2,20(r16)
 812e8c8:	80800215 	stw	r2,8(r16)
 812e8cc:	18001c26 	beq	r3,zero,812e940 <__swsetup_r+0xd4>
 812e8d0:	0005883a 	mov	r2,zero
 812e8d4:	dfc00217 	ldw	ra,8(sp)
 812e8d8:	dc400117 	ldw	r17,4(sp)
 812e8dc:	dc000017 	ldw	r16,0(sp)
 812e8e0:	dec00304 	addi	sp,sp,12
 812e8e4:	f800283a 	ret
 812e8e8:	2080040c 	andi	r2,r4,16
 812e8ec:	10002e26 	beq	r2,zero,812e9a8 <__swsetup_r+0x13c>
 812e8f0:	2080010c 	andi	r2,r4,4
 812e8f4:	10001e1e 	bne	r2,zero,812e970 <__swsetup_r+0x104>
 812e8f8:	80c00417 	ldw	r3,16(r16)
 812e8fc:	20800214 	ori	r2,r4,8
 812e900:	8080030d 	sth	r2,12(r16)
 812e904:	183feb1e 	bne	r3,zero,812e8b4 <__alt_data_end+0xfc12e8b4>
 812e908:	1100a00c 	andi	r4,r2,640
 812e90c:	01408004 	movi	r5,512
 812e910:	217fe826 	beq	r4,r5,812e8b4 <__alt_data_end+0xfc12e8b4>
 812e914:	800b883a 	mov	r5,r16
 812e918:	8809883a 	mov	r4,r17
 812e91c:	81314280 	call	8131428 <__smakebuf_r>
 812e920:	8080030b 	ldhu	r2,12(r16)
 812e924:	80c00417 	ldw	r3,16(r16)
 812e928:	003fe206 	br	812e8b4 <__alt_data_end+0xfc12e8b4>
 812e92c:	80800517 	ldw	r2,20(r16)
 812e930:	80000215 	stw	zero,8(r16)
 812e934:	0085c83a 	sub	r2,zero,r2
 812e938:	80800615 	stw	r2,24(r16)
 812e93c:	183fe41e 	bne	r3,zero,812e8d0 <__alt_data_end+0xfc12e8d0>
 812e940:	80c0030b 	ldhu	r3,12(r16)
 812e944:	0005883a 	mov	r2,zero
 812e948:	1900200c 	andi	r4,r3,128
 812e94c:	203fe126 	beq	r4,zero,812e8d4 <__alt_data_end+0xfc12e8d4>
 812e950:	18c01014 	ori	r3,r3,64
 812e954:	80c0030d 	sth	r3,12(r16)
 812e958:	00bfffc4 	movi	r2,-1
 812e95c:	003fdd06 	br	812e8d4 <__alt_data_end+0xfc12e8d4>
 812e960:	81308780 	call	8130878 <__sinit>
 812e964:	003fcd06 	br	812e89c <__alt_data_end+0xfc12e89c>
 812e968:	0005883a 	mov	r2,zero
 812e96c:	003fd606 	br	812e8c8 <__alt_data_end+0xfc12e8c8>
 812e970:	81400c17 	ldw	r5,48(r16)
 812e974:	28000626 	beq	r5,zero,812e990 <__swsetup_r+0x124>
 812e978:	80801004 	addi	r2,r16,64
 812e97c:	28800326 	beq	r5,r2,812e98c <__swsetup_r+0x120>
 812e980:	8809883a 	mov	r4,r17
 812e984:	81309ec0 	call	81309ec <_free_r>
 812e988:	8100030b 	ldhu	r4,12(r16)
 812e98c:	80000c15 	stw	zero,48(r16)
 812e990:	80c00417 	ldw	r3,16(r16)
 812e994:	00bff6c4 	movi	r2,-37
 812e998:	1108703a 	and	r4,r2,r4
 812e99c:	80000115 	stw	zero,4(r16)
 812e9a0:	80c00015 	stw	r3,0(r16)
 812e9a4:	003fd506 	br	812e8fc <__alt_data_end+0xfc12e8fc>
 812e9a8:	00800244 	movi	r2,9
 812e9ac:	88800015 	stw	r2,0(r17)
 812e9b0:	20801014 	ori	r2,r4,64
 812e9b4:	8080030d 	sth	r2,12(r16)
 812e9b8:	00bfffc4 	movi	r2,-1
 812e9bc:	003fc506 	br	812e8d4 <__alt_data_end+0xfc12e8d4>

0812e9c0 <quorem>:
 812e9c0:	defff204 	addi	sp,sp,-56
 812e9c4:	ddc00b15 	stw	r23,44(sp)
 812e9c8:	20800417 	ldw	r2,16(r4)
 812e9cc:	2dc00417 	ldw	r23,16(r5)
 812e9d0:	dfc00d15 	stw	ra,52(sp)
 812e9d4:	df000c15 	stw	fp,48(sp)
 812e9d8:	dd800a15 	stw	r22,40(sp)
 812e9dc:	dd400915 	stw	r21,36(sp)
 812e9e0:	dd000815 	stw	r20,32(sp)
 812e9e4:	dcc00715 	stw	r19,28(sp)
 812e9e8:	dc800615 	stw	r18,24(sp)
 812e9ec:	dc400515 	stw	r17,20(sp)
 812e9f0:	dc000415 	stw	r16,16(sp)
 812e9f4:	15c07a16 	blt	r2,r23,812ebe0 <quorem+0x220>
 812e9f8:	bdffffc4 	addi	r23,r23,-1
 812e9fc:	bde9883a 	add	r20,r23,r23
 812ea00:	28c00504 	addi	r3,r5,20
 812ea04:	a529883a 	add	r20,r20,r20
 812ea08:	1d39883a 	add	fp,r3,r20
 812ea0c:	24c00504 	addi	r19,r4,20
 812ea10:	d9400215 	stw	r5,8(sp)
 812ea14:	9d29883a 	add	r20,r19,r20
 812ea18:	e1400017 	ldw	r5,0(fp)
 812ea1c:	d9000015 	stw	r4,0(sp)
 812ea20:	a1000017 	ldw	r4,0(r20)
 812ea24:	29400044 	addi	r5,r5,1
 812ea28:	d8c00115 	stw	r3,4(sp)
 812ea2c:	dd000315 	stw	r20,12(sp)
 812ea30:	81368980 	call	8136898 <__udivsi3>
 812ea34:	1025883a 	mov	r18,r2
 812ea38:	10003026 	beq	r2,zero,812eafc <quorem+0x13c>
 812ea3c:	dc400117 	ldw	r17,4(sp)
 812ea40:	9829883a 	mov	r20,r19
 812ea44:	002d883a 	mov	r22,zero
 812ea48:	0021883a 	mov	r16,zero
 812ea4c:	8d400017 	ldw	r21,0(r17)
 812ea50:	900b883a 	mov	r5,r18
 812ea54:	8c400104 	addi	r17,r17,4
 812ea58:	a93fffcc 	andi	r4,r21,65535
 812ea5c:	812c2b80 	call	812c2b8 <__mulsi3>
 812ea60:	a808d43a 	srli	r4,r21,16
 812ea64:	900b883a 	mov	r5,r18
 812ea68:	15ad883a 	add	r22,r2,r22
 812ea6c:	812c2b80 	call	812c2b8 <__mulsi3>
 812ea70:	a1000017 	ldw	r4,0(r20)
 812ea74:	b00cd43a 	srli	r6,r22,16
 812ea78:	b0ffffcc 	andi	r3,r22,65535
 812ea7c:	217fffcc 	andi	r5,r4,65535
 812ea80:	2c21883a 	add	r16,r5,r16
 812ea84:	80c7c83a 	sub	r3,r16,r3
 812ea88:	2008d43a 	srli	r4,r4,16
 812ea8c:	1185883a 	add	r2,r2,r6
 812ea90:	1821d43a 	srai	r16,r3,16
 812ea94:	117fffcc 	andi	r5,r2,65535
 812ea98:	2149c83a 	sub	r4,r4,r5
 812ea9c:	2421883a 	add	r16,r4,r16
 812eaa0:	8008943a 	slli	r4,r16,16
 812eaa4:	18ffffcc 	andi	r3,r3,65535
 812eaa8:	102cd43a 	srli	r22,r2,16
 812eaac:	20c8b03a 	or	r4,r4,r3
 812eab0:	a1000015 	stw	r4,0(r20)
 812eab4:	8021d43a 	srai	r16,r16,16
 812eab8:	a5000104 	addi	r20,r20,4
 812eabc:	e47fe32e 	bgeu	fp,r17,812ea4c <__alt_data_end+0xfc12ea4c>
 812eac0:	d8c00317 	ldw	r3,12(sp)
 812eac4:	18800017 	ldw	r2,0(r3)
 812eac8:	10000c1e 	bne	r2,zero,812eafc <quorem+0x13c>
 812eacc:	18bfff04 	addi	r2,r3,-4
 812ead0:	9880082e 	bgeu	r19,r2,812eaf4 <quorem+0x134>
 812ead4:	18ffff17 	ldw	r3,-4(r3)
 812ead8:	18000326 	beq	r3,zero,812eae8 <quorem+0x128>
 812eadc:	00000506 	br	812eaf4 <quorem+0x134>
 812eae0:	10c00017 	ldw	r3,0(r2)
 812eae4:	1800031e 	bne	r3,zero,812eaf4 <quorem+0x134>
 812eae8:	10bfff04 	addi	r2,r2,-4
 812eaec:	bdffffc4 	addi	r23,r23,-1
 812eaf0:	98bffb36 	bltu	r19,r2,812eae0 <__alt_data_end+0xfc12eae0>
 812eaf4:	d8c00017 	ldw	r3,0(sp)
 812eaf8:	1dc00415 	stw	r23,16(r3)
 812eafc:	d9400217 	ldw	r5,8(sp)
 812eb00:	d9000017 	ldw	r4,0(sp)
 812eb04:	8132c240 	call	8132c24 <__mcmp>
 812eb08:	10002816 	blt	r2,zero,812ebac <quorem+0x1ec>
 812eb0c:	dc400117 	ldw	r17,4(sp)
 812eb10:	94800044 	addi	r18,r18,1
 812eb14:	980d883a 	mov	r6,r19
 812eb18:	0007883a 	mov	r3,zero
 812eb1c:	31000017 	ldw	r4,0(r6)
 812eb20:	89400017 	ldw	r5,0(r17)
 812eb24:	31800104 	addi	r6,r6,4
 812eb28:	20bfffcc 	andi	r2,r4,65535
 812eb2c:	10c7883a 	add	r3,r2,r3
 812eb30:	28bfffcc 	andi	r2,r5,65535
 812eb34:	1885c83a 	sub	r2,r3,r2
 812eb38:	280ad43a 	srli	r5,r5,16
 812eb3c:	2008d43a 	srli	r4,r4,16
 812eb40:	1007d43a 	srai	r3,r2,16
 812eb44:	10bfffcc 	andi	r2,r2,65535
 812eb48:	2149c83a 	sub	r4,r4,r5
 812eb4c:	20c9883a 	add	r4,r4,r3
 812eb50:	200a943a 	slli	r5,r4,16
 812eb54:	8c400104 	addi	r17,r17,4
 812eb58:	2007d43a 	srai	r3,r4,16
 812eb5c:	2884b03a 	or	r2,r5,r2
 812eb60:	30bfff15 	stw	r2,-4(r6)
 812eb64:	e47fed2e 	bgeu	fp,r17,812eb1c <__alt_data_end+0xfc12eb1c>
 812eb68:	bdc5883a 	add	r2,r23,r23
 812eb6c:	1085883a 	add	r2,r2,r2
 812eb70:	9887883a 	add	r3,r19,r2
 812eb74:	18800017 	ldw	r2,0(r3)
 812eb78:	10000c1e 	bne	r2,zero,812ebac <quorem+0x1ec>
 812eb7c:	18bfff04 	addi	r2,r3,-4
 812eb80:	9880082e 	bgeu	r19,r2,812eba4 <quorem+0x1e4>
 812eb84:	18ffff17 	ldw	r3,-4(r3)
 812eb88:	18000326 	beq	r3,zero,812eb98 <quorem+0x1d8>
 812eb8c:	00000506 	br	812eba4 <quorem+0x1e4>
 812eb90:	10c00017 	ldw	r3,0(r2)
 812eb94:	1800031e 	bne	r3,zero,812eba4 <quorem+0x1e4>
 812eb98:	10bfff04 	addi	r2,r2,-4
 812eb9c:	bdffffc4 	addi	r23,r23,-1
 812eba0:	98bffb36 	bltu	r19,r2,812eb90 <__alt_data_end+0xfc12eb90>
 812eba4:	d8c00017 	ldw	r3,0(sp)
 812eba8:	1dc00415 	stw	r23,16(r3)
 812ebac:	9005883a 	mov	r2,r18
 812ebb0:	dfc00d17 	ldw	ra,52(sp)
 812ebb4:	df000c17 	ldw	fp,48(sp)
 812ebb8:	ddc00b17 	ldw	r23,44(sp)
 812ebbc:	dd800a17 	ldw	r22,40(sp)
 812ebc0:	dd400917 	ldw	r21,36(sp)
 812ebc4:	dd000817 	ldw	r20,32(sp)
 812ebc8:	dcc00717 	ldw	r19,28(sp)
 812ebcc:	dc800617 	ldw	r18,24(sp)
 812ebd0:	dc400517 	ldw	r17,20(sp)
 812ebd4:	dc000417 	ldw	r16,16(sp)
 812ebd8:	dec00e04 	addi	sp,sp,56
 812ebdc:	f800283a 	ret
 812ebe0:	0005883a 	mov	r2,zero
 812ebe4:	003ff206 	br	812ebb0 <__alt_data_end+0xfc12ebb0>

0812ebe8 <_dtoa_r>:
 812ebe8:	20801017 	ldw	r2,64(r4)
 812ebec:	deffde04 	addi	sp,sp,-136
 812ebf0:	df002015 	stw	fp,128(sp)
 812ebf4:	dcc01b15 	stw	r19,108(sp)
 812ebf8:	dc801a15 	stw	r18,104(sp)
 812ebfc:	dc401915 	stw	r17,100(sp)
 812ec00:	dc001815 	stw	r16,96(sp)
 812ec04:	dfc02115 	stw	ra,132(sp)
 812ec08:	ddc01f15 	stw	r23,124(sp)
 812ec0c:	dd801e15 	stw	r22,120(sp)
 812ec10:	dd401d15 	stw	r21,116(sp)
 812ec14:	dd001c15 	stw	r20,112(sp)
 812ec18:	d9c00315 	stw	r7,12(sp)
 812ec1c:	2039883a 	mov	fp,r4
 812ec20:	3023883a 	mov	r17,r6
 812ec24:	2825883a 	mov	r18,r5
 812ec28:	dc002417 	ldw	r16,144(sp)
 812ec2c:	3027883a 	mov	r19,r6
 812ec30:	10000826 	beq	r2,zero,812ec54 <_dtoa_r+0x6c>
 812ec34:	21801117 	ldw	r6,68(r4)
 812ec38:	00c00044 	movi	r3,1
 812ec3c:	100b883a 	mov	r5,r2
 812ec40:	1986983a 	sll	r3,r3,r6
 812ec44:	11800115 	stw	r6,4(r2)
 812ec48:	10c00215 	stw	r3,8(r2)
 812ec4c:	81323480 	call	8132348 <_Bfree>
 812ec50:	e0001015 	stw	zero,64(fp)
 812ec54:	88002e16 	blt	r17,zero,812ed10 <_dtoa_r+0x128>
 812ec58:	80000015 	stw	zero,0(r16)
 812ec5c:	889ffc2c 	andhi	r2,r17,32752
 812ec60:	00dffc34 	movhi	r3,32752
 812ec64:	10c01c26 	beq	r2,r3,812ecd8 <_dtoa_r+0xf0>
 812ec68:	000d883a 	mov	r6,zero
 812ec6c:	000f883a 	mov	r7,zero
 812ec70:	9009883a 	mov	r4,r18
 812ec74:	980b883a 	mov	r5,r19
 812ec78:	8137bd00 	call	8137bd0 <__eqdf2>
 812ec7c:	10002b1e 	bne	r2,zero,812ed2c <_dtoa_r+0x144>
 812ec80:	d9c02317 	ldw	r7,140(sp)
 812ec84:	00800044 	movi	r2,1
 812ec88:	38800015 	stw	r2,0(r7)
 812ec8c:	d8802517 	ldw	r2,148(sp)
 812ec90:	10019e26 	beq	r2,zero,812f30c <_dtoa_r+0x724>
 812ec94:	d8c02517 	ldw	r3,148(sp)
 812ec98:	00820534 	movhi	r2,2068
 812ec9c:	10aedf44 	addi	r2,r2,-17539
 812eca0:	18800015 	stw	r2,0(r3)
 812eca4:	10bfffc4 	addi	r2,r2,-1
 812eca8:	dfc02117 	ldw	ra,132(sp)
 812ecac:	df002017 	ldw	fp,128(sp)
 812ecb0:	ddc01f17 	ldw	r23,124(sp)
 812ecb4:	dd801e17 	ldw	r22,120(sp)
 812ecb8:	dd401d17 	ldw	r21,116(sp)
 812ecbc:	dd001c17 	ldw	r20,112(sp)
 812ecc0:	dcc01b17 	ldw	r19,108(sp)
 812ecc4:	dc801a17 	ldw	r18,104(sp)
 812ecc8:	dc401917 	ldw	r17,100(sp)
 812eccc:	dc001817 	ldw	r16,96(sp)
 812ecd0:	dec02204 	addi	sp,sp,136
 812ecd4:	f800283a 	ret
 812ecd8:	d8c02317 	ldw	r3,140(sp)
 812ecdc:	0089c3c4 	movi	r2,9999
 812ece0:	18800015 	stw	r2,0(r3)
 812ece4:	90017726 	beq	r18,zero,812f2c4 <_dtoa_r+0x6dc>
 812ece8:	00820534 	movhi	r2,2068
 812ecec:	10aeeb04 	addi	r2,r2,-17492
 812ecf0:	d9002517 	ldw	r4,148(sp)
 812ecf4:	203fec26 	beq	r4,zero,812eca8 <__alt_data_end+0xfc12eca8>
 812ecf8:	10c000c7 	ldb	r3,3(r2)
 812ecfc:	1801781e 	bne	r3,zero,812f2e0 <_dtoa_r+0x6f8>
 812ed00:	10c000c4 	addi	r3,r2,3
 812ed04:	d9802517 	ldw	r6,148(sp)
 812ed08:	30c00015 	stw	r3,0(r6)
 812ed0c:	003fe606 	br	812eca8 <__alt_data_end+0xfc12eca8>
 812ed10:	04e00034 	movhi	r19,32768
 812ed14:	9cffffc4 	addi	r19,r19,-1
 812ed18:	00800044 	movi	r2,1
 812ed1c:	8ce6703a 	and	r19,r17,r19
 812ed20:	80800015 	stw	r2,0(r16)
 812ed24:	9823883a 	mov	r17,r19
 812ed28:	003fcc06 	br	812ec5c <__alt_data_end+0xfc12ec5c>
 812ed2c:	d8800204 	addi	r2,sp,8
 812ed30:	d8800015 	stw	r2,0(sp)
 812ed34:	d9c00104 	addi	r7,sp,4
 812ed38:	900b883a 	mov	r5,r18
 812ed3c:	980d883a 	mov	r6,r19
 812ed40:	e009883a 	mov	r4,fp
 812ed44:	8820d53a 	srli	r16,r17,20
 812ed48:	8132ff00 	call	8132ff0 <__d2b>
 812ed4c:	d8800915 	stw	r2,36(sp)
 812ed50:	8001651e 	bne	r16,zero,812f2e8 <_dtoa_r+0x700>
 812ed54:	dd800217 	ldw	r22,8(sp)
 812ed58:	dc000117 	ldw	r16,4(sp)
 812ed5c:	00800804 	movi	r2,32
 812ed60:	b421883a 	add	r16,r22,r16
 812ed64:	80c10c84 	addi	r3,r16,1074
 812ed68:	10c2d10e 	bge	r2,r3,812f8b0 <_dtoa_r+0xcc8>
 812ed6c:	00801004 	movi	r2,64
 812ed70:	81010484 	addi	r4,r16,1042
 812ed74:	10c7c83a 	sub	r3,r2,r3
 812ed78:	9108d83a 	srl	r4,r18,r4
 812ed7c:	88e2983a 	sll	r17,r17,r3
 812ed80:	2448b03a 	or	r4,r4,r17
 812ed84:	81390ec0 	call	81390ec <__floatunsidf>
 812ed88:	017f8434 	movhi	r5,65040
 812ed8c:	01800044 	movi	r6,1
 812ed90:	1009883a 	mov	r4,r2
 812ed94:	194b883a 	add	r5,r3,r5
 812ed98:	843fffc4 	addi	r16,r16,-1
 812ed9c:	d9801115 	stw	r6,68(sp)
 812eda0:	000d883a 	mov	r6,zero
 812eda4:	01cffe34 	movhi	r7,16376
 812eda8:	81386940 	call	8138694 <__subdf3>
 812edac:	0198dbf4 	movhi	r6,25455
 812edb0:	01cff4f4 	movhi	r7,16339
 812edb4:	3190d844 	addi	r6,r6,17249
 812edb8:	39e1e9c4 	addi	r7,r7,-30809
 812edbc:	1009883a 	mov	r4,r2
 812edc0:	180b883a 	mov	r5,r3
 812edc4:	8137e280 	call	8137e28 <__muldf3>
 812edc8:	01a2d874 	movhi	r6,35681
 812edcc:	01cff1f4 	movhi	r7,16327
 812edd0:	31b22cc4 	addi	r6,r6,-14157
 812edd4:	39e28a04 	addi	r7,r7,-30168
 812edd8:	180b883a 	mov	r5,r3
 812eddc:	1009883a 	mov	r4,r2
 812ede0:	81369540 	call	8136954 <__adddf3>
 812ede4:	8009883a 	mov	r4,r16
 812ede8:	1029883a 	mov	r20,r2
 812edec:	1823883a 	mov	r17,r3
 812edf0:	81390100 	call	8139010 <__floatsidf>
 812edf4:	019427f4 	movhi	r6,20639
 812edf8:	01cff4f4 	movhi	r7,16339
 812edfc:	319e7ec4 	addi	r6,r6,31227
 812ee00:	39d104c4 	addi	r7,r7,17427
 812ee04:	1009883a 	mov	r4,r2
 812ee08:	180b883a 	mov	r5,r3
 812ee0c:	8137e280 	call	8137e28 <__muldf3>
 812ee10:	100d883a 	mov	r6,r2
 812ee14:	180f883a 	mov	r7,r3
 812ee18:	a009883a 	mov	r4,r20
 812ee1c:	880b883a 	mov	r5,r17
 812ee20:	81369540 	call	8136954 <__adddf3>
 812ee24:	1009883a 	mov	r4,r2
 812ee28:	180b883a 	mov	r5,r3
 812ee2c:	1029883a 	mov	r20,r2
 812ee30:	1823883a 	mov	r17,r3
 812ee34:	8138f900 	call	8138f90 <__fixdfsi>
 812ee38:	000d883a 	mov	r6,zero
 812ee3c:	000f883a 	mov	r7,zero
 812ee40:	a009883a 	mov	r4,r20
 812ee44:	880b883a 	mov	r5,r17
 812ee48:	d8800515 	stw	r2,20(sp)
 812ee4c:	8137d340 	call	8137d34 <__ledf2>
 812ee50:	10028716 	blt	r2,zero,812f870 <_dtoa_r+0xc88>
 812ee54:	d8c00517 	ldw	r3,20(sp)
 812ee58:	00800584 	movi	r2,22
 812ee5c:	10c27536 	bltu	r2,r3,812f834 <_dtoa_r+0xc4c>
 812ee60:	180490fa 	slli	r2,r3,3
 812ee64:	00c20534 	movhi	r3,2068
 812ee68:	18ef0704 	addi	r3,r3,-17380
 812ee6c:	1885883a 	add	r2,r3,r2
 812ee70:	11000017 	ldw	r4,0(r2)
 812ee74:	11400117 	ldw	r5,4(r2)
 812ee78:	900d883a 	mov	r6,r18
 812ee7c:	980f883a 	mov	r7,r19
 812ee80:	8137c580 	call	8137c58 <__gedf2>
 812ee84:	00828d0e 	bge	zero,r2,812f8bc <_dtoa_r+0xcd4>
 812ee88:	d9000517 	ldw	r4,20(sp)
 812ee8c:	d8000e15 	stw	zero,56(sp)
 812ee90:	213fffc4 	addi	r4,r4,-1
 812ee94:	d9000515 	stw	r4,20(sp)
 812ee98:	b42dc83a 	sub	r22,r22,r16
 812ee9c:	b5bfffc4 	addi	r22,r22,-1
 812eea0:	b0026f16 	blt	r22,zero,812f860 <_dtoa_r+0xc78>
 812eea4:	d8000815 	stw	zero,32(sp)
 812eea8:	d9c00517 	ldw	r7,20(sp)
 812eeac:	38026416 	blt	r7,zero,812f840 <_dtoa_r+0xc58>
 812eeb0:	b1ed883a 	add	r22,r22,r7
 812eeb4:	d9c00d15 	stw	r7,52(sp)
 812eeb8:	d8000a15 	stw	zero,40(sp)
 812eebc:	d9800317 	ldw	r6,12(sp)
 812eec0:	00800244 	movi	r2,9
 812eec4:	11811436 	bltu	r2,r6,812f318 <_dtoa_r+0x730>
 812eec8:	00800144 	movi	r2,5
 812eecc:	1184e10e 	bge	r2,r6,8130254 <_dtoa_r+0x166c>
 812eed0:	31bfff04 	addi	r6,r6,-4
 812eed4:	d9800315 	stw	r6,12(sp)
 812eed8:	0023883a 	mov	r17,zero
 812eedc:	d9800317 	ldw	r6,12(sp)
 812eee0:	008000c4 	movi	r2,3
 812eee4:	30836726 	beq	r6,r2,812fc84 <_dtoa_r+0x109c>
 812eee8:	1183410e 	bge	r2,r6,812fbf0 <_dtoa_r+0x1008>
 812eeec:	d9c00317 	ldw	r7,12(sp)
 812eef0:	00800104 	movi	r2,4
 812eef4:	38827c26 	beq	r7,r2,812f8e8 <_dtoa_r+0xd00>
 812eef8:	00800144 	movi	r2,5
 812eefc:	3884c41e 	bne	r7,r2,8130210 <_dtoa_r+0x1628>
 812ef00:	00800044 	movi	r2,1
 812ef04:	d8800b15 	stw	r2,44(sp)
 812ef08:	d8c00517 	ldw	r3,20(sp)
 812ef0c:	d9002217 	ldw	r4,136(sp)
 812ef10:	1907883a 	add	r3,r3,r4
 812ef14:	19800044 	addi	r6,r3,1
 812ef18:	d8c00c15 	stw	r3,48(sp)
 812ef1c:	d9800615 	stw	r6,24(sp)
 812ef20:	0183a40e 	bge	zero,r6,812fdb4 <_dtoa_r+0x11cc>
 812ef24:	d9800617 	ldw	r6,24(sp)
 812ef28:	3021883a 	mov	r16,r6
 812ef2c:	e0001115 	stw	zero,68(fp)
 812ef30:	008005c4 	movi	r2,23
 812ef34:	1184c92e 	bgeu	r2,r6,813025c <_dtoa_r+0x1674>
 812ef38:	00c00044 	movi	r3,1
 812ef3c:	00800104 	movi	r2,4
 812ef40:	1085883a 	add	r2,r2,r2
 812ef44:	11000504 	addi	r4,r2,20
 812ef48:	180b883a 	mov	r5,r3
 812ef4c:	18c00044 	addi	r3,r3,1
 812ef50:	313ffb2e 	bgeu	r6,r4,812ef40 <__alt_data_end+0xfc12ef40>
 812ef54:	e1401115 	stw	r5,68(fp)
 812ef58:	e009883a 	mov	r4,fp
 812ef5c:	81322a00 	call	81322a0 <_Balloc>
 812ef60:	d8800715 	stw	r2,28(sp)
 812ef64:	e0801015 	stw	r2,64(fp)
 812ef68:	00800384 	movi	r2,14
 812ef6c:	1400f736 	bltu	r2,r16,812f34c <_dtoa_r+0x764>
 812ef70:	8800f626 	beq	r17,zero,812f34c <_dtoa_r+0x764>
 812ef74:	d9c00517 	ldw	r7,20(sp)
 812ef78:	01c39a0e 	bge	zero,r7,812fde4 <_dtoa_r+0x11fc>
 812ef7c:	388003cc 	andi	r2,r7,15
 812ef80:	100490fa 	slli	r2,r2,3
 812ef84:	382bd13a 	srai	r21,r7,4
 812ef88:	00c20534 	movhi	r3,2068
 812ef8c:	18ef0704 	addi	r3,r3,-17380
 812ef90:	1885883a 	add	r2,r3,r2
 812ef94:	a8c0040c 	andi	r3,r21,16
 812ef98:	12400017 	ldw	r9,0(r2)
 812ef9c:	12000117 	ldw	r8,4(r2)
 812efa0:	18037926 	beq	r3,zero,812fd88 <_dtoa_r+0x11a0>
 812efa4:	00820534 	movhi	r2,2068
 812efa8:	10aefd04 	addi	r2,r2,-17420
 812efac:	11800817 	ldw	r6,32(r2)
 812efb0:	11c00917 	ldw	r7,36(r2)
 812efb4:	9009883a 	mov	r4,r18
 812efb8:	980b883a 	mov	r5,r19
 812efbc:	da001715 	stw	r8,92(sp)
 812efc0:	da401615 	stw	r9,88(sp)
 812efc4:	81372000 	call	8137200 <__divdf3>
 812efc8:	da001717 	ldw	r8,92(sp)
 812efcc:	da401617 	ldw	r9,88(sp)
 812efd0:	ad4003cc 	andi	r21,r21,15
 812efd4:	040000c4 	movi	r16,3
 812efd8:	1023883a 	mov	r17,r2
 812efdc:	1829883a 	mov	r20,r3
 812efe0:	a8001126 	beq	r21,zero,812f028 <_dtoa_r+0x440>
 812efe4:	05c20534 	movhi	r23,2068
 812efe8:	bdeefd04 	addi	r23,r23,-17420
 812efec:	4805883a 	mov	r2,r9
 812eff0:	4007883a 	mov	r3,r8
 812eff4:	a980004c 	andi	r6,r21,1
 812eff8:	1009883a 	mov	r4,r2
 812effc:	a82bd07a 	srai	r21,r21,1
 812f000:	180b883a 	mov	r5,r3
 812f004:	30000426 	beq	r6,zero,812f018 <_dtoa_r+0x430>
 812f008:	b9800017 	ldw	r6,0(r23)
 812f00c:	b9c00117 	ldw	r7,4(r23)
 812f010:	84000044 	addi	r16,r16,1
 812f014:	8137e280 	call	8137e28 <__muldf3>
 812f018:	bdc00204 	addi	r23,r23,8
 812f01c:	a83ff51e 	bne	r21,zero,812eff4 <__alt_data_end+0xfc12eff4>
 812f020:	1013883a 	mov	r9,r2
 812f024:	1811883a 	mov	r8,r3
 812f028:	480d883a 	mov	r6,r9
 812f02c:	400f883a 	mov	r7,r8
 812f030:	8809883a 	mov	r4,r17
 812f034:	a00b883a 	mov	r5,r20
 812f038:	81372000 	call	8137200 <__divdf3>
 812f03c:	d8800f15 	stw	r2,60(sp)
 812f040:	d8c01015 	stw	r3,64(sp)
 812f044:	d8c00e17 	ldw	r3,56(sp)
 812f048:	18000626 	beq	r3,zero,812f064 <_dtoa_r+0x47c>
 812f04c:	d9000f17 	ldw	r4,60(sp)
 812f050:	d9401017 	ldw	r5,64(sp)
 812f054:	000d883a 	mov	r6,zero
 812f058:	01cffc34 	movhi	r7,16368
 812f05c:	8137d340 	call	8137d34 <__ledf2>
 812f060:	10040b16 	blt	r2,zero,8130090 <_dtoa_r+0x14a8>
 812f064:	8009883a 	mov	r4,r16
 812f068:	81390100 	call	8139010 <__floatsidf>
 812f06c:	d9800f17 	ldw	r6,60(sp)
 812f070:	d9c01017 	ldw	r7,64(sp)
 812f074:	1009883a 	mov	r4,r2
 812f078:	180b883a 	mov	r5,r3
 812f07c:	8137e280 	call	8137e28 <__muldf3>
 812f080:	000d883a 	mov	r6,zero
 812f084:	01d00734 	movhi	r7,16412
 812f088:	1009883a 	mov	r4,r2
 812f08c:	180b883a 	mov	r5,r3
 812f090:	81369540 	call	8136954 <__adddf3>
 812f094:	1021883a 	mov	r16,r2
 812f098:	d8800617 	ldw	r2,24(sp)
 812f09c:	047f3034 	movhi	r17,64704
 812f0a0:	1c63883a 	add	r17,r3,r17
 812f0a4:	10031826 	beq	r2,zero,812fd08 <_dtoa_r+0x1120>
 812f0a8:	d8c00517 	ldw	r3,20(sp)
 812f0ac:	db000617 	ldw	r12,24(sp)
 812f0b0:	d8c01315 	stw	r3,76(sp)
 812f0b4:	d9000b17 	ldw	r4,44(sp)
 812f0b8:	20038f26 	beq	r4,zero,812fef8 <_dtoa_r+0x1310>
 812f0bc:	60bfffc4 	addi	r2,r12,-1
 812f0c0:	100490fa 	slli	r2,r2,3
 812f0c4:	00c20534 	movhi	r3,2068
 812f0c8:	18ef0704 	addi	r3,r3,-17380
 812f0cc:	1885883a 	add	r2,r3,r2
 812f0d0:	11800017 	ldw	r6,0(r2)
 812f0d4:	11c00117 	ldw	r7,4(r2)
 812f0d8:	d8800717 	ldw	r2,28(sp)
 812f0dc:	0009883a 	mov	r4,zero
 812f0e0:	014ff834 	movhi	r5,16352
 812f0e4:	db001615 	stw	r12,88(sp)
 812f0e8:	15c00044 	addi	r23,r2,1
 812f0ec:	81372000 	call	8137200 <__divdf3>
 812f0f0:	800d883a 	mov	r6,r16
 812f0f4:	880f883a 	mov	r7,r17
 812f0f8:	1009883a 	mov	r4,r2
 812f0fc:	180b883a 	mov	r5,r3
 812f100:	81386940 	call	8138694 <__subdf3>
 812f104:	d9401017 	ldw	r5,64(sp)
 812f108:	d9000f17 	ldw	r4,60(sp)
 812f10c:	102b883a 	mov	r21,r2
 812f110:	d8c01215 	stw	r3,72(sp)
 812f114:	8138f900 	call	8138f90 <__fixdfsi>
 812f118:	1009883a 	mov	r4,r2
 812f11c:	1029883a 	mov	r20,r2
 812f120:	81390100 	call	8139010 <__floatsidf>
 812f124:	d9000f17 	ldw	r4,60(sp)
 812f128:	d9401017 	ldw	r5,64(sp)
 812f12c:	100d883a 	mov	r6,r2
 812f130:	180f883a 	mov	r7,r3
 812f134:	81386940 	call	8138694 <__subdf3>
 812f138:	1823883a 	mov	r17,r3
 812f13c:	d8c00717 	ldw	r3,28(sp)
 812f140:	d9401217 	ldw	r5,72(sp)
 812f144:	a2000c04 	addi	r8,r20,48
 812f148:	1021883a 	mov	r16,r2
 812f14c:	1a000005 	stb	r8,0(r3)
 812f150:	800d883a 	mov	r6,r16
 812f154:	880f883a 	mov	r7,r17
 812f158:	a809883a 	mov	r4,r21
 812f15c:	4029883a 	mov	r20,r8
 812f160:	8137c580 	call	8137c58 <__gedf2>
 812f164:	00841d16 	blt	zero,r2,81301dc <_dtoa_r+0x15f4>
 812f168:	800d883a 	mov	r6,r16
 812f16c:	880f883a 	mov	r7,r17
 812f170:	0009883a 	mov	r4,zero
 812f174:	014ffc34 	movhi	r5,16368
 812f178:	81386940 	call	8138694 <__subdf3>
 812f17c:	d9401217 	ldw	r5,72(sp)
 812f180:	100d883a 	mov	r6,r2
 812f184:	180f883a 	mov	r7,r3
 812f188:	a809883a 	mov	r4,r21
 812f18c:	8137c580 	call	8137c58 <__gedf2>
 812f190:	db001617 	ldw	r12,88(sp)
 812f194:	00840e16 	blt	zero,r2,81301d0 <_dtoa_r+0x15e8>
 812f198:	00800044 	movi	r2,1
 812f19c:	13006b0e 	bge	r2,r12,812f34c <_dtoa_r+0x764>
 812f1a0:	d9000717 	ldw	r4,28(sp)
 812f1a4:	dd800f15 	stw	r22,60(sp)
 812f1a8:	dcc01015 	stw	r19,64(sp)
 812f1ac:	2319883a 	add	r12,r4,r12
 812f1b0:	dcc01217 	ldw	r19,72(sp)
 812f1b4:	602d883a 	mov	r22,r12
 812f1b8:	dc801215 	stw	r18,72(sp)
 812f1bc:	b825883a 	mov	r18,r23
 812f1c0:	00000906 	br	812f1e8 <_dtoa_r+0x600>
 812f1c4:	81386940 	call	8138694 <__subdf3>
 812f1c8:	a80d883a 	mov	r6,r21
 812f1cc:	980f883a 	mov	r7,r19
 812f1d0:	1009883a 	mov	r4,r2
 812f1d4:	180b883a 	mov	r5,r3
 812f1d8:	8137d340 	call	8137d34 <__ledf2>
 812f1dc:	1003e816 	blt	r2,zero,8130180 <_dtoa_r+0x1598>
 812f1e0:	b825883a 	mov	r18,r23
 812f1e4:	bd83e926 	beq	r23,r22,813018c <_dtoa_r+0x15a4>
 812f1e8:	a809883a 	mov	r4,r21
 812f1ec:	980b883a 	mov	r5,r19
 812f1f0:	000d883a 	mov	r6,zero
 812f1f4:	01d00934 	movhi	r7,16420
 812f1f8:	8137e280 	call	8137e28 <__muldf3>
 812f1fc:	000d883a 	mov	r6,zero
 812f200:	01d00934 	movhi	r7,16420
 812f204:	8009883a 	mov	r4,r16
 812f208:	880b883a 	mov	r5,r17
 812f20c:	102b883a 	mov	r21,r2
 812f210:	1827883a 	mov	r19,r3
 812f214:	8137e280 	call	8137e28 <__muldf3>
 812f218:	180b883a 	mov	r5,r3
 812f21c:	1009883a 	mov	r4,r2
 812f220:	1821883a 	mov	r16,r3
 812f224:	1023883a 	mov	r17,r2
 812f228:	8138f900 	call	8138f90 <__fixdfsi>
 812f22c:	1009883a 	mov	r4,r2
 812f230:	1029883a 	mov	r20,r2
 812f234:	81390100 	call	8139010 <__floatsidf>
 812f238:	8809883a 	mov	r4,r17
 812f23c:	800b883a 	mov	r5,r16
 812f240:	100d883a 	mov	r6,r2
 812f244:	180f883a 	mov	r7,r3
 812f248:	81386940 	call	8138694 <__subdf3>
 812f24c:	a5000c04 	addi	r20,r20,48
 812f250:	a80d883a 	mov	r6,r21
 812f254:	980f883a 	mov	r7,r19
 812f258:	1009883a 	mov	r4,r2
 812f25c:	180b883a 	mov	r5,r3
 812f260:	95000005 	stb	r20,0(r18)
 812f264:	1021883a 	mov	r16,r2
 812f268:	1823883a 	mov	r17,r3
 812f26c:	8137d340 	call	8137d34 <__ledf2>
 812f270:	bdc00044 	addi	r23,r23,1
 812f274:	800d883a 	mov	r6,r16
 812f278:	880f883a 	mov	r7,r17
 812f27c:	0009883a 	mov	r4,zero
 812f280:	014ffc34 	movhi	r5,16368
 812f284:	103fcf0e 	bge	r2,zero,812f1c4 <__alt_data_end+0xfc12f1c4>
 812f288:	d8c01317 	ldw	r3,76(sp)
 812f28c:	d8c00515 	stw	r3,20(sp)
 812f290:	d9400917 	ldw	r5,36(sp)
 812f294:	e009883a 	mov	r4,fp
 812f298:	81323480 	call	8132348 <_Bfree>
 812f29c:	d9000517 	ldw	r4,20(sp)
 812f2a0:	d9802317 	ldw	r6,140(sp)
 812f2a4:	d9c02517 	ldw	r7,148(sp)
 812f2a8:	b8000005 	stb	zero,0(r23)
 812f2ac:	20800044 	addi	r2,r4,1
 812f2b0:	30800015 	stw	r2,0(r6)
 812f2b4:	3802aa26 	beq	r7,zero,812fd60 <_dtoa_r+0x1178>
 812f2b8:	3dc00015 	stw	r23,0(r7)
 812f2bc:	d8800717 	ldw	r2,28(sp)
 812f2c0:	003e7906 	br	812eca8 <__alt_data_end+0xfc12eca8>
 812f2c4:	00800434 	movhi	r2,16
 812f2c8:	10bfffc4 	addi	r2,r2,-1
 812f2cc:	88a2703a 	and	r17,r17,r2
 812f2d0:	883e851e 	bne	r17,zero,812ece8 <__alt_data_end+0xfc12ece8>
 812f2d4:	00820534 	movhi	r2,2068
 812f2d8:	10aee804 	addi	r2,r2,-17504
 812f2dc:	003e8406 	br	812ecf0 <__alt_data_end+0xfc12ecf0>
 812f2e0:	10c00204 	addi	r3,r2,8
 812f2e4:	003e8706 	br	812ed04 <__alt_data_end+0xfc12ed04>
 812f2e8:	01400434 	movhi	r5,16
 812f2ec:	297fffc4 	addi	r5,r5,-1
 812f2f0:	994a703a 	and	r5,r19,r5
 812f2f4:	9009883a 	mov	r4,r18
 812f2f8:	843f0044 	addi	r16,r16,-1023
 812f2fc:	294ffc34 	orhi	r5,r5,16368
 812f300:	dd800217 	ldw	r22,8(sp)
 812f304:	d8001115 	stw	zero,68(sp)
 812f308:	003ea506 	br	812eda0 <__alt_data_end+0xfc12eda0>
 812f30c:	00820534 	movhi	r2,2068
 812f310:	10aedf04 	addi	r2,r2,-17540
 812f314:	003e6406 	br	812eca8 <__alt_data_end+0xfc12eca8>
 812f318:	e0001115 	stw	zero,68(fp)
 812f31c:	000b883a 	mov	r5,zero
 812f320:	e009883a 	mov	r4,fp
 812f324:	81322a00 	call	81322a0 <_Balloc>
 812f328:	01bfffc4 	movi	r6,-1
 812f32c:	01c00044 	movi	r7,1
 812f330:	d8800715 	stw	r2,28(sp)
 812f334:	d9800c15 	stw	r6,48(sp)
 812f338:	e0801015 	stw	r2,64(fp)
 812f33c:	d8000315 	stw	zero,12(sp)
 812f340:	d9c00b15 	stw	r7,44(sp)
 812f344:	d9800615 	stw	r6,24(sp)
 812f348:	d8002215 	stw	zero,136(sp)
 812f34c:	d8800117 	ldw	r2,4(sp)
 812f350:	10008916 	blt	r2,zero,812f578 <_dtoa_r+0x990>
 812f354:	d9000517 	ldw	r4,20(sp)
 812f358:	00c00384 	movi	r3,14
 812f35c:	19008616 	blt	r3,r4,812f578 <_dtoa_r+0x990>
 812f360:	200490fa 	slli	r2,r4,3
 812f364:	00c20534 	movhi	r3,2068
 812f368:	d9802217 	ldw	r6,136(sp)
 812f36c:	18ef0704 	addi	r3,r3,-17380
 812f370:	1885883a 	add	r2,r3,r2
 812f374:	14000017 	ldw	r16,0(r2)
 812f378:	14400117 	ldw	r17,4(r2)
 812f37c:	30016316 	blt	r6,zero,812f90c <_dtoa_r+0xd24>
 812f380:	800d883a 	mov	r6,r16
 812f384:	880f883a 	mov	r7,r17
 812f388:	9009883a 	mov	r4,r18
 812f38c:	980b883a 	mov	r5,r19
 812f390:	81372000 	call	8137200 <__divdf3>
 812f394:	180b883a 	mov	r5,r3
 812f398:	1009883a 	mov	r4,r2
 812f39c:	8138f900 	call	8138f90 <__fixdfsi>
 812f3a0:	1009883a 	mov	r4,r2
 812f3a4:	102b883a 	mov	r21,r2
 812f3a8:	81390100 	call	8139010 <__floatsidf>
 812f3ac:	800d883a 	mov	r6,r16
 812f3b0:	880f883a 	mov	r7,r17
 812f3b4:	1009883a 	mov	r4,r2
 812f3b8:	180b883a 	mov	r5,r3
 812f3bc:	8137e280 	call	8137e28 <__muldf3>
 812f3c0:	100d883a 	mov	r6,r2
 812f3c4:	180f883a 	mov	r7,r3
 812f3c8:	9009883a 	mov	r4,r18
 812f3cc:	980b883a 	mov	r5,r19
 812f3d0:	81386940 	call	8138694 <__subdf3>
 812f3d4:	d9c00717 	ldw	r7,28(sp)
 812f3d8:	1009883a 	mov	r4,r2
 812f3dc:	a8800c04 	addi	r2,r21,48
 812f3e0:	38800005 	stb	r2,0(r7)
 812f3e4:	3dc00044 	addi	r23,r7,1
 812f3e8:	d9c00617 	ldw	r7,24(sp)
 812f3ec:	01800044 	movi	r6,1
 812f3f0:	180b883a 	mov	r5,r3
 812f3f4:	2005883a 	mov	r2,r4
 812f3f8:	39803826 	beq	r7,r6,812f4dc <_dtoa_r+0x8f4>
 812f3fc:	000d883a 	mov	r6,zero
 812f400:	01d00934 	movhi	r7,16420
 812f404:	8137e280 	call	8137e28 <__muldf3>
 812f408:	000d883a 	mov	r6,zero
 812f40c:	000f883a 	mov	r7,zero
 812f410:	1009883a 	mov	r4,r2
 812f414:	180b883a 	mov	r5,r3
 812f418:	1025883a 	mov	r18,r2
 812f41c:	1827883a 	mov	r19,r3
 812f420:	8137bd00 	call	8137bd0 <__eqdf2>
 812f424:	103f9a26 	beq	r2,zero,812f290 <__alt_data_end+0xfc12f290>
 812f428:	d9c00617 	ldw	r7,24(sp)
 812f42c:	d8c00717 	ldw	r3,28(sp)
 812f430:	b829883a 	mov	r20,r23
 812f434:	38bfffc4 	addi	r2,r7,-1
 812f438:	18ad883a 	add	r22,r3,r2
 812f43c:	00000a06 	br	812f468 <_dtoa_r+0x880>
 812f440:	8137e280 	call	8137e28 <__muldf3>
 812f444:	000d883a 	mov	r6,zero
 812f448:	000f883a 	mov	r7,zero
 812f44c:	1009883a 	mov	r4,r2
 812f450:	180b883a 	mov	r5,r3
 812f454:	1025883a 	mov	r18,r2
 812f458:	1827883a 	mov	r19,r3
 812f45c:	b829883a 	mov	r20,r23
 812f460:	8137bd00 	call	8137bd0 <__eqdf2>
 812f464:	103f8a26 	beq	r2,zero,812f290 <__alt_data_end+0xfc12f290>
 812f468:	800d883a 	mov	r6,r16
 812f46c:	880f883a 	mov	r7,r17
 812f470:	9009883a 	mov	r4,r18
 812f474:	980b883a 	mov	r5,r19
 812f478:	81372000 	call	8137200 <__divdf3>
 812f47c:	180b883a 	mov	r5,r3
 812f480:	1009883a 	mov	r4,r2
 812f484:	8138f900 	call	8138f90 <__fixdfsi>
 812f488:	1009883a 	mov	r4,r2
 812f48c:	102b883a 	mov	r21,r2
 812f490:	81390100 	call	8139010 <__floatsidf>
 812f494:	800d883a 	mov	r6,r16
 812f498:	880f883a 	mov	r7,r17
 812f49c:	1009883a 	mov	r4,r2
 812f4a0:	180b883a 	mov	r5,r3
 812f4a4:	8137e280 	call	8137e28 <__muldf3>
 812f4a8:	100d883a 	mov	r6,r2
 812f4ac:	180f883a 	mov	r7,r3
 812f4b0:	9009883a 	mov	r4,r18
 812f4b4:	980b883a 	mov	r5,r19
 812f4b8:	81386940 	call	8138694 <__subdf3>
 812f4bc:	aa000c04 	addi	r8,r21,48
 812f4c0:	a2000005 	stb	r8,0(r20)
 812f4c4:	000d883a 	mov	r6,zero
 812f4c8:	01d00934 	movhi	r7,16420
 812f4cc:	1009883a 	mov	r4,r2
 812f4d0:	180b883a 	mov	r5,r3
 812f4d4:	a5c00044 	addi	r23,r20,1
 812f4d8:	b53fd91e 	bne	r22,r20,812f440 <__alt_data_end+0xfc12f440>
 812f4dc:	100d883a 	mov	r6,r2
 812f4e0:	180f883a 	mov	r7,r3
 812f4e4:	1009883a 	mov	r4,r2
 812f4e8:	180b883a 	mov	r5,r3
 812f4ec:	81369540 	call	8136954 <__adddf3>
 812f4f0:	100d883a 	mov	r6,r2
 812f4f4:	180f883a 	mov	r7,r3
 812f4f8:	8009883a 	mov	r4,r16
 812f4fc:	880b883a 	mov	r5,r17
 812f500:	1027883a 	mov	r19,r2
 812f504:	1825883a 	mov	r18,r3
 812f508:	8137d340 	call	8137d34 <__ledf2>
 812f50c:	10000816 	blt	r2,zero,812f530 <_dtoa_r+0x948>
 812f510:	980d883a 	mov	r6,r19
 812f514:	900f883a 	mov	r7,r18
 812f518:	8009883a 	mov	r4,r16
 812f51c:	880b883a 	mov	r5,r17
 812f520:	8137bd00 	call	8137bd0 <__eqdf2>
 812f524:	103f5a1e 	bne	r2,zero,812f290 <__alt_data_end+0xfc12f290>
 812f528:	ad40004c 	andi	r21,r21,1
 812f52c:	a83f5826 	beq	r21,zero,812f290 <__alt_data_end+0xfc12f290>
 812f530:	bd3fffc3 	ldbu	r20,-1(r23)
 812f534:	b8bfffc4 	addi	r2,r23,-1
 812f538:	1007883a 	mov	r3,r2
 812f53c:	01400e44 	movi	r5,57
 812f540:	d9800717 	ldw	r6,28(sp)
 812f544:	00000506 	br	812f55c <_dtoa_r+0x974>
 812f548:	18ffffc4 	addi	r3,r3,-1
 812f54c:	11824726 	beq	r2,r6,812fe6c <_dtoa_r+0x1284>
 812f550:	1d000003 	ldbu	r20,0(r3)
 812f554:	102f883a 	mov	r23,r2
 812f558:	10bfffc4 	addi	r2,r2,-1
 812f55c:	a1003fcc 	andi	r4,r20,255
 812f560:	2100201c 	xori	r4,r4,128
 812f564:	213fe004 	addi	r4,r4,-128
 812f568:	217ff726 	beq	r4,r5,812f548 <__alt_data_end+0xfc12f548>
 812f56c:	a2000044 	addi	r8,r20,1
 812f570:	12000005 	stb	r8,0(r2)
 812f574:	003f4606 	br	812f290 <__alt_data_end+0xfc12f290>
 812f578:	d9000b17 	ldw	r4,44(sp)
 812f57c:	2000c826 	beq	r4,zero,812f8a0 <_dtoa_r+0xcb8>
 812f580:	d9800317 	ldw	r6,12(sp)
 812f584:	00c00044 	movi	r3,1
 812f588:	1980f90e 	bge	r3,r6,812f970 <_dtoa_r+0xd88>
 812f58c:	d8800617 	ldw	r2,24(sp)
 812f590:	d8c00a17 	ldw	r3,40(sp)
 812f594:	157fffc4 	addi	r21,r2,-1
 812f598:	1d41f316 	blt	r3,r21,812fd68 <_dtoa_r+0x1180>
 812f59c:	1d6bc83a 	sub	r21,r3,r21
 812f5a0:	d9c00617 	ldw	r7,24(sp)
 812f5a4:	3802aa16 	blt	r7,zero,8130050 <_dtoa_r+0x1468>
 812f5a8:	dd000817 	ldw	r20,32(sp)
 812f5ac:	d8800617 	ldw	r2,24(sp)
 812f5b0:	d8c00817 	ldw	r3,32(sp)
 812f5b4:	01400044 	movi	r5,1
 812f5b8:	e009883a 	mov	r4,fp
 812f5bc:	1887883a 	add	r3,r3,r2
 812f5c0:	d8c00815 	stw	r3,32(sp)
 812f5c4:	b0ad883a 	add	r22,r22,r2
 812f5c8:	81326d40 	call	81326d4 <__i2b>
 812f5cc:	1023883a 	mov	r17,r2
 812f5d0:	a0000826 	beq	r20,zero,812f5f4 <_dtoa_r+0xa0c>
 812f5d4:	0580070e 	bge	zero,r22,812f5f4 <_dtoa_r+0xa0c>
 812f5d8:	a005883a 	mov	r2,r20
 812f5dc:	b500b916 	blt	r22,r20,812f8c4 <_dtoa_r+0xcdc>
 812f5e0:	d9000817 	ldw	r4,32(sp)
 812f5e4:	a0a9c83a 	sub	r20,r20,r2
 812f5e8:	b0adc83a 	sub	r22,r22,r2
 812f5ec:	2089c83a 	sub	r4,r4,r2
 812f5f0:	d9000815 	stw	r4,32(sp)
 812f5f4:	d9800a17 	ldw	r6,40(sp)
 812f5f8:	0181810e 	bge	zero,r6,812fc00 <_dtoa_r+0x1018>
 812f5fc:	d9c00b17 	ldw	r7,44(sp)
 812f600:	3800b326 	beq	r7,zero,812f8d0 <_dtoa_r+0xce8>
 812f604:	a800b226 	beq	r21,zero,812f8d0 <_dtoa_r+0xce8>
 812f608:	880b883a 	mov	r5,r17
 812f60c:	a80d883a 	mov	r6,r21
 812f610:	e009883a 	mov	r4,fp
 812f614:	813299c0 	call	813299c <__pow5mult>
 812f618:	d9800917 	ldw	r6,36(sp)
 812f61c:	100b883a 	mov	r5,r2
 812f620:	e009883a 	mov	r4,fp
 812f624:	1023883a 	mov	r17,r2
 812f628:	81327100 	call	8132710 <__multiply>
 812f62c:	1021883a 	mov	r16,r2
 812f630:	d8800a17 	ldw	r2,40(sp)
 812f634:	d9400917 	ldw	r5,36(sp)
 812f638:	e009883a 	mov	r4,fp
 812f63c:	1545c83a 	sub	r2,r2,r21
 812f640:	d8800a15 	stw	r2,40(sp)
 812f644:	81323480 	call	8132348 <_Bfree>
 812f648:	d8c00a17 	ldw	r3,40(sp)
 812f64c:	18009f1e 	bne	r3,zero,812f8cc <_dtoa_r+0xce4>
 812f650:	05c00044 	movi	r23,1
 812f654:	e009883a 	mov	r4,fp
 812f658:	b80b883a 	mov	r5,r23
 812f65c:	81326d40 	call	81326d4 <__i2b>
 812f660:	d9000d17 	ldw	r4,52(sp)
 812f664:	102b883a 	mov	r21,r2
 812f668:	2000ce26 	beq	r4,zero,812f9a4 <_dtoa_r+0xdbc>
 812f66c:	200d883a 	mov	r6,r4
 812f670:	100b883a 	mov	r5,r2
 812f674:	e009883a 	mov	r4,fp
 812f678:	813299c0 	call	813299c <__pow5mult>
 812f67c:	d9800317 	ldw	r6,12(sp)
 812f680:	102b883a 	mov	r21,r2
 812f684:	b981810e 	bge	r23,r6,812fc8c <_dtoa_r+0x10a4>
 812f688:	0027883a 	mov	r19,zero
 812f68c:	a8800417 	ldw	r2,16(r21)
 812f690:	05c00804 	movi	r23,32
 812f694:	10800104 	addi	r2,r2,4
 812f698:	1085883a 	add	r2,r2,r2
 812f69c:	1085883a 	add	r2,r2,r2
 812f6a0:	a885883a 	add	r2,r21,r2
 812f6a4:	11000017 	ldw	r4,0(r2)
 812f6a8:	81325bc0 	call	81325bc <__hi0bits>
 812f6ac:	b885c83a 	sub	r2,r23,r2
 812f6b0:	1585883a 	add	r2,r2,r22
 812f6b4:	108007cc 	andi	r2,r2,31
 812f6b8:	1000b326 	beq	r2,zero,812f988 <_dtoa_r+0xda0>
 812f6bc:	00c00804 	movi	r3,32
 812f6c0:	1887c83a 	sub	r3,r3,r2
 812f6c4:	01000104 	movi	r4,4
 812f6c8:	20c2cd0e 	bge	r4,r3,8130200 <_dtoa_r+0x1618>
 812f6cc:	00c00704 	movi	r3,28
 812f6d0:	1885c83a 	sub	r2,r3,r2
 812f6d4:	d8c00817 	ldw	r3,32(sp)
 812f6d8:	a0a9883a 	add	r20,r20,r2
 812f6dc:	b0ad883a 	add	r22,r22,r2
 812f6e0:	1887883a 	add	r3,r3,r2
 812f6e4:	d8c00815 	stw	r3,32(sp)
 812f6e8:	d9800817 	ldw	r6,32(sp)
 812f6ec:	0180040e 	bge	zero,r6,812f700 <_dtoa_r+0xb18>
 812f6f0:	800b883a 	mov	r5,r16
 812f6f4:	e009883a 	mov	r4,fp
 812f6f8:	8132adc0 	call	8132adc <__lshift>
 812f6fc:	1021883a 	mov	r16,r2
 812f700:	0580050e 	bge	zero,r22,812f718 <_dtoa_r+0xb30>
 812f704:	a80b883a 	mov	r5,r21
 812f708:	b00d883a 	mov	r6,r22
 812f70c:	e009883a 	mov	r4,fp
 812f710:	8132adc0 	call	8132adc <__lshift>
 812f714:	102b883a 	mov	r21,r2
 812f718:	d9c00e17 	ldw	r7,56(sp)
 812f71c:	3801211e 	bne	r7,zero,812fba4 <_dtoa_r+0xfbc>
 812f720:	d9800617 	ldw	r6,24(sp)
 812f724:	0181380e 	bge	zero,r6,812fc08 <_dtoa_r+0x1020>
 812f728:	d8c00b17 	ldw	r3,44(sp)
 812f72c:	1800ab1e 	bne	r3,zero,812f9dc <_dtoa_r+0xdf4>
 812f730:	dc800717 	ldw	r18,28(sp)
 812f734:	dcc00617 	ldw	r19,24(sp)
 812f738:	9029883a 	mov	r20,r18
 812f73c:	00000206 	br	812f748 <_dtoa_r+0xb60>
 812f740:	81323700 	call	8132370 <__multadd>
 812f744:	1021883a 	mov	r16,r2
 812f748:	a80b883a 	mov	r5,r21
 812f74c:	8009883a 	mov	r4,r16
 812f750:	812e9c00 	call	812e9c0 <quorem>
 812f754:	10800c04 	addi	r2,r2,48
 812f758:	90800005 	stb	r2,0(r18)
 812f75c:	94800044 	addi	r18,r18,1
 812f760:	9507c83a 	sub	r3,r18,r20
 812f764:	000f883a 	mov	r7,zero
 812f768:	01800284 	movi	r6,10
 812f76c:	800b883a 	mov	r5,r16
 812f770:	e009883a 	mov	r4,fp
 812f774:	1cfff216 	blt	r3,r19,812f740 <__alt_data_end+0xfc12f740>
 812f778:	1011883a 	mov	r8,r2
 812f77c:	d8800617 	ldw	r2,24(sp)
 812f780:	0082370e 	bge	zero,r2,8130060 <_dtoa_r+0x1478>
 812f784:	d9000717 	ldw	r4,28(sp)
 812f788:	0025883a 	mov	r18,zero
 812f78c:	20af883a 	add	r23,r4,r2
 812f790:	01800044 	movi	r6,1
 812f794:	800b883a 	mov	r5,r16
 812f798:	e009883a 	mov	r4,fp
 812f79c:	da001715 	stw	r8,92(sp)
 812f7a0:	8132adc0 	call	8132adc <__lshift>
 812f7a4:	a80b883a 	mov	r5,r21
 812f7a8:	1009883a 	mov	r4,r2
 812f7ac:	d8800915 	stw	r2,36(sp)
 812f7b0:	8132c240 	call	8132c24 <__mcmp>
 812f7b4:	da001717 	ldw	r8,92(sp)
 812f7b8:	0081800e 	bge	zero,r2,812fdbc <_dtoa_r+0x11d4>
 812f7bc:	b93fffc3 	ldbu	r4,-1(r23)
 812f7c0:	b8bfffc4 	addi	r2,r23,-1
 812f7c4:	1007883a 	mov	r3,r2
 812f7c8:	01800e44 	movi	r6,57
 812f7cc:	d9c00717 	ldw	r7,28(sp)
 812f7d0:	00000506 	br	812f7e8 <_dtoa_r+0xc00>
 812f7d4:	18ffffc4 	addi	r3,r3,-1
 812f7d8:	11c12326 	beq	r2,r7,812fc68 <_dtoa_r+0x1080>
 812f7dc:	19000003 	ldbu	r4,0(r3)
 812f7e0:	102f883a 	mov	r23,r2
 812f7e4:	10bfffc4 	addi	r2,r2,-1
 812f7e8:	21403fcc 	andi	r5,r4,255
 812f7ec:	2940201c 	xori	r5,r5,128
 812f7f0:	297fe004 	addi	r5,r5,-128
 812f7f4:	29bff726 	beq	r5,r6,812f7d4 <__alt_data_end+0xfc12f7d4>
 812f7f8:	21000044 	addi	r4,r4,1
 812f7fc:	11000005 	stb	r4,0(r2)
 812f800:	a80b883a 	mov	r5,r21
 812f804:	e009883a 	mov	r4,fp
 812f808:	81323480 	call	8132348 <_Bfree>
 812f80c:	883ea026 	beq	r17,zero,812f290 <__alt_data_end+0xfc12f290>
 812f810:	90000426 	beq	r18,zero,812f824 <_dtoa_r+0xc3c>
 812f814:	94400326 	beq	r18,r17,812f824 <_dtoa_r+0xc3c>
 812f818:	900b883a 	mov	r5,r18
 812f81c:	e009883a 	mov	r4,fp
 812f820:	81323480 	call	8132348 <_Bfree>
 812f824:	880b883a 	mov	r5,r17
 812f828:	e009883a 	mov	r4,fp
 812f82c:	81323480 	call	8132348 <_Bfree>
 812f830:	003e9706 	br	812f290 <__alt_data_end+0xfc12f290>
 812f834:	01800044 	movi	r6,1
 812f838:	d9800e15 	stw	r6,56(sp)
 812f83c:	003d9606 	br	812ee98 <__alt_data_end+0xfc12ee98>
 812f840:	d8800817 	ldw	r2,32(sp)
 812f844:	d8c00517 	ldw	r3,20(sp)
 812f848:	d8000d15 	stw	zero,52(sp)
 812f84c:	10c5c83a 	sub	r2,r2,r3
 812f850:	00c9c83a 	sub	r4,zero,r3
 812f854:	d8800815 	stw	r2,32(sp)
 812f858:	d9000a15 	stw	r4,40(sp)
 812f85c:	003d9706 	br	812eebc <__alt_data_end+0xfc12eebc>
 812f860:	05adc83a 	sub	r22,zero,r22
 812f864:	dd800815 	stw	r22,32(sp)
 812f868:	002d883a 	mov	r22,zero
 812f86c:	003d8e06 	br	812eea8 <__alt_data_end+0xfc12eea8>
 812f870:	d9000517 	ldw	r4,20(sp)
 812f874:	81390100 	call	8139010 <__floatsidf>
 812f878:	100d883a 	mov	r6,r2
 812f87c:	180f883a 	mov	r7,r3
 812f880:	a009883a 	mov	r4,r20
 812f884:	880b883a 	mov	r5,r17
 812f888:	8137bd00 	call	8137bd0 <__eqdf2>
 812f88c:	103d7126 	beq	r2,zero,812ee54 <__alt_data_end+0xfc12ee54>
 812f890:	d9c00517 	ldw	r7,20(sp)
 812f894:	39ffffc4 	addi	r7,r7,-1
 812f898:	d9c00515 	stw	r7,20(sp)
 812f89c:	003d6d06 	br	812ee54 <__alt_data_end+0xfc12ee54>
 812f8a0:	dd400a17 	ldw	r21,40(sp)
 812f8a4:	dd000817 	ldw	r20,32(sp)
 812f8a8:	0023883a 	mov	r17,zero
 812f8ac:	003f4806 	br	812f5d0 <__alt_data_end+0xfc12f5d0>
 812f8b0:	10e3c83a 	sub	r17,r2,r3
 812f8b4:	9448983a 	sll	r4,r18,r17
 812f8b8:	003d3206 	br	812ed84 <__alt_data_end+0xfc12ed84>
 812f8bc:	d8000e15 	stw	zero,56(sp)
 812f8c0:	003d7506 	br	812ee98 <__alt_data_end+0xfc12ee98>
 812f8c4:	b005883a 	mov	r2,r22
 812f8c8:	003f4506 	br	812f5e0 <__alt_data_end+0xfc12f5e0>
 812f8cc:	dc000915 	stw	r16,36(sp)
 812f8d0:	d9800a17 	ldw	r6,40(sp)
 812f8d4:	d9400917 	ldw	r5,36(sp)
 812f8d8:	e009883a 	mov	r4,fp
 812f8dc:	813299c0 	call	813299c <__pow5mult>
 812f8e0:	1021883a 	mov	r16,r2
 812f8e4:	003f5a06 	br	812f650 <__alt_data_end+0xfc12f650>
 812f8e8:	01c00044 	movi	r7,1
 812f8ec:	d9c00b15 	stw	r7,44(sp)
 812f8f0:	d8802217 	ldw	r2,136(sp)
 812f8f4:	0081280e 	bge	zero,r2,812fd98 <_dtoa_r+0x11b0>
 812f8f8:	100d883a 	mov	r6,r2
 812f8fc:	1021883a 	mov	r16,r2
 812f900:	d8800c15 	stw	r2,48(sp)
 812f904:	d8800615 	stw	r2,24(sp)
 812f908:	003d8806 	br	812ef2c <__alt_data_end+0xfc12ef2c>
 812f90c:	d8800617 	ldw	r2,24(sp)
 812f910:	00be9b16 	blt	zero,r2,812f380 <__alt_data_end+0xfc12f380>
 812f914:	10010f1e 	bne	r2,zero,812fd54 <_dtoa_r+0x116c>
 812f918:	880b883a 	mov	r5,r17
 812f91c:	000d883a 	mov	r6,zero
 812f920:	01d00534 	movhi	r7,16404
 812f924:	8009883a 	mov	r4,r16
 812f928:	8137e280 	call	8137e28 <__muldf3>
 812f92c:	900d883a 	mov	r6,r18
 812f930:	980f883a 	mov	r7,r19
 812f934:	1009883a 	mov	r4,r2
 812f938:	180b883a 	mov	r5,r3
 812f93c:	8137c580 	call	8137c58 <__gedf2>
 812f940:	002b883a 	mov	r21,zero
 812f944:	0023883a 	mov	r17,zero
 812f948:	1000bf16 	blt	r2,zero,812fc48 <_dtoa_r+0x1060>
 812f94c:	d9802217 	ldw	r6,136(sp)
 812f950:	ddc00717 	ldw	r23,28(sp)
 812f954:	018c303a 	nor	r6,zero,r6
 812f958:	d9800515 	stw	r6,20(sp)
 812f95c:	a80b883a 	mov	r5,r21
 812f960:	e009883a 	mov	r4,fp
 812f964:	81323480 	call	8132348 <_Bfree>
 812f968:	883e4926 	beq	r17,zero,812f290 <__alt_data_end+0xfc12f290>
 812f96c:	003fad06 	br	812f824 <__alt_data_end+0xfc12f824>
 812f970:	d9c01117 	ldw	r7,68(sp)
 812f974:	3801bc26 	beq	r7,zero,8130068 <_dtoa_r+0x1480>
 812f978:	10810cc4 	addi	r2,r2,1075
 812f97c:	dd400a17 	ldw	r21,40(sp)
 812f980:	dd000817 	ldw	r20,32(sp)
 812f984:	003f0a06 	br	812f5b0 <__alt_data_end+0xfc12f5b0>
 812f988:	00800704 	movi	r2,28
 812f98c:	d9000817 	ldw	r4,32(sp)
 812f990:	a0a9883a 	add	r20,r20,r2
 812f994:	b0ad883a 	add	r22,r22,r2
 812f998:	2089883a 	add	r4,r4,r2
 812f99c:	d9000815 	stw	r4,32(sp)
 812f9a0:	003f5106 	br	812f6e8 <__alt_data_end+0xfc12f6e8>
 812f9a4:	d8c00317 	ldw	r3,12(sp)
 812f9a8:	b8c1fc0e 	bge	r23,r3,813019c <_dtoa_r+0x15b4>
 812f9ac:	0027883a 	mov	r19,zero
 812f9b0:	b805883a 	mov	r2,r23
 812f9b4:	003f3e06 	br	812f6b0 <__alt_data_end+0xfc12f6b0>
 812f9b8:	880b883a 	mov	r5,r17
 812f9bc:	e009883a 	mov	r4,fp
 812f9c0:	000f883a 	mov	r7,zero
 812f9c4:	01800284 	movi	r6,10
 812f9c8:	81323700 	call	8132370 <__multadd>
 812f9cc:	d9000c17 	ldw	r4,48(sp)
 812f9d0:	1023883a 	mov	r17,r2
 812f9d4:	0102040e 	bge	zero,r4,81301e8 <_dtoa_r+0x1600>
 812f9d8:	d9000615 	stw	r4,24(sp)
 812f9dc:	0500050e 	bge	zero,r20,812f9f4 <_dtoa_r+0xe0c>
 812f9e0:	880b883a 	mov	r5,r17
 812f9e4:	a00d883a 	mov	r6,r20
 812f9e8:	e009883a 	mov	r4,fp
 812f9ec:	8132adc0 	call	8132adc <__lshift>
 812f9f0:	1023883a 	mov	r17,r2
 812f9f4:	9801241e 	bne	r19,zero,812fe88 <_dtoa_r+0x12a0>
 812f9f8:	8829883a 	mov	r20,r17
 812f9fc:	d9000617 	ldw	r4,24(sp)
 812fa00:	dcc00717 	ldw	r19,28(sp)
 812fa04:	9480004c 	andi	r18,r18,1
 812fa08:	20bfffc4 	addi	r2,r4,-1
 812fa0c:	9885883a 	add	r2,r19,r2
 812fa10:	d8800415 	stw	r2,16(sp)
 812fa14:	dc800615 	stw	r18,24(sp)
 812fa18:	a80b883a 	mov	r5,r21
 812fa1c:	8009883a 	mov	r4,r16
 812fa20:	812e9c00 	call	812e9c0 <quorem>
 812fa24:	880b883a 	mov	r5,r17
 812fa28:	8009883a 	mov	r4,r16
 812fa2c:	102f883a 	mov	r23,r2
 812fa30:	8132c240 	call	8132c24 <__mcmp>
 812fa34:	a80b883a 	mov	r5,r21
 812fa38:	a00d883a 	mov	r6,r20
 812fa3c:	e009883a 	mov	r4,fp
 812fa40:	102d883a 	mov	r22,r2
 812fa44:	8132c840 	call	8132c84 <__mdiff>
 812fa48:	1007883a 	mov	r3,r2
 812fa4c:	10800317 	ldw	r2,12(r2)
 812fa50:	bc800c04 	addi	r18,r23,48
 812fa54:	180b883a 	mov	r5,r3
 812fa58:	10004e1e 	bne	r2,zero,812fb94 <_dtoa_r+0xfac>
 812fa5c:	8009883a 	mov	r4,r16
 812fa60:	d8c01615 	stw	r3,88(sp)
 812fa64:	8132c240 	call	8132c24 <__mcmp>
 812fa68:	d8c01617 	ldw	r3,88(sp)
 812fa6c:	e009883a 	mov	r4,fp
 812fa70:	d8801615 	stw	r2,88(sp)
 812fa74:	180b883a 	mov	r5,r3
 812fa78:	81323480 	call	8132348 <_Bfree>
 812fa7c:	d8801617 	ldw	r2,88(sp)
 812fa80:	1000041e 	bne	r2,zero,812fa94 <_dtoa_r+0xeac>
 812fa84:	d9800317 	ldw	r6,12(sp)
 812fa88:	3000021e 	bne	r6,zero,812fa94 <_dtoa_r+0xeac>
 812fa8c:	d8c00617 	ldw	r3,24(sp)
 812fa90:	18003726 	beq	r3,zero,812fb70 <_dtoa_r+0xf88>
 812fa94:	b0002016 	blt	r22,zero,812fb18 <_dtoa_r+0xf30>
 812fa98:	b000041e 	bne	r22,zero,812faac <_dtoa_r+0xec4>
 812fa9c:	d9000317 	ldw	r4,12(sp)
 812faa0:	2000021e 	bne	r4,zero,812faac <_dtoa_r+0xec4>
 812faa4:	d8c00617 	ldw	r3,24(sp)
 812faa8:	18001b26 	beq	r3,zero,812fb18 <_dtoa_r+0xf30>
 812faac:	00810716 	blt	zero,r2,812fecc <_dtoa_r+0x12e4>
 812fab0:	d8c00417 	ldw	r3,16(sp)
 812fab4:	9d800044 	addi	r22,r19,1
 812fab8:	9c800005 	stb	r18,0(r19)
 812fabc:	b02f883a 	mov	r23,r22
 812fac0:	98c10626 	beq	r19,r3,812fedc <_dtoa_r+0x12f4>
 812fac4:	800b883a 	mov	r5,r16
 812fac8:	000f883a 	mov	r7,zero
 812facc:	01800284 	movi	r6,10
 812fad0:	e009883a 	mov	r4,fp
 812fad4:	81323700 	call	8132370 <__multadd>
 812fad8:	1021883a 	mov	r16,r2
 812fadc:	000f883a 	mov	r7,zero
 812fae0:	01800284 	movi	r6,10
 812fae4:	880b883a 	mov	r5,r17
 812fae8:	e009883a 	mov	r4,fp
 812faec:	8d002526 	beq	r17,r20,812fb84 <_dtoa_r+0xf9c>
 812faf0:	81323700 	call	8132370 <__multadd>
 812faf4:	a00b883a 	mov	r5,r20
 812faf8:	000f883a 	mov	r7,zero
 812fafc:	01800284 	movi	r6,10
 812fb00:	e009883a 	mov	r4,fp
 812fb04:	1023883a 	mov	r17,r2
 812fb08:	81323700 	call	8132370 <__multadd>
 812fb0c:	1029883a 	mov	r20,r2
 812fb10:	b027883a 	mov	r19,r22
 812fb14:	003fc006 	br	812fa18 <__alt_data_end+0xfc12fa18>
 812fb18:	9011883a 	mov	r8,r18
 812fb1c:	00800e0e 	bge	zero,r2,812fb58 <_dtoa_r+0xf70>
 812fb20:	800b883a 	mov	r5,r16
 812fb24:	01800044 	movi	r6,1
 812fb28:	e009883a 	mov	r4,fp
 812fb2c:	da001715 	stw	r8,92(sp)
 812fb30:	8132adc0 	call	8132adc <__lshift>
 812fb34:	a80b883a 	mov	r5,r21
 812fb38:	1009883a 	mov	r4,r2
 812fb3c:	1021883a 	mov	r16,r2
 812fb40:	8132c240 	call	8132c24 <__mcmp>
 812fb44:	da001717 	ldw	r8,92(sp)
 812fb48:	0081960e 	bge	zero,r2,81301a4 <_dtoa_r+0x15bc>
 812fb4c:	00800e44 	movi	r2,57
 812fb50:	40817026 	beq	r8,r2,8130114 <_dtoa_r+0x152c>
 812fb54:	ba000c44 	addi	r8,r23,49
 812fb58:	8825883a 	mov	r18,r17
 812fb5c:	9dc00044 	addi	r23,r19,1
 812fb60:	9a000005 	stb	r8,0(r19)
 812fb64:	a023883a 	mov	r17,r20
 812fb68:	dc000915 	stw	r16,36(sp)
 812fb6c:	003f2406 	br	812f800 <__alt_data_end+0xfc12f800>
 812fb70:	00800e44 	movi	r2,57
 812fb74:	9011883a 	mov	r8,r18
 812fb78:	90816626 	beq	r18,r2,8130114 <_dtoa_r+0x152c>
 812fb7c:	05bff516 	blt	zero,r22,812fb54 <__alt_data_end+0xfc12fb54>
 812fb80:	003ff506 	br	812fb58 <__alt_data_end+0xfc12fb58>
 812fb84:	81323700 	call	8132370 <__multadd>
 812fb88:	1023883a 	mov	r17,r2
 812fb8c:	1029883a 	mov	r20,r2
 812fb90:	003fdf06 	br	812fb10 <__alt_data_end+0xfc12fb10>
 812fb94:	e009883a 	mov	r4,fp
 812fb98:	81323480 	call	8132348 <_Bfree>
 812fb9c:	00800044 	movi	r2,1
 812fba0:	003fbc06 	br	812fa94 <__alt_data_end+0xfc12fa94>
 812fba4:	a80b883a 	mov	r5,r21
 812fba8:	8009883a 	mov	r4,r16
 812fbac:	8132c240 	call	8132c24 <__mcmp>
 812fbb0:	103edb0e 	bge	r2,zero,812f720 <__alt_data_end+0xfc12f720>
 812fbb4:	800b883a 	mov	r5,r16
 812fbb8:	000f883a 	mov	r7,zero
 812fbbc:	01800284 	movi	r6,10
 812fbc0:	e009883a 	mov	r4,fp
 812fbc4:	81323700 	call	8132370 <__multadd>
 812fbc8:	1021883a 	mov	r16,r2
 812fbcc:	d8800517 	ldw	r2,20(sp)
 812fbd0:	d8c00b17 	ldw	r3,44(sp)
 812fbd4:	10bfffc4 	addi	r2,r2,-1
 812fbd8:	d8800515 	stw	r2,20(sp)
 812fbdc:	183f761e 	bne	r3,zero,812f9b8 <__alt_data_end+0xfc12f9b8>
 812fbe0:	d9000c17 	ldw	r4,48(sp)
 812fbe4:	0101730e 	bge	zero,r4,81301b4 <_dtoa_r+0x15cc>
 812fbe8:	d9000615 	stw	r4,24(sp)
 812fbec:	003ed006 	br	812f730 <__alt_data_end+0xfc12f730>
 812fbf0:	00800084 	movi	r2,2
 812fbf4:	3081861e 	bne	r6,r2,8130210 <_dtoa_r+0x1628>
 812fbf8:	d8000b15 	stw	zero,44(sp)
 812fbfc:	003f3c06 	br	812f8f0 <__alt_data_end+0xfc12f8f0>
 812fc00:	dc000917 	ldw	r16,36(sp)
 812fc04:	003e9206 	br	812f650 <__alt_data_end+0xfc12f650>
 812fc08:	d9c00317 	ldw	r7,12(sp)
 812fc0c:	00800084 	movi	r2,2
 812fc10:	11fec50e 	bge	r2,r7,812f728 <__alt_data_end+0xfc12f728>
 812fc14:	d9000617 	ldw	r4,24(sp)
 812fc18:	20013c1e 	bne	r4,zero,813010c <_dtoa_r+0x1524>
 812fc1c:	a80b883a 	mov	r5,r21
 812fc20:	000f883a 	mov	r7,zero
 812fc24:	01800144 	movi	r6,5
 812fc28:	e009883a 	mov	r4,fp
 812fc2c:	81323700 	call	8132370 <__multadd>
 812fc30:	100b883a 	mov	r5,r2
 812fc34:	8009883a 	mov	r4,r16
 812fc38:	102b883a 	mov	r21,r2
 812fc3c:	8132c240 	call	8132c24 <__mcmp>
 812fc40:	dc000915 	stw	r16,36(sp)
 812fc44:	00bf410e 	bge	zero,r2,812f94c <__alt_data_end+0xfc12f94c>
 812fc48:	d9c00717 	ldw	r7,28(sp)
 812fc4c:	00800c44 	movi	r2,49
 812fc50:	38800005 	stb	r2,0(r7)
 812fc54:	d8800517 	ldw	r2,20(sp)
 812fc58:	3dc00044 	addi	r23,r7,1
 812fc5c:	10800044 	addi	r2,r2,1
 812fc60:	d8800515 	stw	r2,20(sp)
 812fc64:	003f3d06 	br	812f95c <__alt_data_end+0xfc12f95c>
 812fc68:	d9800517 	ldw	r6,20(sp)
 812fc6c:	d9c00717 	ldw	r7,28(sp)
 812fc70:	00800c44 	movi	r2,49
 812fc74:	31800044 	addi	r6,r6,1
 812fc78:	d9800515 	stw	r6,20(sp)
 812fc7c:	38800005 	stb	r2,0(r7)
 812fc80:	003edf06 	br	812f800 <__alt_data_end+0xfc12f800>
 812fc84:	d8000b15 	stw	zero,44(sp)
 812fc88:	003c9f06 	br	812ef08 <__alt_data_end+0xfc12ef08>
 812fc8c:	903e7e1e 	bne	r18,zero,812f688 <__alt_data_end+0xfc12f688>
 812fc90:	00800434 	movhi	r2,16
 812fc94:	10bfffc4 	addi	r2,r2,-1
 812fc98:	9884703a 	and	r2,r19,r2
 812fc9c:	1000ea1e 	bne	r2,zero,8130048 <_dtoa_r+0x1460>
 812fca0:	9cdffc2c 	andhi	r19,r19,32752
 812fca4:	9800e826 	beq	r19,zero,8130048 <_dtoa_r+0x1460>
 812fca8:	d9c00817 	ldw	r7,32(sp)
 812fcac:	b5800044 	addi	r22,r22,1
 812fcb0:	04c00044 	movi	r19,1
 812fcb4:	39c00044 	addi	r7,r7,1
 812fcb8:	d9c00815 	stw	r7,32(sp)
 812fcbc:	d8800d17 	ldw	r2,52(sp)
 812fcc0:	103e721e 	bne	r2,zero,812f68c <__alt_data_end+0xfc12f68c>
 812fcc4:	00800044 	movi	r2,1
 812fcc8:	003e7906 	br	812f6b0 <__alt_data_end+0xfc12f6b0>
 812fccc:	8009883a 	mov	r4,r16
 812fcd0:	81390100 	call	8139010 <__floatsidf>
 812fcd4:	d9800f17 	ldw	r6,60(sp)
 812fcd8:	d9c01017 	ldw	r7,64(sp)
 812fcdc:	1009883a 	mov	r4,r2
 812fce0:	180b883a 	mov	r5,r3
 812fce4:	8137e280 	call	8137e28 <__muldf3>
 812fce8:	000d883a 	mov	r6,zero
 812fcec:	01d00734 	movhi	r7,16412
 812fcf0:	1009883a 	mov	r4,r2
 812fcf4:	180b883a 	mov	r5,r3
 812fcf8:	81369540 	call	8136954 <__adddf3>
 812fcfc:	047f3034 	movhi	r17,64704
 812fd00:	1021883a 	mov	r16,r2
 812fd04:	1c63883a 	add	r17,r3,r17
 812fd08:	d9000f17 	ldw	r4,60(sp)
 812fd0c:	d9401017 	ldw	r5,64(sp)
 812fd10:	000d883a 	mov	r6,zero
 812fd14:	01d00534 	movhi	r7,16404
 812fd18:	81386940 	call	8138694 <__subdf3>
 812fd1c:	800d883a 	mov	r6,r16
 812fd20:	880f883a 	mov	r7,r17
 812fd24:	1009883a 	mov	r4,r2
 812fd28:	180b883a 	mov	r5,r3
 812fd2c:	102b883a 	mov	r21,r2
 812fd30:	1829883a 	mov	r20,r3
 812fd34:	8137c580 	call	8137c58 <__gedf2>
 812fd38:	00806c16 	blt	zero,r2,812feec <_dtoa_r+0x1304>
 812fd3c:	89e0003c 	xorhi	r7,r17,32768
 812fd40:	800d883a 	mov	r6,r16
 812fd44:	a809883a 	mov	r4,r21
 812fd48:	a00b883a 	mov	r5,r20
 812fd4c:	8137d340 	call	8137d34 <__ledf2>
 812fd50:	103d7e0e 	bge	r2,zero,812f34c <__alt_data_end+0xfc12f34c>
 812fd54:	002b883a 	mov	r21,zero
 812fd58:	0023883a 	mov	r17,zero
 812fd5c:	003efb06 	br	812f94c <__alt_data_end+0xfc12f94c>
 812fd60:	d8800717 	ldw	r2,28(sp)
 812fd64:	003bd006 	br	812eca8 <__alt_data_end+0xfc12eca8>
 812fd68:	d9000a17 	ldw	r4,40(sp)
 812fd6c:	d9800d17 	ldw	r6,52(sp)
 812fd70:	dd400a15 	stw	r21,40(sp)
 812fd74:	a905c83a 	sub	r2,r21,r4
 812fd78:	308d883a 	add	r6,r6,r2
 812fd7c:	d9800d15 	stw	r6,52(sp)
 812fd80:	002b883a 	mov	r21,zero
 812fd84:	003e0606 	br	812f5a0 <__alt_data_end+0xfc12f5a0>
 812fd88:	9023883a 	mov	r17,r18
 812fd8c:	9829883a 	mov	r20,r19
 812fd90:	04000084 	movi	r16,2
 812fd94:	003c9206 	br	812efe0 <__alt_data_end+0xfc12efe0>
 812fd98:	04000044 	movi	r16,1
 812fd9c:	dc000c15 	stw	r16,48(sp)
 812fda0:	dc000615 	stw	r16,24(sp)
 812fda4:	dc002215 	stw	r16,136(sp)
 812fda8:	e0001115 	stw	zero,68(fp)
 812fdac:	000b883a 	mov	r5,zero
 812fdb0:	003c6906 	br	812ef58 <__alt_data_end+0xfc12ef58>
 812fdb4:	3021883a 	mov	r16,r6
 812fdb8:	003ffb06 	br	812fda8 <__alt_data_end+0xfc12fda8>
 812fdbc:	1000021e 	bne	r2,zero,812fdc8 <_dtoa_r+0x11e0>
 812fdc0:	4200004c 	andi	r8,r8,1
 812fdc4:	403e7d1e 	bne	r8,zero,812f7bc <__alt_data_end+0xfc12f7bc>
 812fdc8:	01000c04 	movi	r4,48
 812fdcc:	00000106 	br	812fdd4 <_dtoa_r+0x11ec>
 812fdd0:	102f883a 	mov	r23,r2
 812fdd4:	b8bfffc4 	addi	r2,r23,-1
 812fdd8:	10c00007 	ldb	r3,0(r2)
 812fddc:	193ffc26 	beq	r3,r4,812fdd0 <__alt_data_end+0xfc12fdd0>
 812fde0:	003e8706 	br	812f800 <__alt_data_end+0xfc12f800>
 812fde4:	d8800517 	ldw	r2,20(sp)
 812fde8:	00a3c83a 	sub	r17,zero,r2
 812fdec:	8800a426 	beq	r17,zero,8130080 <_dtoa_r+0x1498>
 812fdf0:	888003cc 	andi	r2,r17,15
 812fdf4:	100490fa 	slli	r2,r2,3
 812fdf8:	00c20534 	movhi	r3,2068
 812fdfc:	18ef0704 	addi	r3,r3,-17380
 812fe00:	1885883a 	add	r2,r3,r2
 812fe04:	11800017 	ldw	r6,0(r2)
 812fe08:	11c00117 	ldw	r7,4(r2)
 812fe0c:	9009883a 	mov	r4,r18
 812fe10:	980b883a 	mov	r5,r19
 812fe14:	8823d13a 	srai	r17,r17,4
 812fe18:	8137e280 	call	8137e28 <__muldf3>
 812fe1c:	d8800f15 	stw	r2,60(sp)
 812fe20:	d8c01015 	stw	r3,64(sp)
 812fe24:	8800e826 	beq	r17,zero,81301c8 <_dtoa_r+0x15e0>
 812fe28:	05020534 	movhi	r20,2068
 812fe2c:	a52efd04 	addi	r20,r20,-17420
 812fe30:	04000084 	movi	r16,2
 812fe34:	8980004c 	andi	r6,r17,1
 812fe38:	1009883a 	mov	r4,r2
 812fe3c:	8823d07a 	srai	r17,r17,1
 812fe40:	180b883a 	mov	r5,r3
 812fe44:	30000426 	beq	r6,zero,812fe58 <_dtoa_r+0x1270>
 812fe48:	a1800017 	ldw	r6,0(r20)
 812fe4c:	a1c00117 	ldw	r7,4(r20)
 812fe50:	84000044 	addi	r16,r16,1
 812fe54:	8137e280 	call	8137e28 <__muldf3>
 812fe58:	a5000204 	addi	r20,r20,8
 812fe5c:	883ff51e 	bne	r17,zero,812fe34 <__alt_data_end+0xfc12fe34>
 812fe60:	d8800f15 	stw	r2,60(sp)
 812fe64:	d8c01015 	stw	r3,64(sp)
 812fe68:	003c7606 	br	812f044 <__alt_data_end+0xfc12f044>
 812fe6c:	00c00c04 	movi	r3,48
 812fe70:	10c00005 	stb	r3,0(r2)
 812fe74:	d8c00517 	ldw	r3,20(sp)
 812fe78:	bd3fffc3 	ldbu	r20,-1(r23)
 812fe7c:	18c00044 	addi	r3,r3,1
 812fe80:	d8c00515 	stw	r3,20(sp)
 812fe84:	003db906 	br	812f56c <__alt_data_end+0xfc12f56c>
 812fe88:	89400117 	ldw	r5,4(r17)
 812fe8c:	e009883a 	mov	r4,fp
 812fe90:	81322a00 	call	81322a0 <_Balloc>
 812fe94:	89800417 	ldw	r6,16(r17)
 812fe98:	89400304 	addi	r5,r17,12
 812fe9c:	11000304 	addi	r4,r2,12
 812fea0:	31800084 	addi	r6,r6,2
 812fea4:	318d883a 	add	r6,r6,r6
 812fea8:	318d883a 	add	r6,r6,r6
 812feac:	1027883a 	mov	r19,r2
 812feb0:	8131ed40 	call	8131ed4 <memcpy>
 812feb4:	01800044 	movi	r6,1
 812feb8:	980b883a 	mov	r5,r19
 812febc:	e009883a 	mov	r4,fp
 812fec0:	8132adc0 	call	8132adc <__lshift>
 812fec4:	1029883a 	mov	r20,r2
 812fec8:	003ecc06 	br	812f9fc <__alt_data_end+0xfc12f9fc>
 812fecc:	00800e44 	movi	r2,57
 812fed0:	90809026 	beq	r18,r2,8130114 <_dtoa_r+0x152c>
 812fed4:	92000044 	addi	r8,r18,1
 812fed8:	003f1f06 	br	812fb58 <__alt_data_end+0xfc12fb58>
 812fedc:	9011883a 	mov	r8,r18
 812fee0:	8825883a 	mov	r18,r17
 812fee4:	a023883a 	mov	r17,r20
 812fee8:	003e2906 	br	812f790 <__alt_data_end+0xfc12f790>
 812feec:	002b883a 	mov	r21,zero
 812fef0:	0023883a 	mov	r17,zero
 812fef4:	003f5406 	br	812fc48 <__alt_data_end+0xfc12fc48>
 812fef8:	61bfffc4 	addi	r6,r12,-1
 812fefc:	300490fa 	slli	r2,r6,3
 812ff00:	00c20534 	movhi	r3,2068
 812ff04:	18ef0704 	addi	r3,r3,-17380
 812ff08:	1885883a 	add	r2,r3,r2
 812ff0c:	11000017 	ldw	r4,0(r2)
 812ff10:	11400117 	ldw	r5,4(r2)
 812ff14:	d8800717 	ldw	r2,28(sp)
 812ff18:	880f883a 	mov	r7,r17
 812ff1c:	d9801215 	stw	r6,72(sp)
 812ff20:	800d883a 	mov	r6,r16
 812ff24:	db001615 	stw	r12,88(sp)
 812ff28:	15c00044 	addi	r23,r2,1
 812ff2c:	8137e280 	call	8137e28 <__muldf3>
 812ff30:	d9401017 	ldw	r5,64(sp)
 812ff34:	d9000f17 	ldw	r4,60(sp)
 812ff38:	d8c01515 	stw	r3,84(sp)
 812ff3c:	d8801415 	stw	r2,80(sp)
 812ff40:	8138f900 	call	8138f90 <__fixdfsi>
 812ff44:	1009883a 	mov	r4,r2
 812ff48:	1021883a 	mov	r16,r2
 812ff4c:	81390100 	call	8139010 <__floatsidf>
 812ff50:	d9000f17 	ldw	r4,60(sp)
 812ff54:	d9401017 	ldw	r5,64(sp)
 812ff58:	100d883a 	mov	r6,r2
 812ff5c:	180f883a 	mov	r7,r3
 812ff60:	81386940 	call	8138694 <__subdf3>
 812ff64:	1829883a 	mov	r20,r3
 812ff68:	d8c00717 	ldw	r3,28(sp)
 812ff6c:	84000c04 	addi	r16,r16,48
 812ff70:	1023883a 	mov	r17,r2
 812ff74:	1c000005 	stb	r16,0(r3)
 812ff78:	db001617 	ldw	r12,88(sp)
 812ff7c:	00800044 	movi	r2,1
 812ff80:	60802226 	beq	r12,r2,813000c <_dtoa_r+0x1424>
 812ff84:	d9c00717 	ldw	r7,28(sp)
 812ff88:	8805883a 	mov	r2,r17
 812ff8c:	b82b883a 	mov	r21,r23
 812ff90:	3b19883a 	add	r12,r7,r12
 812ff94:	6023883a 	mov	r17,r12
 812ff98:	a007883a 	mov	r3,r20
 812ff9c:	dc800f15 	stw	r18,60(sp)
 812ffa0:	000d883a 	mov	r6,zero
 812ffa4:	01d00934 	movhi	r7,16420
 812ffa8:	1009883a 	mov	r4,r2
 812ffac:	180b883a 	mov	r5,r3
 812ffb0:	8137e280 	call	8137e28 <__muldf3>
 812ffb4:	180b883a 	mov	r5,r3
 812ffb8:	1009883a 	mov	r4,r2
 812ffbc:	1829883a 	mov	r20,r3
 812ffc0:	1025883a 	mov	r18,r2
 812ffc4:	8138f900 	call	8138f90 <__fixdfsi>
 812ffc8:	1009883a 	mov	r4,r2
 812ffcc:	1021883a 	mov	r16,r2
 812ffd0:	81390100 	call	8139010 <__floatsidf>
 812ffd4:	100d883a 	mov	r6,r2
 812ffd8:	180f883a 	mov	r7,r3
 812ffdc:	9009883a 	mov	r4,r18
 812ffe0:	a00b883a 	mov	r5,r20
 812ffe4:	84000c04 	addi	r16,r16,48
 812ffe8:	81386940 	call	8138694 <__subdf3>
 812ffec:	ad400044 	addi	r21,r21,1
 812fff0:	ac3fffc5 	stb	r16,-1(r21)
 812fff4:	ac7fea1e 	bne	r21,r17,812ffa0 <__alt_data_end+0xfc12ffa0>
 812fff8:	1023883a 	mov	r17,r2
 812fffc:	d8801217 	ldw	r2,72(sp)
 8130000:	dc800f17 	ldw	r18,60(sp)
 8130004:	1829883a 	mov	r20,r3
 8130008:	b8af883a 	add	r23,r23,r2
 813000c:	d9001417 	ldw	r4,80(sp)
 8130010:	d9401517 	ldw	r5,84(sp)
 8130014:	000d883a 	mov	r6,zero
 8130018:	01cff834 	movhi	r7,16352
 813001c:	81369540 	call	8136954 <__adddf3>
 8130020:	880d883a 	mov	r6,r17
 8130024:	a00f883a 	mov	r7,r20
 8130028:	1009883a 	mov	r4,r2
 813002c:	180b883a 	mov	r5,r3
 8130030:	8137d340 	call	8137d34 <__ledf2>
 8130034:	10003e0e 	bge	r2,zero,8130130 <_dtoa_r+0x1548>
 8130038:	d9001317 	ldw	r4,76(sp)
 813003c:	bd3fffc3 	ldbu	r20,-1(r23)
 8130040:	d9000515 	stw	r4,20(sp)
 8130044:	003d3b06 	br	812f534 <__alt_data_end+0xfc12f534>
 8130048:	0027883a 	mov	r19,zero
 813004c:	003f1b06 	br	812fcbc <__alt_data_end+0xfc12fcbc>
 8130050:	d8800817 	ldw	r2,32(sp)
 8130054:	11e9c83a 	sub	r20,r2,r7
 8130058:	0005883a 	mov	r2,zero
 813005c:	003d5406 	br	812f5b0 <__alt_data_end+0xfc12f5b0>
 8130060:	00800044 	movi	r2,1
 8130064:	003dc706 	br	812f784 <__alt_data_end+0xfc12f784>
 8130068:	d8c00217 	ldw	r3,8(sp)
 813006c:	00800d84 	movi	r2,54
 8130070:	dd400a17 	ldw	r21,40(sp)
 8130074:	10c5c83a 	sub	r2,r2,r3
 8130078:	dd000817 	ldw	r20,32(sp)
 813007c:	003d4c06 	br	812f5b0 <__alt_data_end+0xfc12f5b0>
 8130080:	dc800f15 	stw	r18,60(sp)
 8130084:	dcc01015 	stw	r19,64(sp)
 8130088:	04000084 	movi	r16,2
 813008c:	003bed06 	br	812f044 <__alt_data_end+0xfc12f044>
 8130090:	d9000617 	ldw	r4,24(sp)
 8130094:	203f0d26 	beq	r4,zero,812fccc <__alt_data_end+0xfc12fccc>
 8130098:	d9800c17 	ldw	r6,48(sp)
 813009c:	01bcab0e 	bge	zero,r6,812f34c <__alt_data_end+0xfc12f34c>
 81300a0:	d9401017 	ldw	r5,64(sp)
 81300a4:	d9000f17 	ldw	r4,60(sp)
 81300a8:	000d883a 	mov	r6,zero
 81300ac:	01d00934 	movhi	r7,16420
 81300b0:	8137e280 	call	8137e28 <__muldf3>
 81300b4:	81000044 	addi	r4,r16,1
 81300b8:	d8800f15 	stw	r2,60(sp)
 81300bc:	d8c01015 	stw	r3,64(sp)
 81300c0:	81390100 	call	8139010 <__floatsidf>
 81300c4:	d9800f17 	ldw	r6,60(sp)
 81300c8:	d9c01017 	ldw	r7,64(sp)
 81300cc:	1009883a 	mov	r4,r2
 81300d0:	180b883a 	mov	r5,r3
 81300d4:	8137e280 	call	8137e28 <__muldf3>
 81300d8:	01d00734 	movhi	r7,16412
 81300dc:	000d883a 	mov	r6,zero
 81300e0:	1009883a 	mov	r4,r2
 81300e4:	180b883a 	mov	r5,r3
 81300e8:	81369540 	call	8136954 <__adddf3>
 81300ec:	d9c00517 	ldw	r7,20(sp)
 81300f0:	047f3034 	movhi	r17,64704
 81300f4:	1021883a 	mov	r16,r2
 81300f8:	39ffffc4 	addi	r7,r7,-1
 81300fc:	d9c01315 	stw	r7,76(sp)
 8130100:	1c63883a 	add	r17,r3,r17
 8130104:	db000c17 	ldw	r12,48(sp)
 8130108:	003bea06 	br	812f0b4 <__alt_data_end+0xfc12f0b4>
 813010c:	dc000915 	stw	r16,36(sp)
 8130110:	003e0e06 	br	812f94c <__alt_data_end+0xfc12f94c>
 8130114:	01000e44 	movi	r4,57
 8130118:	8825883a 	mov	r18,r17
 813011c:	9dc00044 	addi	r23,r19,1
 8130120:	99000005 	stb	r4,0(r19)
 8130124:	a023883a 	mov	r17,r20
 8130128:	dc000915 	stw	r16,36(sp)
 813012c:	003da406 	br	812f7c0 <__alt_data_end+0xfc12f7c0>
 8130130:	d9801417 	ldw	r6,80(sp)
 8130134:	d9c01517 	ldw	r7,84(sp)
 8130138:	0009883a 	mov	r4,zero
 813013c:	014ff834 	movhi	r5,16352
 8130140:	81386940 	call	8138694 <__subdf3>
 8130144:	880d883a 	mov	r6,r17
 8130148:	a00f883a 	mov	r7,r20
 813014c:	1009883a 	mov	r4,r2
 8130150:	180b883a 	mov	r5,r3
 8130154:	8137c580 	call	8137c58 <__gedf2>
 8130158:	00bc7c0e 	bge	zero,r2,812f34c <__alt_data_end+0xfc12f34c>
 813015c:	01000c04 	movi	r4,48
 8130160:	00000106 	br	8130168 <_dtoa_r+0x1580>
 8130164:	102f883a 	mov	r23,r2
 8130168:	b8bfffc4 	addi	r2,r23,-1
 813016c:	10c00007 	ldb	r3,0(r2)
 8130170:	193ffc26 	beq	r3,r4,8130164 <__alt_data_end+0xfc130164>
 8130174:	d9801317 	ldw	r6,76(sp)
 8130178:	d9800515 	stw	r6,20(sp)
 813017c:	003c4406 	br	812f290 <__alt_data_end+0xfc12f290>
 8130180:	d9801317 	ldw	r6,76(sp)
 8130184:	d9800515 	stw	r6,20(sp)
 8130188:	003cea06 	br	812f534 <__alt_data_end+0xfc12f534>
 813018c:	dd800f17 	ldw	r22,60(sp)
 8130190:	dcc01017 	ldw	r19,64(sp)
 8130194:	dc801217 	ldw	r18,72(sp)
 8130198:	003c6c06 	br	812f34c <__alt_data_end+0xfc12f34c>
 813019c:	903e031e 	bne	r18,zero,812f9ac <__alt_data_end+0xfc12f9ac>
 81301a0:	003ebb06 	br	812fc90 <__alt_data_end+0xfc12fc90>
 81301a4:	103e6c1e 	bne	r2,zero,812fb58 <__alt_data_end+0xfc12fb58>
 81301a8:	4080004c 	andi	r2,r8,1
 81301ac:	103e6a26 	beq	r2,zero,812fb58 <__alt_data_end+0xfc12fb58>
 81301b0:	003e6606 	br	812fb4c <__alt_data_end+0xfc12fb4c>
 81301b4:	d8c00317 	ldw	r3,12(sp)
 81301b8:	00800084 	movi	r2,2
 81301bc:	10c02916 	blt	r2,r3,8130264 <_dtoa_r+0x167c>
 81301c0:	d9000c17 	ldw	r4,48(sp)
 81301c4:	003e8806 	br	812fbe8 <__alt_data_end+0xfc12fbe8>
 81301c8:	04000084 	movi	r16,2
 81301cc:	003b9d06 	br	812f044 <__alt_data_end+0xfc12f044>
 81301d0:	d9001317 	ldw	r4,76(sp)
 81301d4:	d9000515 	stw	r4,20(sp)
 81301d8:	003cd606 	br	812f534 <__alt_data_end+0xfc12f534>
 81301dc:	d8801317 	ldw	r2,76(sp)
 81301e0:	d8800515 	stw	r2,20(sp)
 81301e4:	003c2a06 	br	812f290 <__alt_data_end+0xfc12f290>
 81301e8:	d9800317 	ldw	r6,12(sp)
 81301ec:	00800084 	movi	r2,2
 81301f0:	11801516 	blt	r2,r6,8130248 <_dtoa_r+0x1660>
 81301f4:	d9c00c17 	ldw	r7,48(sp)
 81301f8:	d9c00615 	stw	r7,24(sp)
 81301fc:	003df706 	br	812f9dc <__alt_data_end+0xfc12f9dc>
 8130200:	193d3926 	beq	r3,r4,812f6e8 <__alt_data_end+0xfc12f6e8>
 8130204:	00c00f04 	movi	r3,60
 8130208:	1885c83a 	sub	r2,r3,r2
 813020c:	003ddf06 	br	812f98c <__alt_data_end+0xfc12f98c>
 8130210:	e009883a 	mov	r4,fp
 8130214:	e0001115 	stw	zero,68(fp)
 8130218:	000b883a 	mov	r5,zero
 813021c:	81322a00 	call	81322a0 <_Balloc>
 8130220:	d8800715 	stw	r2,28(sp)
 8130224:	d8c00717 	ldw	r3,28(sp)
 8130228:	00bfffc4 	movi	r2,-1
 813022c:	01000044 	movi	r4,1
 8130230:	d8800c15 	stw	r2,48(sp)
 8130234:	e0c01015 	stw	r3,64(fp)
 8130238:	d9000b15 	stw	r4,44(sp)
 813023c:	d8800615 	stw	r2,24(sp)
 8130240:	d8002215 	stw	zero,136(sp)
 8130244:	003c4106 	br	812f34c <__alt_data_end+0xfc12f34c>
 8130248:	d8c00c17 	ldw	r3,48(sp)
 813024c:	d8c00615 	stw	r3,24(sp)
 8130250:	003e7006 	br	812fc14 <__alt_data_end+0xfc12fc14>
 8130254:	04400044 	movi	r17,1
 8130258:	003b2006 	br	812eedc <__alt_data_end+0xfc12eedc>
 813025c:	000b883a 	mov	r5,zero
 8130260:	003b3d06 	br	812ef58 <__alt_data_end+0xfc12ef58>
 8130264:	d8800c17 	ldw	r2,48(sp)
 8130268:	d8800615 	stw	r2,24(sp)
 813026c:	003e6906 	br	812fc14 <__alt_data_end+0xfc12fc14>

08130270 <__sflush_r>:
 8130270:	2880030b 	ldhu	r2,12(r5)
 8130274:	defffb04 	addi	sp,sp,-20
 8130278:	dcc00315 	stw	r19,12(sp)
 813027c:	dc400115 	stw	r17,4(sp)
 8130280:	dfc00415 	stw	ra,16(sp)
 8130284:	dc800215 	stw	r18,8(sp)
 8130288:	dc000015 	stw	r16,0(sp)
 813028c:	10c0020c 	andi	r3,r2,8
 8130290:	2823883a 	mov	r17,r5
 8130294:	2027883a 	mov	r19,r4
 8130298:	1800311e 	bne	r3,zero,8130360 <__sflush_r+0xf0>
 813029c:	28c00117 	ldw	r3,4(r5)
 81302a0:	10820014 	ori	r2,r2,2048
 81302a4:	2880030d 	sth	r2,12(r5)
 81302a8:	00c04b0e 	bge	zero,r3,81303d8 <__sflush_r+0x168>
 81302ac:	8a000a17 	ldw	r8,40(r17)
 81302b0:	40002326 	beq	r8,zero,8130340 <__sflush_r+0xd0>
 81302b4:	9c000017 	ldw	r16,0(r19)
 81302b8:	10c4000c 	andi	r3,r2,4096
 81302bc:	98000015 	stw	zero,0(r19)
 81302c0:	18004826 	beq	r3,zero,81303e4 <__sflush_r+0x174>
 81302c4:	89801417 	ldw	r6,80(r17)
 81302c8:	10c0010c 	andi	r3,r2,4
 81302cc:	18000626 	beq	r3,zero,81302e8 <__sflush_r+0x78>
 81302d0:	88c00117 	ldw	r3,4(r17)
 81302d4:	88800c17 	ldw	r2,48(r17)
 81302d8:	30cdc83a 	sub	r6,r6,r3
 81302dc:	10000226 	beq	r2,zero,81302e8 <__sflush_r+0x78>
 81302e0:	88800f17 	ldw	r2,60(r17)
 81302e4:	308dc83a 	sub	r6,r6,r2
 81302e8:	89400717 	ldw	r5,28(r17)
 81302ec:	000f883a 	mov	r7,zero
 81302f0:	9809883a 	mov	r4,r19
 81302f4:	403ee83a 	callr	r8
 81302f8:	00ffffc4 	movi	r3,-1
 81302fc:	10c04426 	beq	r2,r3,8130410 <__sflush_r+0x1a0>
 8130300:	88c0030b 	ldhu	r3,12(r17)
 8130304:	89000417 	ldw	r4,16(r17)
 8130308:	88000115 	stw	zero,4(r17)
 813030c:	197dffcc 	andi	r5,r3,63487
 8130310:	8940030d 	sth	r5,12(r17)
 8130314:	89000015 	stw	r4,0(r17)
 8130318:	18c4000c 	andi	r3,r3,4096
 813031c:	18002c1e 	bne	r3,zero,81303d0 <__sflush_r+0x160>
 8130320:	89400c17 	ldw	r5,48(r17)
 8130324:	9c000015 	stw	r16,0(r19)
 8130328:	28000526 	beq	r5,zero,8130340 <__sflush_r+0xd0>
 813032c:	88801004 	addi	r2,r17,64
 8130330:	28800226 	beq	r5,r2,813033c <__sflush_r+0xcc>
 8130334:	9809883a 	mov	r4,r19
 8130338:	81309ec0 	call	81309ec <_free_r>
 813033c:	88000c15 	stw	zero,48(r17)
 8130340:	0005883a 	mov	r2,zero
 8130344:	dfc00417 	ldw	ra,16(sp)
 8130348:	dcc00317 	ldw	r19,12(sp)
 813034c:	dc800217 	ldw	r18,8(sp)
 8130350:	dc400117 	ldw	r17,4(sp)
 8130354:	dc000017 	ldw	r16,0(sp)
 8130358:	dec00504 	addi	sp,sp,20
 813035c:	f800283a 	ret
 8130360:	2c800417 	ldw	r18,16(r5)
 8130364:	903ff626 	beq	r18,zero,8130340 <__alt_data_end+0xfc130340>
 8130368:	2c000017 	ldw	r16,0(r5)
 813036c:	108000cc 	andi	r2,r2,3
 8130370:	2c800015 	stw	r18,0(r5)
 8130374:	84a1c83a 	sub	r16,r16,r18
 8130378:	1000131e 	bne	r2,zero,81303c8 <__sflush_r+0x158>
 813037c:	28800517 	ldw	r2,20(r5)
 8130380:	88800215 	stw	r2,8(r17)
 8130384:	04000316 	blt	zero,r16,8130394 <__sflush_r+0x124>
 8130388:	003fed06 	br	8130340 <__alt_data_end+0xfc130340>
 813038c:	90a5883a 	add	r18,r18,r2
 8130390:	043feb0e 	bge	zero,r16,8130340 <__alt_data_end+0xfc130340>
 8130394:	88800917 	ldw	r2,36(r17)
 8130398:	89400717 	ldw	r5,28(r17)
 813039c:	800f883a 	mov	r7,r16
 81303a0:	900d883a 	mov	r6,r18
 81303a4:	9809883a 	mov	r4,r19
 81303a8:	103ee83a 	callr	r2
 81303ac:	80a1c83a 	sub	r16,r16,r2
 81303b0:	00bff616 	blt	zero,r2,813038c <__alt_data_end+0xfc13038c>
 81303b4:	88c0030b 	ldhu	r3,12(r17)
 81303b8:	00bfffc4 	movi	r2,-1
 81303bc:	18c01014 	ori	r3,r3,64
 81303c0:	88c0030d 	sth	r3,12(r17)
 81303c4:	003fdf06 	br	8130344 <__alt_data_end+0xfc130344>
 81303c8:	0005883a 	mov	r2,zero
 81303cc:	003fec06 	br	8130380 <__alt_data_end+0xfc130380>
 81303d0:	88801415 	stw	r2,80(r17)
 81303d4:	003fd206 	br	8130320 <__alt_data_end+0xfc130320>
 81303d8:	28c00f17 	ldw	r3,60(r5)
 81303dc:	00ffb316 	blt	zero,r3,81302ac <__alt_data_end+0xfc1302ac>
 81303e0:	003fd706 	br	8130340 <__alt_data_end+0xfc130340>
 81303e4:	89400717 	ldw	r5,28(r17)
 81303e8:	000d883a 	mov	r6,zero
 81303ec:	01c00044 	movi	r7,1
 81303f0:	9809883a 	mov	r4,r19
 81303f4:	403ee83a 	callr	r8
 81303f8:	100d883a 	mov	r6,r2
 81303fc:	00bfffc4 	movi	r2,-1
 8130400:	30801426 	beq	r6,r2,8130454 <__sflush_r+0x1e4>
 8130404:	8880030b 	ldhu	r2,12(r17)
 8130408:	8a000a17 	ldw	r8,40(r17)
 813040c:	003fae06 	br	81302c8 <__alt_data_end+0xfc1302c8>
 8130410:	98c00017 	ldw	r3,0(r19)
 8130414:	183fba26 	beq	r3,zero,8130300 <__alt_data_end+0xfc130300>
 8130418:	01000744 	movi	r4,29
 813041c:	19000626 	beq	r3,r4,8130438 <__sflush_r+0x1c8>
 8130420:	01000584 	movi	r4,22
 8130424:	19000426 	beq	r3,r4,8130438 <__sflush_r+0x1c8>
 8130428:	88c0030b 	ldhu	r3,12(r17)
 813042c:	18c01014 	ori	r3,r3,64
 8130430:	88c0030d 	sth	r3,12(r17)
 8130434:	003fc306 	br	8130344 <__alt_data_end+0xfc130344>
 8130438:	8880030b 	ldhu	r2,12(r17)
 813043c:	88c00417 	ldw	r3,16(r17)
 8130440:	88000115 	stw	zero,4(r17)
 8130444:	10bdffcc 	andi	r2,r2,63487
 8130448:	8880030d 	sth	r2,12(r17)
 813044c:	88c00015 	stw	r3,0(r17)
 8130450:	003fb306 	br	8130320 <__alt_data_end+0xfc130320>
 8130454:	98800017 	ldw	r2,0(r19)
 8130458:	103fea26 	beq	r2,zero,8130404 <__alt_data_end+0xfc130404>
 813045c:	00c00744 	movi	r3,29
 8130460:	10c00226 	beq	r2,r3,813046c <__sflush_r+0x1fc>
 8130464:	00c00584 	movi	r3,22
 8130468:	10c0031e 	bne	r2,r3,8130478 <__sflush_r+0x208>
 813046c:	9c000015 	stw	r16,0(r19)
 8130470:	0005883a 	mov	r2,zero
 8130474:	003fb306 	br	8130344 <__alt_data_end+0xfc130344>
 8130478:	88c0030b 	ldhu	r3,12(r17)
 813047c:	3005883a 	mov	r2,r6
 8130480:	18c01014 	ori	r3,r3,64
 8130484:	88c0030d 	sth	r3,12(r17)
 8130488:	003fae06 	br	8130344 <__alt_data_end+0xfc130344>

0813048c <_fflush_r>:
 813048c:	defffd04 	addi	sp,sp,-12
 8130490:	dc000115 	stw	r16,4(sp)
 8130494:	dfc00215 	stw	ra,8(sp)
 8130498:	2021883a 	mov	r16,r4
 813049c:	20000226 	beq	r4,zero,81304a8 <_fflush_r+0x1c>
 81304a0:	20800e17 	ldw	r2,56(r4)
 81304a4:	10000c26 	beq	r2,zero,81304d8 <_fflush_r+0x4c>
 81304a8:	2880030f 	ldh	r2,12(r5)
 81304ac:	1000051e 	bne	r2,zero,81304c4 <_fflush_r+0x38>
 81304b0:	0005883a 	mov	r2,zero
 81304b4:	dfc00217 	ldw	ra,8(sp)
 81304b8:	dc000117 	ldw	r16,4(sp)
 81304bc:	dec00304 	addi	sp,sp,12
 81304c0:	f800283a 	ret
 81304c4:	8009883a 	mov	r4,r16
 81304c8:	dfc00217 	ldw	ra,8(sp)
 81304cc:	dc000117 	ldw	r16,4(sp)
 81304d0:	dec00304 	addi	sp,sp,12
 81304d4:	81302701 	jmpi	8130270 <__sflush_r>
 81304d8:	d9400015 	stw	r5,0(sp)
 81304dc:	81308780 	call	8130878 <__sinit>
 81304e0:	d9400017 	ldw	r5,0(sp)
 81304e4:	003ff006 	br	81304a8 <__alt_data_end+0xfc1304a8>

081304e8 <fflush>:
 81304e8:	20000526 	beq	r4,zero,8130500 <fflush+0x18>
 81304ec:	00820534 	movhi	r2,2068
 81304f0:	10b63c04 	addi	r2,r2,-10000
 81304f4:	200b883a 	mov	r5,r4
 81304f8:	11000017 	ldw	r4,0(r2)
 81304fc:	813048c1 	jmpi	813048c <_fflush_r>
 8130500:	00820534 	movhi	r2,2068
 8130504:	10b63b04 	addi	r2,r2,-10004
 8130508:	11000017 	ldw	r4,0(r2)
 813050c:	014204f4 	movhi	r5,2067
 8130510:	29412304 	addi	r5,r5,1164
 8130514:	81312881 	jmpi	8131288 <_fwalk_reent>

08130518 <__fp_unlock>:
 8130518:	0005883a 	mov	r2,zero
 813051c:	f800283a 	ret

08130520 <_cleanup_r>:
 8130520:	014204f4 	movhi	r5,2067
 8130524:	29550904 	addi	r5,r5,21540
 8130528:	81312881 	jmpi	8131288 <_fwalk_reent>

0813052c <__sinit.part.1>:
 813052c:	defff704 	addi	sp,sp,-36
 8130530:	00c204f4 	movhi	r3,2067
 8130534:	dfc00815 	stw	ra,32(sp)
 8130538:	ddc00715 	stw	r23,28(sp)
 813053c:	dd800615 	stw	r22,24(sp)
 8130540:	dd400515 	stw	r21,20(sp)
 8130544:	dd000415 	stw	r20,16(sp)
 8130548:	dcc00315 	stw	r19,12(sp)
 813054c:	dc800215 	stw	r18,8(sp)
 8130550:	dc400115 	stw	r17,4(sp)
 8130554:	dc000015 	stw	r16,0(sp)
 8130558:	18c14804 	addi	r3,r3,1312
 813055c:	24000117 	ldw	r16,4(r4)
 8130560:	20c00f15 	stw	r3,60(r4)
 8130564:	2080bb04 	addi	r2,r4,748
 8130568:	00c000c4 	movi	r3,3
 813056c:	20c0b915 	stw	r3,740(r4)
 8130570:	2080ba15 	stw	r2,744(r4)
 8130574:	2000b815 	stw	zero,736(r4)
 8130578:	05c00204 	movi	r23,8
 813057c:	00800104 	movi	r2,4
 8130580:	2025883a 	mov	r18,r4
 8130584:	b80d883a 	mov	r6,r23
 8130588:	81001704 	addi	r4,r16,92
 813058c:	000b883a 	mov	r5,zero
 8130590:	80000015 	stw	zero,0(r16)
 8130594:	80000115 	stw	zero,4(r16)
 8130598:	80000215 	stw	zero,8(r16)
 813059c:	8080030d 	sth	r2,12(r16)
 81305a0:	80001915 	stw	zero,100(r16)
 81305a4:	8000038d 	sth	zero,14(r16)
 81305a8:	80000415 	stw	zero,16(r16)
 81305ac:	80000515 	stw	zero,20(r16)
 81305b0:	80000615 	stw	zero,24(r16)
 81305b4:	81321780 	call	8132178 <memset>
 81305b8:	058204f4 	movhi	r22,2067
 81305bc:	94400217 	ldw	r17,8(r18)
 81305c0:	054204f4 	movhi	r21,2067
 81305c4:	050204f4 	movhi	r20,2067
 81305c8:	04c204f4 	movhi	r19,2067
 81305cc:	b58e6104 	addi	r22,r22,14724
 81305d0:	ad4e7804 	addi	r21,r21,14816
 81305d4:	a50e9704 	addi	r20,r20,14940
 81305d8:	9cceae04 	addi	r19,r19,15032
 81305dc:	85800815 	stw	r22,32(r16)
 81305e0:	85400915 	stw	r21,36(r16)
 81305e4:	85000a15 	stw	r20,40(r16)
 81305e8:	84c00b15 	stw	r19,44(r16)
 81305ec:	84000715 	stw	r16,28(r16)
 81305f0:	00800284 	movi	r2,10
 81305f4:	8880030d 	sth	r2,12(r17)
 81305f8:	00800044 	movi	r2,1
 81305fc:	b80d883a 	mov	r6,r23
 8130600:	89001704 	addi	r4,r17,92
 8130604:	000b883a 	mov	r5,zero
 8130608:	88000015 	stw	zero,0(r17)
 813060c:	88000115 	stw	zero,4(r17)
 8130610:	88000215 	stw	zero,8(r17)
 8130614:	88001915 	stw	zero,100(r17)
 8130618:	8880038d 	sth	r2,14(r17)
 813061c:	88000415 	stw	zero,16(r17)
 8130620:	88000515 	stw	zero,20(r17)
 8130624:	88000615 	stw	zero,24(r17)
 8130628:	81321780 	call	8132178 <memset>
 813062c:	94000317 	ldw	r16,12(r18)
 8130630:	00800484 	movi	r2,18
 8130634:	8c400715 	stw	r17,28(r17)
 8130638:	8d800815 	stw	r22,32(r17)
 813063c:	8d400915 	stw	r21,36(r17)
 8130640:	8d000a15 	stw	r20,40(r17)
 8130644:	8cc00b15 	stw	r19,44(r17)
 8130648:	8080030d 	sth	r2,12(r16)
 813064c:	00800084 	movi	r2,2
 8130650:	80000015 	stw	zero,0(r16)
 8130654:	80000115 	stw	zero,4(r16)
 8130658:	80000215 	stw	zero,8(r16)
 813065c:	80001915 	stw	zero,100(r16)
 8130660:	8080038d 	sth	r2,14(r16)
 8130664:	80000415 	stw	zero,16(r16)
 8130668:	80000515 	stw	zero,20(r16)
 813066c:	80000615 	stw	zero,24(r16)
 8130670:	b80d883a 	mov	r6,r23
 8130674:	000b883a 	mov	r5,zero
 8130678:	81001704 	addi	r4,r16,92
 813067c:	81321780 	call	8132178 <memset>
 8130680:	00800044 	movi	r2,1
 8130684:	84000715 	stw	r16,28(r16)
 8130688:	85800815 	stw	r22,32(r16)
 813068c:	85400915 	stw	r21,36(r16)
 8130690:	85000a15 	stw	r20,40(r16)
 8130694:	84c00b15 	stw	r19,44(r16)
 8130698:	90800e15 	stw	r2,56(r18)
 813069c:	dfc00817 	ldw	ra,32(sp)
 81306a0:	ddc00717 	ldw	r23,28(sp)
 81306a4:	dd800617 	ldw	r22,24(sp)
 81306a8:	dd400517 	ldw	r21,20(sp)
 81306ac:	dd000417 	ldw	r20,16(sp)
 81306b0:	dcc00317 	ldw	r19,12(sp)
 81306b4:	dc800217 	ldw	r18,8(sp)
 81306b8:	dc400117 	ldw	r17,4(sp)
 81306bc:	dc000017 	ldw	r16,0(sp)
 81306c0:	dec00904 	addi	sp,sp,36
 81306c4:	f800283a 	ret

081306c8 <__fp_lock>:
 81306c8:	0005883a 	mov	r2,zero
 81306cc:	f800283a 	ret

081306d0 <__sfmoreglue>:
 81306d0:	defffc04 	addi	sp,sp,-16
 81306d4:	dc800215 	stw	r18,8(sp)
 81306d8:	2825883a 	mov	r18,r5
 81306dc:	dc000015 	stw	r16,0(sp)
 81306e0:	01401a04 	movi	r5,104
 81306e4:	2021883a 	mov	r16,r4
 81306e8:	913fffc4 	addi	r4,r18,-1
 81306ec:	dfc00315 	stw	ra,12(sp)
 81306f0:	dc400115 	stw	r17,4(sp)
 81306f4:	812c2b80 	call	812c2b8 <__mulsi3>
 81306f8:	8009883a 	mov	r4,r16
 81306fc:	11401d04 	addi	r5,r2,116
 8130700:	1023883a 	mov	r17,r2
 8130704:	81315e40 	call	81315e4 <_malloc_r>
 8130708:	1021883a 	mov	r16,r2
 813070c:	10000726 	beq	r2,zero,813072c <__sfmoreglue+0x5c>
 8130710:	11000304 	addi	r4,r2,12
 8130714:	10000015 	stw	zero,0(r2)
 8130718:	14800115 	stw	r18,4(r2)
 813071c:	11000215 	stw	r4,8(r2)
 8130720:	89801a04 	addi	r6,r17,104
 8130724:	000b883a 	mov	r5,zero
 8130728:	81321780 	call	8132178 <memset>
 813072c:	8005883a 	mov	r2,r16
 8130730:	dfc00317 	ldw	ra,12(sp)
 8130734:	dc800217 	ldw	r18,8(sp)
 8130738:	dc400117 	ldw	r17,4(sp)
 813073c:	dc000017 	ldw	r16,0(sp)
 8130740:	dec00404 	addi	sp,sp,16
 8130744:	f800283a 	ret

08130748 <__sfp>:
 8130748:	defffb04 	addi	sp,sp,-20
 813074c:	dc000015 	stw	r16,0(sp)
 8130750:	04020534 	movhi	r16,2068
 8130754:	84363b04 	addi	r16,r16,-10004
 8130758:	dcc00315 	stw	r19,12(sp)
 813075c:	2027883a 	mov	r19,r4
 8130760:	81000017 	ldw	r4,0(r16)
 8130764:	dfc00415 	stw	ra,16(sp)
 8130768:	dc800215 	stw	r18,8(sp)
 813076c:	20800e17 	ldw	r2,56(r4)
 8130770:	dc400115 	stw	r17,4(sp)
 8130774:	1000021e 	bne	r2,zero,8130780 <__sfp+0x38>
 8130778:	813052c0 	call	813052c <__sinit.part.1>
 813077c:	81000017 	ldw	r4,0(r16)
 8130780:	2480b804 	addi	r18,r4,736
 8130784:	047fffc4 	movi	r17,-1
 8130788:	91000117 	ldw	r4,4(r18)
 813078c:	94000217 	ldw	r16,8(r18)
 8130790:	213fffc4 	addi	r4,r4,-1
 8130794:	20000a16 	blt	r4,zero,81307c0 <__sfp+0x78>
 8130798:	8080030f 	ldh	r2,12(r16)
 813079c:	10000c26 	beq	r2,zero,81307d0 <__sfp+0x88>
 81307a0:	80c01d04 	addi	r3,r16,116
 81307a4:	00000206 	br	81307b0 <__sfp+0x68>
 81307a8:	18bfe60f 	ldh	r2,-104(r3)
 81307ac:	10000826 	beq	r2,zero,81307d0 <__sfp+0x88>
 81307b0:	213fffc4 	addi	r4,r4,-1
 81307b4:	1c3ffd04 	addi	r16,r3,-12
 81307b8:	18c01a04 	addi	r3,r3,104
 81307bc:	247ffa1e 	bne	r4,r17,81307a8 <__alt_data_end+0xfc1307a8>
 81307c0:	90800017 	ldw	r2,0(r18)
 81307c4:	10001d26 	beq	r2,zero,813083c <__sfp+0xf4>
 81307c8:	1025883a 	mov	r18,r2
 81307cc:	003fee06 	br	8130788 <__alt_data_end+0xfc130788>
 81307d0:	00bfffc4 	movi	r2,-1
 81307d4:	8080038d 	sth	r2,14(r16)
 81307d8:	00800044 	movi	r2,1
 81307dc:	8080030d 	sth	r2,12(r16)
 81307e0:	80001915 	stw	zero,100(r16)
 81307e4:	80000015 	stw	zero,0(r16)
 81307e8:	80000215 	stw	zero,8(r16)
 81307ec:	80000115 	stw	zero,4(r16)
 81307f0:	80000415 	stw	zero,16(r16)
 81307f4:	80000515 	stw	zero,20(r16)
 81307f8:	80000615 	stw	zero,24(r16)
 81307fc:	01800204 	movi	r6,8
 8130800:	000b883a 	mov	r5,zero
 8130804:	81001704 	addi	r4,r16,92
 8130808:	81321780 	call	8132178 <memset>
 813080c:	8005883a 	mov	r2,r16
 8130810:	80000c15 	stw	zero,48(r16)
 8130814:	80000d15 	stw	zero,52(r16)
 8130818:	80001115 	stw	zero,68(r16)
 813081c:	80001215 	stw	zero,72(r16)
 8130820:	dfc00417 	ldw	ra,16(sp)
 8130824:	dcc00317 	ldw	r19,12(sp)
 8130828:	dc800217 	ldw	r18,8(sp)
 813082c:	dc400117 	ldw	r17,4(sp)
 8130830:	dc000017 	ldw	r16,0(sp)
 8130834:	dec00504 	addi	sp,sp,20
 8130838:	f800283a 	ret
 813083c:	01400104 	movi	r5,4
 8130840:	9809883a 	mov	r4,r19
 8130844:	81306d00 	call	81306d0 <__sfmoreglue>
 8130848:	90800015 	stw	r2,0(r18)
 813084c:	103fde1e 	bne	r2,zero,81307c8 <__alt_data_end+0xfc1307c8>
 8130850:	00800304 	movi	r2,12
 8130854:	98800015 	stw	r2,0(r19)
 8130858:	0005883a 	mov	r2,zero
 813085c:	003ff006 	br	8130820 <__alt_data_end+0xfc130820>

08130860 <_cleanup>:
 8130860:	00820534 	movhi	r2,2068
 8130864:	10b63b04 	addi	r2,r2,-10004
 8130868:	11000017 	ldw	r4,0(r2)
 813086c:	014204f4 	movhi	r5,2067
 8130870:	29550904 	addi	r5,r5,21540
 8130874:	81312881 	jmpi	8131288 <_fwalk_reent>

08130878 <__sinit>:
 8130878:	20800e17 	ldw	r2,56(r4)
 813087c:	10000126 	beq	r2,zero,8130884 <__sinit+0xc>
 8130880:	f800283a 	ret
 8130884:	813052c1 	jmpi	813052c <__sinit.part.1>

08130888 <__sfp_lock_acquire>:
 8130888:	f800283a 	ret

0813088c <__sfp_lock_release>:
 813088c:	f800283a 	ret

08130890 <__sinit_lock_acquire>:
 8130890:	f800283a 	ret

08130894 <__sinit_lock_release>:
 8130894:	f800283a 	ret

08130898 <__fp_lock_all>:
 8130898:	00820534 	movhi	r2,2068
 813089c:	10b63c04 	addi	r2,r2,-10000
 81308a0:	11000017 	ldw	r4,0(r2)
 81308a4:	014204f4 	movhi	r5,2067
 81308a8:	2941b204 	addi	r5,r5,1736
 81308ac:	81311c41 	jmpi	81311c4 <_fwalk>

081308b0 <__fp_unlock_all>:
 81308b0:	00820534 	movhi	r2,2068
 81308b4:	10b63c04 	addi	r2,r2,-10000
 81308b8:	11000017 	ldw	r4,0(r2)
 81308bc:	014204f4 	movhi	r5,2067
 81308c0:	29414604 	addi	r5,r5,1304
 81308c4:	81311c41 	jmpi	81311c4 <_fwalk>

081308c8 <_malloc_trim_r>:
 81308c8:	defffb04 	addi	sp,sp,-20
 81308cc:	dcc00315 	stw	r19,12(sp)
 81308d0:	04c20534 	movhi	r19,2068
 81308d4:	dc800215 	stw	r18,8(sp)
 81308d8:	dc400115 	stw	r17,4(sp)
 81308dc:	dc000015 	stw	r16,0(sp)
 81308e0:	dfc00415 	stw	ra,16(sp)
 81308e4:	2821883a 	mov	r16,r5
 81308e8:	9cf0b504 	addi	r19,r19,-15660
 81308ec:	2025883a 	mov	r18,r4
 81308f0:	81397940 	call	8139794 <__malloc_lock>
 81308f4:	98800217 	ldw	r2,8(r19)
 81308f8:	14400117 	ldw	r17,4(r2)
 81308fc:	00bfff04 	movi	r2,-4
 8130900:	88a2703a 	and	r17,r17,r2
 8130904:	8c21c83a 	sub	r16,r17,r16
 8130908:	8403fbc4 	addi	r16,r16,4079
 813090c:	8020d33a 	srli	r16,r16,12
 8130910:	0083ffc4 	movi	r2,4095
 8130914:	843fffc4 	addi	r16,r16,-1
 8130918:	8020933a 	slli	r16,r16,12
 813091c:	1400060e 	bge	r2,r16,8130938 <_malloc_trim_r+0x70>
 8130920:	000b883a 	mov	r5,zero
 8130924:	9009883a 	mov	r4,r18
 8130928:	81339300 	call	8133930 <_sbrk_r>
 813092c:	98c00217 	ldw	r3,8(r19)
 8130930:	1c47883a 	add	r3,r3,r17
 8130934:	10c00a26 	beq	r2,r3,8130960 <_malloc_trim_r+0x98>
 8130938:	9009883a 	mov	r4,r18
 813093c:	81397b80 	call	81397b8 <__malloc_unlock>
 8130940:	0005883a 	mov	r2,zero
 8130944:	dfc00417 	ldw	ra,16(sp)
 8130948:	dcc00317 	ldw	r19,12(sp)
 813094c:	dc800217 	ldw	r18,8(sp)
 8130950:	dc400117 	ldw	r17,4(sp)
 8130954:	dc000017 	ldw	r16,0(sp)
 8130958:	dec00504 	addi	sp,sp,20
 813095c:	f800283a 	ret
 8130960:	040bc83a 	sub	r5,zero,r16
 8130964:	9009883a 	mov	r4,r18
 8130968:	81339300 	call	8133930 <_sbrk_r>
 813096c:	00ffffc4 	movi	r3,-1
 8130970:	10c00d26 	beq	r2,r3,81309a8 <_malloc_trim_r+0xe0>
 8130974:	00c20534 	movhi	r3,2068
 8130978:	18fd1604 	addi	r3,r3,-2984
 813097c:	18800017 	ldw	r2,0(r3)
 8130980:	99000217 	ldw	r4,8(r19)
 8130984:	8c23c83a 	sub	r17,r17,r16
 8130988:	8c400054 	ori	r17,r17,1
 813098c:	1421c83a 	sub	r16,r2,r16
 8130990:	24400115 	stw	r17,4(r4)
 8130994:	9009883a 	mov	r4,r18
 8130998:	1c000015 	stw	r16,0(r3)
 813099c:	81397b80 	call	81397b8 <__malloc_unlock>
 81309a0:	00800044 	movi	r2,1
 81309a4:	003fe706 	br	8130944 <__alt_data_end+0xfc130944>
 81309a8:	000b883a 	mov	r5,zero
 81309ac:	9009883a 	mov	r4,r18
 81309b0:	81339300 	call	8133930 <_sbrk_r>
 81309b4:	99000217 	ldw	r4,8(r19)
 81309b8:	014003c4 	movi	r5,15
 81309bc:	1107c83a 	sub	r3,r2,r4
 81309c0:	28ffdd0e 	bge	r5,r3,8130938 <__alt_data_end+0xfc130938>
 81309c4:	01420534 	movhi	r5,2068
 81309c8:	29763e04 	addi	r5,r5,-9992
 81309cc:	29400017 	ldw	r5,0(r5)
 81309d0:	18c00054 	ori	r3,r3,1
 81309d4:	20c00115 	stw	r3,4(r4)
 81309d8:	00c20534 	movhi	r3,2068
 81309dc:	1145c83a 	sub	r2,r2,r5
 81309e0:	18fd1604 	addi	r3,r3,-2984
 81309e4:	18800015 	stw	r2,0(r3)
 81309e8:	003fd306 	br	8130938 <__alt_data_end+0xfc130938>

081309ec <_free_r>:
 81309ec:	28004126 	beq	r5,zero,8130af4 <_free_r+0x108>
 81309f0:	defffd04 	addi	sp,sp,-12
 81309f4:	dc400115 	stw	r17,4(sp)
 81309f8:	dc000015 	stw	r16,0(sp)
 81309fc:	2023883a 	mov	r17,r4
 8130a00:	2821883a 	mov	r16,r5
 8130a04:	dfc00215 	stw	ra,8(sp)
 8130a08:	81397940 	call	8139794 <__malloc_lock>
 8130a0c:	81ffff17 	ldw	r7,-4(r16)
 8130a10:	00bfff84 	movi	r2,-2
 8130a14:	01020534 	movhi	r4,2068
 8130a18:	81bffe04 	addi	r6,r16,-8
 8130a1c:	3884703a 	and	r2,r7,r2
 8130a20:	2130b504 	addi	r4,r4,-15660
 8130a24:	308b883a 	add	r5,r6,r2
 8130a28:	2a400117 	ldw	r9,4(r5)
 8130a2c:	22000217 	ldw	r8,8(r4)
 8130a30:	00ffff04 	movi	r3,-4
 8130a34:	48c6703a 	and	r3,r9,r3
 8130a38:	2a005726 	beq	r5,r8,8130b98 <_free_r+0x1ac>
 8130a3c:	28c00115 	stw	r3,4(r5)
 8130a40:	39c0004c 	andi	r7,r7,1
 8130a44:	3800091e 	bne	r7,zero,8130a6c <_free_r+0x80>
 8130a48:	823ffe17 	ldw	r8,-8(r16)
 8130a4c:	22400204 	addi	r9,r4,8
 8130a50:	320dc83a 	sub	r6,r6,r8
 8130a54:	31c00217 	ldw	r7,8(r6)
 8130a58:	1205883a 	add	r2,r2,r8
 8130a5c:	3a406526 	beq	r7,r9,8130bf4 <_free_r+0x208>
 8130a60:	32000317 	ldw	r8,12(r6)
 8130a64:	3a000315 	stw	r8,12(r7)
 8130a68:	41c00215 	stw	r7,8(r8)
 8130a6c:	28cf883a 	add	r7,r5,r3
 8130a70:	39c00117 	ldw	r7,4(r7)
 8130a74:	39c0004c 	andi	r7,r7,1
 8130a78:	38003a26 	beq	r7,zero,8130b64 <_free_r+0x178>
 8130a7c:	10c00054 	ori	r3,r2,1
 8130a80:	30c00115 	stw	r3,4(r6)
 8130a84:	3087883a 	add	r3,r6,r2
 8130a88:	18800015 	stw	r2,0(r3)
 8130a8c:	00c07fc4 	movi	r3,511
 8130a90:	18801936 	bltu	r3,r2,8130af8 <_free_r+0x10c>
 8130a94:	1004d0fa 	srli	r2,r2,3
 8130a98:	01c00044 	movi	r7,1
 8130a9c:	21400117 	ldw	r5,4(r4)
 8130aa0:	10c00044 	addi	r3,r2,1
 8130aa4:	18c7883a 	add	r3,r3,r3
 8130aa8:	1005d0ba 	srai	r2,r2,2
 8130aac:	18c7883a 	add	r3,r3,r3
 8130ab0:	18c7883a 	add	r3,r3,r3
 8130ab4:	1907883a 	add	r3,r3,r4
 8130ab8:	3884983a 	sll	r2,r7,r2
 8130abc:	19c00017 	ldw	r7,0(r3)
 8130ac0:	1a3ffe04 	addi	r8,r3,-8
 8130ac4:	1144b03a 	or	r2,r2,r5
 8130ac8:	32000315 	stw	r8,12(r6)
 8130acc:	31c00215 	stw	r7,8(r6)
 8130ad0:	20800115 	stw	r2,4(r4)
 8130ad4:	19800015 	stw	r6,0(r3)
 8130ad8:	39800315 	stw	r6,12(r7)
 8130adc:	8809883a 	mov	r4,r17
 8130ae0:	dfc00217 	ldw	ra,8(sp)
 8130ae4:	dc400117 	ldw	r17,4(sp)
 8130ae8:	dc000017 	ldw	r16,0(sp)
 8130aec:	dec00304 	addi	sp,sp,12
 8130af0:	81397b81 	jmpi	81397b8 <__malloc_unlock>
 8130af4:	f800283a 	ret
 8130af8:	100ad27a 	srli	r5,r2,9
 8130afc:	00c00104 	movi	r3,4
 8130b00:	19404a36 	bltu	r3,r5,8130c2c <_free_r+0x240>
 8130b04:	100ad1ba 	srli	r5,r2,6
 8130b08:	28c00e44 	addi	r3,r5,57
 8130b0c:	18c7883a 	add	r3,r3,r3
 8130b10:	29400e04 	addi	r5,r5,56
 8130b14:	18c7883a 	add	r3,r3,r3
 8130b18:	18c7883a 	add	r3,r3,r3
 8130b1c:	1909883a 	add	r4,r3,r4
 8130b20:	20c00017 	ldw	r3,0(r4)
 8130b24:	01c20534 	movhi	r7,2068
 8130b28:	213ffe04 	addi	r4,r4,-8
 8130b2c:	39f0b504 	addi	r7,r7,-15660
 8130b30:	20c04426 	beq	r4,r3,8130c44 <_free_r+0x258>
 8130b34:	01ffff04 	movi	r7,-4
 8130b38:	19400117 	ldw	r5,4(r3)
 8130b3c:	29ca703a 	and	r5,r5,r7
 8130b40:	1140022e 	bgeu	r2,r5,8130b4c <_free_r+0x160>
 8130b44:	18c00217 	ldw	r3,8(r3)
 8130b48:	20fffb1e 	bne	r4,r3,8130b38 <__alt_data_end+0xfc130b38>
 8130b4c:	19000317 	ldw	r4,12(r3)
 8130b50:	31000315 	stw	r4,12(r6)
 8130b54:	30c00215 	stw	r3,8(r6)
 8130b58:	21800215 	stw	r6,8(r4)
 8130b5c:	19800315 	stw	r6,12(r3)
 8130b60:	003fde06 	br	8130adc <__alt_data_end+0xfc130adc>
 8130b64:	29c00217 	ldw	r7,8(r5)
 8130b68:	10c5883a 	add	r2,r2,r3
 8130b6c:	00c20534 	movhi	r3,2068
 8130b70:	18f0b704 	addi	r3,r3,-15652
 8130b74:	38c03b26 	beq	r7,r3,8130c64 <_free_r+0x278>
 8130b78:	2a000317 	ldw	r8,12(r5)
 8130b7c:	11400054 	ori	r5,r2,1
 8130b80:	3087883a 	add	r3,r6,r2
 8130b84:	3a000315 	stw	r8,12(r7)
 8130b88:	41c00215 	stw	r7,8(r8)
 8130b8c:	31400115 	stw	r5,4(r6)
 8130b90:	18800015 	stw	r2,0(r3)
 8130b94:	003fbd06 	br	8130a8c <__alt_data_end+0xfc130a8c>
 8130b98:	39c0004c 	andi	r7,r7,1
 8130b9c:	10c5883a 	add	r2,r2,r3
 8130ba0:	3800071e 	bne	r7,zero,8130bc0 <_free_r+0x1d4>
 8130ba4:	81fffe17 	ldw	r7,-8(r16)
 8130ba8:	31cdc83a 	sub	r6,r6,r7
 8130bac:	30c00317 	ldw	r3,12(r6)
 8130bb0:	31400217 	ldw	r5,8(r6)
 8130bb4:	11c5883a 	add	r2,r2,r7
 8130bb8:	28c00315 	stw	r3,12(r5)
 8130bbc:	19400215 	stw	r5,8(r3)
 8130bc0:	10c00054 	ori	r3,r2,1
 8130bc4:	30c00115 	stw	r3,4(r6)
 8130bc8:	00c20534 	movhi	r3,2068
 8130bcc:	18f63f04 	addi	r3,r3,-9988
 8130bd0:	18c00017 	ldw	r3,0(r3)
 8130bd4:	21800215 	stw	r6,8(r4)
 8130bd8:	10ffc036 	bltu	r2,r3,8130adc <__alt_data_end+0xfc130adc>
 8130bdc:	00820534 	movhi	r2,2068
 8130be0:	10bd0d04 	addi	r2,r2,-3020
 8130be4:	11400017 	ldw	r5,0(r2)
 8130be8:	8809883a 	mov	r4,r17
 8130bec:	81308c80 	call	81308c8 <_malloc_trim_r>
 8130bf0:	003fba06 	br	8130adc <__alt_data_end+0xfc130adc>
 8130bf4:	28c9883a 	add	r4,r5,r3
 8130bf8:	21000117 	ldw	r4,4(r4)
 8130bfc:	2100004c 	andi	r4,r4,1
 8130c00:	2000391e 	bne	r4,zero,8130ce8 <_free_r+0x2fc>
 8130c04:	29c00217 	ldw	r7,8(r5)
 8130c08:	29000317 	ldw	r4,12(r5)
 8130c0c:	1885883a 	add	r2,r3,r2
 8130c10:	10c00054 	ori	r3,r2,1
 8130c14:	39000315 	stw	r4,12(r7)
 8130c18:	21c00215 	stw	r7,8(r4)
 8130c1c:	30c00115 	stw	r3,4(r6)
 8130c20:	308d883a 	add	r6,r6,r2
 8130c24:	30800015 	stw	r2,0(r6)
 8130c28:	003fac06 	br	8130adc <__alt_data_end+0xfc130adc>
 8130c2c:	00c00504 	movi	r3,20
 8130c30:	19401536 	bltu	r3,r5,8130c88 <_free_r+0x29c>
 8130c34:	28c01704 	addi	r3,r5,92
 8130c38:	18c7883a 	add	r3,r3,r3
 8130c3c:	294016c4 	addi	r5,r5,91
 8130c40:	003fb406 	br	8130b14 <__alt_data_end+0xfc130b14>
 8130c44:	280bd0ba 	srai	r5,r5,2
 8130c48:	00c00044 	movi	r3,1
 8130c4c:	38800117 	ldw	r2,4(r7)
 8130c50:	194a983a 	sll	r5,r3,r5
 8130c54:	2007883a 	mov	r3,r4
 8130c58:	2884b03a 	or	r2,r5,r2
 8130c5c:	38800115 	stw	r2,4(r7)
 8130c60:	003fbb06 	br	8130b50 <__alt_data_end+0xfc130b50>
 8130c64:	21800515 	stw	r6,20(r4)
 8130c68:	21800415 	stw	r6,16(r4)
 8130c6c:	10c00054 	ori	r3,r2,1
 8130c70:	31c00315 	stw	r7,12(r6)
 8130c74:	31c00215 	stw	r7,8(r6)
 8130c78:	30c00115 	stw	r3,4(r6)
 8130c7c:	308d883a 	add	r6,r6,r2
 8130c80:	30800015 	stw	r2,0(r6)
 8130c84:	003f9506 	br	8130adc <__alt_data_end+0xfc130adc>
 8130c88:	00c01504 	movi	r3,84
 8130c8c:	19400536 	bltu	r3,r5,8130ca4 <_free_r+0x2b8>
 8130c90:	100ad33a 	srli	r5,r2,12
 8130c94:	28c01bc4 	addi	r3,r5,111
 8130c98:	18c7883a 	add	r3,r3,r3
 8130c9c:	29401b84 	addi	r5,r5,110
 8130ca0:	003f9c06 	br	8130b14 <__alt_data_end+0xfc130b14>
 8130ca4:	00c05504 	movi	r3,340
 8130ca8:	19400536 	bltu	r3,r5,8130cc0 <_free_r+0x2d4>
 8130cac:	100ad3fa 	srli	r5,r2,15
 8130cb0:	28c01e04 	addi	r3,r5,120
 8130cb4:	18c7883a 	add	r3,r3,r3
 8130cb8:	29401dc4 	addi	r5,r5,119
 8130cbc:	003f9506 	br	8130b14 <__alt_data_end+0xfc130b14>
 8130cc0:	00c15504 	movi	r3,1364
 8130cc4:	19400536 	bltu	r3,r5,8130cdc <_free_r+0x2f0>
 8130cc8:	100ad4ba 	srli	r5,r2,18
 8130ccc:	28c01f44 	addi	r3,r5,125
 8130cd0:	18c7883a 	add	r3,r3,r3
 8130cd4:	29401f04 	addi	r5,r5,124
 8130cd8:	003f8e06 	br	8130b14 <__alt_data_end+0xfc130b14>
 8130cdc:	00c03f84 	movi	r3,254
 8130ce0:	01401f84 	movi	r5,126
 8130ce4:	003f8b06 	br	8130b14 <__alt_data_end+0xfc130b14>
 8130ce8:	10c00054 	ori	r3,r2,1
 8130cec:	30c00115 	stw	r3,4(r6)
 8130cf0:	308d883a 	add	r6,r6,r2
 8130cf4:	30800015 	stw	r2,0(r6)
 8130cf8:	003f7806 	br	8130adc <__alt_data_end+0xfc130adc>

08130cfc <__sfvwrite_r>:
 8130cfc:	30800217 	ldw	r2,8(r6)
 8130d00:	10006726 	beq	r2,zero,8130ea0 <__sfvwrite_r+0x1a4>
 8130d04:	28c0030b 	ldhu	r3,12(r5)
 8130d08:	defff404 	addi	sp,sp,-48
 8130d0c:	dd400715 	stw	r21,28(sp)
 8130d10:	dd000615 	stw	r20,24(sp)
 8130d14:	dc000215 	stw	r16,8(sp)
 8130d18:	dfc00b15 	stw	ra,44(sp)
 8130d1c:	df000a15 	stw	fp,40(sp)
 8130d20:	ddc00915 	stw	r23,36(sp)
 8130d24:	dd800815 	stw	r22,32(sp)
 8130d28:	dcc00515 	stw	r19,20(sp)
 8130d2c:	dc800415 	stw	r18,16(sp)
 8130d30:	dc400315 	stw	r17,12(sp)
 8130d34:	1880020c 	andi	r2,r3,8
 8130d38:	2821883a 	mov	r16,r5
 8130d3c:	202b883a 	mov	r21,r4
 8130d40:	3029883a 	mov	r20,r6
 8130d44:	10002726 	beq	r2,zero,8130de4 <__sfvwrite_r+0xe8>
 8130d48:	28800417 	ldw	r2,16(r5)
 8130d4c:	10002526 	beq	r2,zero,8130de4 <__sfvwrite_r+0xe8>
 8130d50:	1880008c 	andi	r2,r3,2
 8130d54:	a4400017 	ldw	r17,0(r20)
 8130d58:	10002a26 	beq	r2,zero,8130e04 <__sfvwrite_r+0x108>
 8130d5c:	05a00034 	movhi	r22,32768
 8130d60:	0027883a 	mov	r19,zero
 8130d64:	0025883a 	mov	r18,zero
 8130d68:	b5bf0004 	addi	r22,r22,-1024
 8130d6c:	980d883a 	mov	r6,r19
 8130d70:	a809883a 	mov	r4,r21
 8130d74:	90004626 	beq	r18,zero,8130e90 <__sfvwrite_r+0x194>
 8130d78:	900f883a 	mov	r7,r18
 8130d7c:	b480022e 	bgeu	r22,r18,8130d88 <__sfvwrite_r+0x8c>
 8130d80:	01e00034 	movhi	r7,32768
 8130d84:	39ff0004 	addi	r7,r7,-1024
 8130d88:	80800917 	ldw	r2,36(r16)
 8130d8c:	81400717 	ldw	r5,28(r16)
 8130d90:	103ee83a 	callr	r2
 8130d94:	00805a0e 	bge	zero,r2,8130f00 <__sfvwrite_r+0x204>
 8130d98:	a0c00217 	ldw	r3,8(r20)
 8130d9c:	98a7883a 	add	r19,r19,r2
 8130da0:	90a5c83a 	sub	r18,r18,r2
 8130da4:	1885c83a 	sub	r2,r3,r2
 8130da8:	a0800215 	stw	r2,8(r20)
 8130dac:	103fef1e 	bne	r2,zero,8130d6c <__alt_data_end+0xfc130d6c>
 8130db0:	0005883a 	mov	r2,zero
 8130db4:	dfc00b17 	ldw	ra,44(sp)
 8130db8:	df000a17 	ldw	fp,40(sp)
 8130dbc:	ddc00917 	ldw	r23,36(sp)
 8130dc0:	dd800817 	ldw	r22,32(sp)
 8130dc4:	dd400717 	ldw	r21,28(sp)
 8130dc8:	dd000617 	ldw	r20,24(sp)
 8130dcc:	dcc00517 	ldw	r19,20(sp)
 8130dd0:	dc800417 	ldw	r18,16(sp)
 8130dd4:	dc400317 	ldw	r17,12(sp)
 8130dd8:	dc000217 	ldw	r16,8(sp)
 8130ddc:	dec00c04 	addi	sp,sp,48
 8130de0:	f800283a 	ret
 8130de4:	800b883a 	mov	r5,r16
 8130de8:	a809883a 	mov	r4,r21
 8130dec:	812e86c0 	call	812e86c <__swsetup_r>
 8130df0:	1000ee1e 	bne	r2,zero,81311ac <__sfvwrite_r+0x4b0>
 8130df4:	80c0030b 	ldhu	r3,12(r16)
 8130df8:	a4400017 	ldw	r17,0(r20)
 8130dfc:	1880008c 	andi	r2,r3,2
 8130e00:	103fd61e 	bne	r2,zero,8130d5c <__alt_data_end+0xfc130d5c>
 8130e04:	1880004c 	andi	r2,r3,1
 8130e08:	1000421e 	bne	r2,zero,8130f14 <__sfvwrite_r+0x218>
 8130e0c:	0039883a 	mov	fp,zero
 8130e10:	0025883a 	mov	r18,zero
 8130e14:	90001a26 	beq	r18,zero,8130e80 <__sfvwrite_r+0x184>
 8130e18:	1880800c 	andi	r2,r3,512
 8130e1c:	84c00217 	ldw	r19,8(r16)
 8130e20:	10002126 	beq	r2,zero,8130ea8 <__sfvwrite_r+0x1ac>
 8130e24:	982f883a 	mov	r23,r19
 8130e28:	94c09636 	bltu	r18,r19,8131084 <__sfvwrite_r+0x388>
 8130e2c:	1881200c 	andi	r2,r3,1152
 8130e30:	1000a11e 	bne	r2,zero,81310b8 <__sfvwrite_r+0x3bc>
 8130e34:	81000017 	ldw	r4,0(r16)
 8130e38:	b80d883a 	mov	r6,r23
 8130e3c:	e00b883a 	mov	r5,fp
 8130e40:	813201c0 	call	813201c <memmove>
 8130e44:	80c00217 	ldw	r3,8(r16)
 8130e48:	81000017 	ldw	r4,0(r16)
 8130e4c:	9005883a 	mov	r2,r18
 8130e50:	1ce7c83a 	sub	r19,r3,r19
 8130e54:	25cf883a 	add	r7,r4,r23
 8130e58:	84c00215 	stw	r19,8(r16)
 8130e5c:	81c00015 	stw	r7,0(r16)
 8130e60:	a0c00217 	ldw	r3,8(r20)
 8130e64:	e0b9883a 	add	fp,fp,r2
 8130e68:	90a5c83a 	sub	r18,r18,r2
 8130e6c:	18a7c83a 	sub	r19,r3,r2
 8130e70:	a4c00215 	stw	r19,8(r20)
 8130e74:	983fce26 	beq	r19,zero,8130db0 <__alt_data_end+0xfc130db0>
 8130e78:	80c0030b 	ldhu	r3,12(r16)
 8130e7c:	903fe61e 	bne	r18,zero,8130e18 <__alt_data_end+0xfc130e18>
 8130e80:	8f000017 	ldw	fp,0(r17)
 8130e84:	8c800117 	ldw	r18,4(r17)
 8130e88:	8c400204 	addi	r17,r17,8
 8130e8c:	003fe106 	br	8130e14 <__alt_data_end+0xfc130e14>
 8130e90:	8cc00017 	ldw	r19,0(r17)
 8130e94:	8c800117 	ldw	r18,4(r17)
 8130e98:	8c400204 	addi	r17,r17,8
 8130e9c:	003fb306 	br	8130d6c <__alt_data_end+0xfc130d6c>
 8130ea0:	0005883a 	mov	r2,zero
 8130ea4:	f800283a 	ret
 8130ea8:	81000017 	ldw	r4,0(r16)
 8130eac:	80800417 	ldw	r2,16(r16)
 8130eb0:	11005a36 	bltu	r2,r4,813101c <__sfvwrite_r+0x320>
 8130eb4:	85c00517 	ldw	r23,20(r16)
 8130eb8:	95c05836 	bltu	r18,r23,813101c <__sfvwrite_r+0x320>
 8130ebc:	00a00034 	movhi	r2,32768
 8130ec0:	10bfffc4 	addi	r2,r2,-1
 8130ec4:	9009883a 	mov	r4,r18
 8130ec8:	1480012e 	bgeu	r2,r18,8130ed0 <__sfvwrite_r+0x1d4>
 8130ecc:	1009883a 	mov	r4,r2
 8130ed0:	b80b883a 	mov	r5,r23
 8130ed4:	81367a00 	call	81367a0 <__divsi3>
 8130ed8:	b80b883a 	mov	r5,r23
 8130edc:	1009883a 	mov	r4,r2
 8130ee0:	812c2b80 	call	812c2b8 <__mulsi3>
 8130ee4:	81400717 	ldw	r5,28(r16)
 8130ee8:	80c00917 	ldw	r3,36(r16)
 8130eec:	100f883a 	mov	r7,r2
 8130ef0:	e00d883a 	mov	r6,fp
 8130ef4:	a809883a 	mov	r4,r21
 8130ef8:	183ee83a 	callr	r3
 8130efc:	00bfd816 	blt	zero,r2,8130e60 <__alt_data_end+0xfc130e60>
 8130f00:	8080030b 	ldhu	r2,12(r16)
 8130f04:	10801014 	ori	r2,r2,64
 8130f08:	8080030d 	sth	r2,12(r16)
 8130f0c:	00bfffc4 	movi	r2,-1
 8130f10:	003fa806 	br	8130db4 <__alt_data_end+0xfc130db4>
 8130f14:	0027883a 	mov	r19,zero
 8130f18:	0011883a 	mov	r8,zero
 8130f1c:	0039883a 	mov	fp,zero
 8130f20:	0025883a 	mov	r18,zero
 8130f24:	90001f26 	beq	r18,zero,8130fa4 <__sfvwrite_r+0x2a8>
 8130f28:	40005a26 	beq	r8,zero,8131094 <__sfvwrite_r+0x398>
 8130f2c:	982d883a 	mov	r22,r19
 8130f30:	94c0012e 	bgeu	r18,r19,8130f38 <__sfvwrite_r+0x23c>
 8130f34:	902d883a 	mov	r22,r18
 8130f38:	81000017 	ldw	r4,0(r16)
 8130f3c:	80800417 	ldw	r2,16(r16)
 8130f40:	b02f883a 	mov	r23,r22
 8130f44:	81c00517 	ldw	r7,20(r16)
 8130f48:	1100032e 	bgeu	r2,r4,8130f58 <__sfvwrite_r+0x25c>
 8130f4c:	80c00217 	ldw	r3,8(r16)
 8130f50:	38c7883a 	add	r3,r7,r3
 8130f54:	1d801816 	blt	r3,r22,8130fb8 <__sfvwrite_r+0x2bc>
 8130f58:	b1c03e16 	blt	r22,r7,8131054 <__sfvwrite_r+0x358>
 8130f5c:	80800917 	ldw	r2,36(r16)
 8130f60:	81400717 	ldw	r5,28(r16)
 8130f64:	e00d883a 	mov	r6,fp
 8130f68:	da000115 	stw	r8,4(sp)
 8130f6c:	a809883a 	mov	r4,r21
 8130f70:	103ee83a 	callr	r2
 8130f74:	102f883a 	mov	r23,r2
 8130f78:	da000117 	ldw	r8,4(sp)
 8130f7c:	00bfe00e 	bge	zero,r2,8130f00 <__alt_data_end+0xfc130f00>
 8130f80:	9de7c83a 	sub	r19,r19,r23
 8130f84:	98001f26 	beq	r19,zero,8131004 <__sfvwrite_r+0x308>
 8130f88:	a0800217 	ldw	r2,8(r20)
 8130f8c:	e5f9883a 	add	fp,fp,r23
 8130f90:	95e5c83a 	sub	r18,r18,r23
 8130f94:	15efc83a 	sub	r23,r2,r23
 8130f98:	a5c00215 	stw	r23,8(r20)
 8130f9c:	b83f8426 	beq	r23,zero,8130db0 <__alt_data_end+0xfc130db0>
 8130fa0:	903fe11e 	bne	r18,zero,8130f28 <__alt_data_end+0xfc130f28>
 8130fa4:	8f000017 	ldw	fp,0(r17)
 8130fa8:	8c800117 	ldw	r18,4(r17)
 8130fac:	0011883a 	mov	r8,zero
 8130fb0:	8c400204 	addi	r17,r17,8
 8130fb4:	003fdb06 	br	8130f24 <__alt_data_end+0xfc130f24>
 8130fb8:	180d883a 	mov	r6,r3
 8130fbc:	e00b883a 	mov	r5,fp
 8130fc0:	da000115 	stw	r8,4(sp)
 8130fc4:	d8c00015 	stw	r3,0(sp)
 8130fc8:	813201c0 	call	813201c <memmove>
 8130fcc:	d8c00017 	ldw	r3,0(sp)
 8130fd0:	80800017 	ldw	r2,0(r16)
 8130fd4:	800b883a 	mov	r5,r16
 8130fd8:	a809883a 	mov	r4,r21
 8130fdc:	10c5883a 	add	r2,r2,r3
 8130fe0:	80800015 	stw	r2,0(r16)
 8130fe4:	d8c00015 	stw	r3,0(sp)
 8130fe8:	813048c0 	call	813048c <_fflush_r>
 8130fec:	d8c00017 	ldw	r3,0(sp)
 8130ff0:	da000117 	ldw	r8,4(sp)
 8130ff4:	103fc21e 	bne	r2,zero,8130f00 <__alt_data_end+0xfc130f00>
 8130ff8:	182f883a 	mov	r23,r3
 8130ffc:	9de7c83a 	sub	r19,r19,r23
 8131000:	983fe11e 	bne	r19,zero,8130f88 <__alt_data_end+0xfc130f88>
 8131004:	800b883a 	mov	r5,r16
 8131008:	a809883a 	mov	r4,r21
 813100c:	813048c0 	call	813048c <_fflush_r>
 8131010:	103fbb1e 	bne	r2,zero,8130f00 <__alt_data_end+0xfc130f00>
 8131014:	0011883a 	mov	r8,zero
 8131018:	003fdb06 	br	8130f88 <__alt_data_end+0xfc130f88>
 813101c:	94c0012e 	bgeu	r18,r19,8131024 <__sfvwrite_r+0x328>
 8131020:	9027883a 	mov	r19,r18
 8131024:	980d883a 	mov	r6,r19
 8131028:	e00b883a 	mov	r5,fp
 813102c:	813201c0 	call	813201c <memmove>
 8131030:	80800217 	ldw	r2,8(r16)
 8131034:	80c00017 	ldw	r3,0(r16)
 8131038:	14c5c83a 	sub	r2,r2,r19
 813103c:	1cc7883a 	add	r3,r3,r19
 8131040:	80800215 	stw	r2,8(r16)
 8131044:	80c00015 	stw	r3,0(r16)
 8131048:	10004326 	beq	r2,zero,8131158 <__sfvwrite_r+0x45c>
 813104c:	9805883a 	mov	r2,r19
 8131050:	003f8306 	br	8130e60 <__alt_data_end+0xfc130e60>
 8131054:	b00d883a 	mov	r6,r22
 8131058:	e00b883a 	mov	r5,fp
 813105c:	da000115 	stw	r8,4(sp)
 8131060:	813201c0 	call	813201c <memmove>
 8131064:	80800217 	ldw	r2,8(r16)
 8131068:	80c00017 	ldw	r3,0(r16)
 813106c:	da000117 	ldw	r8,4(sp)
 8131070:	1585c83a 	sub	r2,r2,r22
 8131074:	1dad883a 	add	r22,r3,r22
 8131078:	80800215 	stw	r2,8(r16)
 813107c:	85800015 	stw	r22,0(r16)
 8131080:	003fbf06 	br	8130f80 <__alt_data_end+0xfc130f80>
 8131084:	81000017 	ldw	r4,0(r16)
 8131088:	9027883a 	mov	r19,r18
 813108c:	902f883a 	mov	r23,r18
 8131090:	003f6906 	br	8130e38 <__alt_data_end+0xfc130e38>
 8131094:	900d883a 	mov	r6,r18
 8131098:	01400284 	movi	r5,10
 813109c:	e009883a 	mov	r4,fp
 81310a0:	8131df00 	call	8131df0 <memchr>
 81310a4:	10003e26 	beq	r2,zero,81311a0 <__sfvwrite_r+0x4a4>
 81310a8:	10800044 	addi	r2,r2,1
 81310ac:	1727c83a 	sub	r19,r2,fp
 81310b0:	02000044 	movi	r8,1
 81310b4:	003f9d06 	br	8130f2c <__alt_data_end+0xfc130f2c>
 81310b8:	80800517 	ldw	r2,20(r16)
 81310bc:	81400417 	ldw	r5,16(r16)
 81310c0:	81c00017 	ldw	r7,0(r16)
 81310c4:	10a7883a 	add	r19,r2,r2
 81310c8:	9885883a 	add	r2,r19,r2
 81310cc:	1026d7fa 	srli	r19,r2,31
 81310d0:	396dc83a 	sub	r22,r7,r5
 81310d4:	b1000044 	addi	r4,r22,1
 81310d8:	9885883a 	add	r2,r19,r2
 81310dc:	1027d07a 	srai	r19,r2,1
 81310e0:	2485883a 	add	r2,r4,r18
 81310e4:	980d883a 	mov	r6,r19
 81310e8:	9880022e 	bgeu	r19,r2,81310f4 <__sfvwrite_r+0x3f8>
 81310ec:	1027883a 	mov	r19,r2
 81310f0:	100d883a 	mov	r6,r2
 81310f4:	18c1000c 	andi	r3,r3,1024
 81310f8:	18001c26 	beq	r3,zero,813116c <__sfvwrite_r+0x470>
 81310fc:	300b883a 	mov	r5,r6
 8131100:	a809883a 	mov	r4,r21
 8131104:	81315e40 	call	81315e4 <_malloc_r>
 8131108:	102f883a 	mov	r23,r2
 813110c:	10002926 	beq	r2,zero,81311b4 <__sfvwrite_r+0x4b8>
 8131110:	81400417 	ldw	r5,16(r16)
 8131114:	b00d883a 	mov	r6,r22
 8131118:	1009883a 	mov	r4,r2
 813111c:	8131ed40 	call	8131ed4 <memcpy>
 8131120:	8080030b 	ldhu	r2,12(r16)
 8131124:	00fedfc4 	movi	r3,-1153
 8131128:	10c4703a 	and	r2,r2,r3
 813112c:	10802014 	ori	r2,r2,128
 8131130:	8080030d 	sth	r2,12(r16)
 8131134:	bd89883a 	add	r4,r23,r22
 8131138:	9d8fc83a 	sub	r7,r19,r22
 813113c:	85c00415 	stw	r23,16(r16)
 8131140:	84c00515 	stw	r19,20(r16)
 8131144:	81000015 	stw	r4,0(r16)
 8131148:	9027883a 	mov	r19,r18
 813114c:	81c00215 	stw	r7,8(r16)
 8131150:	902f883a 	mov	r23,r18
 8131154:	003f3806 	br	8130e38 <__alt_data_end+0xfc130e38>
 8131158:	800b883a 	mov	r5,r16
 813115c:	a809883a 	mov	r4,r21
 8131160:	813048c0 	call	813048c <_fflush_r>
 8131164:	103fb926 	beq	r2,zero,813104c <__alt_data_end+0xfc13104c>
 8131168:	003f6506 	br	8130f00 <__alt_data_end+0xfc130f00>
 813116c:	a809883a 	mov	r4,r21
 8131170:	81333580 	call	8133358 <_realloc_r>
 8131174:	102f883a 	mov	r23,r2
 8131178:	103fee1e 	bne	r2,zero,8131134 <__alt_data_end+0xfc131134>
 813117c:	81400417 	ldw	r5,16(r16)
 8131180:	a809883a 	mov	r4,r21
 8131184:	81309ec0 	call	81309ec <_free_r>
 8131188:	8080030b 	ldhu	r2,12(r16)
 813118c:	00ffdfc4 	movi	r3,-129
 8131190:	1884703a 	and	r2,r3,r2
 8131194:	00c00304 	movi	r3,12
 8131198:	a8c00015 	stw	r3,0(r21)
 813119c:	003f5906 	br	8130f04 <__alt_data_end+0xfc130f04>
 81311a0:	94c00044 	addi	r19,r18,1
 81311a4:	02000044 	movi	r8,1
 81311a8:	003f6006 	br	8130f2c <__alt_data_end+0xfc130f2c>
 81311ac:	00bfffc4 	movi	r2,-1
 81311b0:	003f0006 	br	8130db4 <__alt_data_end+0xfc130db4>
 81311b4:	00800304 	movi	r2,12
 81311b8:	a8800015 	stw	r2,0(r21)
 81311bc:	8080030b 	ldhu	r2,12(r16)
 81311c0:	003f5006 	br	8130f04 <__alt_data_end+0xfc130f04>

081311c4 <_fwalk>:
 81311c4:	defff704 	addi	sp,sp,-36
 81311c8:	dd000415 	stw	r20,16(sp)
 81311cc:	dfc00815 	stw	ra,32(sp)
 81311d0:	ddc00715 	stw	r23,28(sp)
 81311d4:	dd800615 	stw	r22,24(sp)
 81311d8:	dd400515 	stw	r21,20(sp)
 81311dc:	dcc00315 	stw	r19,12(sp)
 81311e0:	dc800215 	stw	r18,8(sp)
 81311e4:	dc400115 	stw	r17,4(sp)
 81311e8:	dc000015 	stw	r16,0(sp)
 81311ec:	2500b804 	addi	r20,r4,736
 81311f0:	a0002326 	beq	r20,zero,8131280 <_fwalk+0xbc>
 81311f4:	282b883a 	mov	r21,r5
 81311f8:	002f883a 	mov	r23,zero
 81311fc:	05800044 	movi	r22,1
 8131200:	04ffffc4 	movi	r19,-1
 8131204:	a4400117 	ldw	r17,4(r20)
 8131208:	a4800217 	ldw	r18,8(r20)
 813120c:	8c7fffc4 	addi	r17,r17,-1
 8131210:	88000d16 	blt	r17,zero,8131248 <_fwalk+0x84>
 8131214:	94000304 	addi	r16,r18,12
 8131218:	94800384 	addi	r18,r18,14
 813121c:	8080000b 	ldhu	r2,0(r16)
 8131220:	8c7fffc4 	addi	r17,r17,-1
 8131224:	813ffd04 	addi	r4,r16,-12
 8131228:	b080042e 	bgeu	r22,r2,813123c <_fwalk+0x78>
 813122c:	9080000f 	ldh	r2,0(r18)
 8131230:	14c00226 	beq	r2,r19,813123c <_fwalk+0x78>
 8131234:	a83ee83a 	callr	r21
 8131238:	b8aeb03a 	or	r23,r23,r2
 813123c:	84001a04 	addi	r16,r16,104
 8131240:	94801a04 	addi	r18,r18,104
 8131244:	8cfff51e 	bne	r17,r19,813121c <__alt_data_end+0xfc13121c>
 8131248:	a5000017 	ldw	r20,0(r20)
 813124c:	a03fed1e 	bne	r20,zero,8131204 <__alt_data_end+0xfc131204>
 8131250:	b805883a 	mov	r2,r23
 8131254:	dfc00817 	ldw	ra,32(sp)
 8131258:	ddc00717 	ldw	r23,28(sp)
 813125c:	dd800617 	ldw	r22,24(sp)
 8131260:	dd400517 	ldw	r21,20(sp)
 8131264:	dd000417 	ldw	r20,16(sp)
 8131268:	dcc00317 	ldw	r19,12(sp)
 813126c:	dc800217 	ldw	r18,8(sp)
 8131270:	dc400117 	ldw	r17,4(sp)
 8131274:	dc000017 	ldw	r16,0(sp)
 8131278:	dec00904 	addi	sp,sp,36
 813127c:	f800283a 	ret
 8131280:	002f883a 	mov	r23,zero
 8131284:	003ff206 	br	8131250 <__alt_data_end+0xfc131250>

08131288 <_fwalk_reent>:
 8131288:	defff704 	addi	sp,sp,-36
 813128c:	dd000415 	stw	r20,16(sp)
 8131290:	dfc00815 	stw	ra,32(sp)
 8131294:	ddc00715 	stw	r23,28(sp)
 8131298:	dd800615 	stw	r22,24(sp)
 813129c:	dd400515 	stw	r21,20(sp)
 81312a0:	dcc00315 	stw	r19,12(sp)
 81312a4:	dc800215 	stw	r18,8(sp)
 81312a8:	dc400115 	stw	r17,4(sp)
 81312ac:	dc000015 	stw	r16,0(sp)
 81312b0:	2500b804 	addi	r20,r4,736
 81312b4:	a0002326 	beq	r20,zero,8131344 <_fwalk_reent+0xbc>
 81312b8:	282b883a 	mov	r21,r5
 81312bc:	2027883a 	mov	r19,r4
 81312c0:	002f883a 	mov	r23,zero
 81312c4:	05800044 	movi	r22,1
 81312c8:	04bfffc4 	movi	r18,-1
 81312cc:	a4400117 	ldw	r17,4(r20)
 81312d0:	a4000217 	ldw	r16,8(r20)
 81312d4:	8c7fffc4 	addi	r17,r17,-1
 81312d8:	88000c16 	blt	r17,zero,813130c <_fwalk_reent+0x84>
 81312dc:	84000304 	addi	r16,r16,12
 81312e0:	8080000b 	ldhu	r2,0(r16)
 81312e4:	8c7fffc4 	addi	r17,r17,-1
 81312e8:	817ffd04 	addi	r5,r16,-12
 81312ec:	b080052e 	bgeu	r22,r2,8131304 <_fwalk_reent+0x7c>
 81312f0:	8080008f 	ldh	r2,2(r16)
 81312f4:	9809883a 	mov	r4,r19
 81312f8:	14800226 	beq	r2,r18,8131304 <_fwalk_reent+0x7c>
 81312fc:	a83ee83a 	callr	r21
 8131300:	b8aeb03a 	or	r23,r23,r2
 8131304:	84001a04 	addi	r16,r16,104
 8131308:	8cbff51e 	bne	r17,r18,81312e0 <__alt_data_end+0xfc1312e0>
 813130c:	a5000017 	ldw	r20,0(r20)
 8131310:	a03fee1e 	bne	r20,zero,81312cc <__alt_data_end+0xfc1312cc>
 8131314:	b805883a 	mov	r2,r23
 8131318:	dfc00817 	ldw	ra,32(sp)
 813131c:	ddc00717 	ldw	r23,28(sp)
 8131320:	dd800617 	ldw	r22,24(sp)
 8131324:	dd400517 	ldw	r21,20(sp)
 8131328:	dd000417 	ldw	r20,16(sp)
 813132c:	dcc00317 	ldw	r19,12(sp)
 8131330:	dc800217 	ldw	r18,8(sp)
 8131334:	dc400117 	ldw	r17,4(sp)
 8131338:	dc000017 	ldw	r16,0(sp)
 813133c:	dec00904 	addi	sp,sp,36
 8131340:	f800283a 	ret
 8131344:	002f883a 	mov	r23,zero
 8131348:	003ff206 	br	8131314 <__alt_data_end+0xfc131314>

0813134c <_setlocale_r>:
 813134c:	30001b26 	beq	r6,zero,81313bc <_setlocale_r+0x70>
 8131350:	01420534 	movhi	r5,2068
 8131354:	defffe04 	addi	sp,sp,-8
 8131358:	296eed04 	addi	r5,r5,-17484
 813135c:	3009883a 	mov	r4,r6
 8131360:	dc000015 	stw	r16,0(sp)
 8131364:	dfc00115 	stw	ra,4(sp)
 8131368:	3021883a 	mov	r16,r6
 813136c:	8133ac00 	call	8133ac0 <strcmp>
 8131370:	1000061e 	bne	r2,zero,813138c <_setlocale_r+0x40>
 8131374:	00820534 	movhi	r2,2068
 8131378:	10aeec04 	addi	r2,r2,-17488
 813137c:	dfc00117 	ldw	ra,4(sp)
 8131380:	dc000017 	ldw	r16,0(sp)
 8131384:	dec00204 	addi	sp,sp,8
 8131388:	f800283a 	ret
 813138c:	01420534 	movhi	r5,2068
 8131390:	296eec04 	addi	r5,r5,-17488
 8131394:	8009883a 	mov	r4,r16
 8131398:	8133ac00 	call	8133ac0 <strcmp>
 813139c:	103ff526 	beq	r2,zero,8131374 <__alt_data_end+0xfc131374>
 81313a0:	01420534 	movhi	r5,2068
 81313a4:	296ed704 	addi	r5,r5,-17572
 81313a8:	8009883a 	mov	r4,r16
 81313ac:	8133ac00 	call	8133ac0 <strcmp>
 81313b0:	103ff026 	beq	r2,zero,8131374 <__alt_data_end+0xfc131374>
 81313b4:	0005883a 	mov	r2,zero
 81313b8:	003ff006 	br	813137c <__alt_data_end+0xfc13137c>
 81313bc:	00820534 	movhi	r2,2068
 81313c0:	10aeec04 	addi	r2,r2,-17488
 81313c4:	f800283a 	ret

081313c8 <__locale_charset>:
 81313c8:	00820534 	movhi	r2,2068
 81313cc:	10b09f04 	addi	r2,r2,-15748
 81313d0:	f800283a 	ret

081313d4 <__locale_mb_cur_max>:
 81313d4:	00820534 	movhi	r2,2068
 81313d8:	10b63d04 	addi	r2,r2,-9996
 81313dc:	10800017 	ldw	r2,0(r2)
 81313e0:	f800283a 	ret

081313e4 <__locale_msgcharset>:
 81313e4:	00820534 	movhi	r2,2068
 81313e8:	10b09704 	addi	r2,r2,-15780
 81313ec:	f800283a 	ret

081313f0 <__locale_cjk_lang>:
 81313f0:	0005883a 	mov	r2,zero
 81313f4:	f800283a 	ret

081313f8 <_localeconv_r>:
 81313f8:	00820534 	movhi	r2,2068
 81313fc:	10b0a704 	addi	r2,r2,-15716
 8131400:	f800283a 	ret

08131404 <setlocale>:
 8131404:	00820534 	movhi	r2,2068
 8131408:	10b63c04 	addi	r2,r2,-10000
 813140c:	280d883a 	mov	r6,r5
 8131410:	200b883a 	mov	r5,r4
 8131414:	11000017 	ldw	r4,0(r2)
 8131418:	813134c1 	jmpi	813134c <_setlocale_r>

0813141c <localeconv>:
 813141c:	00820534 	movhi	r2,2068
 8131420:	10b0a704 	addi	r2,r2,-15716
 8131424:	f800283a 	ret

08131428 <__smakebuf_r>:
 8131428:	2880030b 	ldhu	r2,12(r5)
 813142c:	10c0008c 	andi	r3,r2,2
 8131430:	1800411e 	bne	r3,zero,8131538 <__smakebuf_r+0x110>
 8131434:	deffec04 	addi	sp,sp,-80
 8131438:	dc000f15 	stw	r16,60(sp)
 813143c:	2821883a 	mov	r16,r5
 8131440:	2940038f 	ldh	r5,14(r5)
 8131444:	dc401015 	stw	r17,64(sp)
 8131448:	dfc01315 	stw	ra,76(sp)
 813144c:	dcc01215 	stw	r19,72(sp)
 8131450:	dc801115 	stw	r18,68(sp)
 8131454:	2023883a 	mov	r17,r4
 8131458:	28001c16 	blt	r5,zero,81314cc <__smakebuf_r+0xa4>
 813145c:	d80d883a 	mov	r6,sp
 8131460:	81357300 	call	8135730 <_fstat_r>
 8131464:	10001816 	blt	r2,zero,81314c8 <__smakebuf_r+0xa0>
 8131468:	d8800117 	ldw	r2,4(sp)
 813146c:	00e00014 	movui	r3,32768
 8131470:	10bc000c 	andi	r2,r2,61440
 8131474:	14c80020 	cmpeqi	r19,r2,8192
 8131478:	10c03726 	beq	r2,r3,8131558 <__smakebuf_r+0x130>
 813147c:	80c0030b 	ldhu	r3,12(r16)
 8131480:	18c20014 	ori	r3,r3,2048
 8131484:	80c0030d 	sth	r3,12(r16)
 8131488:	00c80004 	movi	r3,8192
 813148c:	10c0521e 	bne	r2,r3,81315d8 <__smakebuf_r+0x1b0>
 8131490:	8140038f 	ldh	r5,14(r16)
 8131494:	8809883a 	mov	r4,r17
 8131498:	813578c0 	call	813578c <_isatty_r>
 813149c:	10004c26 	beq	r2,zero,81315d0 <__smakebuf_r+0x1a8>
 81314a0:	8080030b 	ldhu	r2,12(r16)
 81314a4:	80c010c4 	addi	r3,r16,67
 81314a8:	80c00015 	stw	r3,0(r16)
 81314ac:	10800054 	ori	r2,r2,1
 81314b0:	8080030d 	sth	r2,12(r16)
 81314b4:	00800044 	movi	r2,1
 81314b8:	80c00415 	stw	r3,16(r16)
 81314bc:	80800515 	stw	r2,20(r16)
 81314c0:	04810004 	movi	r18,1024
 81314c4:	00000706 	br	81314e4 <__smakebuf_r+0xbc>
 81314c8:	8080030b 	ldhu	r2,12(r16)
 81314cc:	10c0200c 	andi	r3,r2,128
 81314d0:	18001f1e 	bne	r3,zero,8131550 <__smakebuf_r+0x128>
 81314d4:	04810004 	movi	r18,1024
 81314d8:	10820014 	ori	r2,r2,2048
 81314dc:	8080030d 	sth	r2,12(r16)
 81314e0:	0027883a 	mov	r19,zero
 81314e4:	900b883a 	mov	r5,r18
 81314e8:	8809883a 	mov	r4,r17
 81314ec:	81315e40 	call	81315e4 <_malloc_r>
 81314f0:	10002c26 	beq	r2,zero,81315a4 <__smakebuf_r+0x17c>
 81314f4:	80c0030b 	ldhu	r3,12(r16)
 81314f8:	010204f4 	movhi	r4,2067
 81314fc:	21014804 	addi	r4,r4,1312
 8131500:	89000f15 	stw	r4,60(r17)
 8131504:	18c02014 	ori	r3,r3,128
 8131508:	80c0030d 	sth	r3,12(r16)
 813150c:	80800015 	stw	r2,0(r16)
 8131510:	80800415 	stw	r2,16(r16)
 8131514:	84800515 	stw	r18,20(r16)
 8131518:	98001a1e 	bne	r19,zero,8131584 <__smakebuf_r+0x15c>
 813151c:	dfc01317 	ldw	ra,76(sp)
 8131520:	dcc01217 	ldw	r19,72(sp)
 8131524:	dc801117 	ldw	r18,68(sp)
 8131528:	dc401017 	ldw	r17,64(sp)
 813152c:	dc000f17 	ldw	r16,60(sp)
 8131530:	dec01404 	addi	sp,sp,80
 8131534:	f800283a 	ret
 8131538:	288010c4 	addi	r2,r5,67
 813153c:	28800015 	stw	r2,0(r5)
 8131540:	28800415 	stw	r2,16(r5)
 8131544:	00800044 	movi	r2,1
 8131548:	28800515 	stw	r2,20(r5)
 813154c:	f800283a 	ret
 8131550:	04801004 	movi	r18,64
 8131554:	003fe006 	br	81314d8 <__alt_data_end+0xfc1314d8>
 8131558:	81000a17 	ldw	r4,40(r16)
 813155c:	00c204f4 	movhi	r3,2067
 8131560:	18ce9704 	addi	r3,r3,14940
 8131564:	20ffc51e 	bne	r4,r3,813147c <__alt_data_end+0xfc13147c>
 8131568:	8080030b 	ldhu	r2,12(r16)
 813156c:	04810004 	movi	r18,1024
 8131570:	84801315 	stw	r18,76(r16)
 8131574:	1484b03a 	or	r2,r2,r18
 8131578:	8080030d 	sth	r2,12(r16)
 813157c:	0027883a 	mov	r19,zero
 8131580:	003fd806 	br	81314e4 <__alt_data_end+0xfc1314e4>
 8131584:	8140038f 	ldh	r5,14(r16)
 8131588:	8809883a 	mov	r4,r17
 813158c:	813578c0 	call	813578c <_isatty_r>
 8131590:	103fe226 	beq	r2,zero,813151c <__alt_data_end+0xfc13151c>
 8131594:	8080030b 	ldhu	r2,12(r16)
 8131598:	10800054 	ori	r2,r2,1
 813159c:	8080030d 	sth	r2,12(r16)
 81315a0:	003fde06 	br	813151c <__alt_data_end+0xfc13151c>
 81315a4:	8080030b 	ldhu	r2,12(r16)
 81315a8:	10c0800c 	andi	r3,r2,512
 81315ac:	183fdb1e 	bne	r3,zero,813151c <__alt_data_end+0xfc13151c>
 81315b0:	10800094 	ori	r2,r2,2
 81315b4:	80c010c4 	addi	r3,r16,67
 81315b8:	8080030d 	sth	r2,12(r16)
 81315bc:	00800044 	movi	r2,1
 81315c0:	80c00015 	stw	r3,0(r16)
 81315c4:	80c00415 	stw	r3,16(r16)
 81315c8:	80800515 	stw	r2,20(r16)
 81315cc:	003fd306 	br	813151c <__alt_data_end+0xfc13151c>
 81315d0:	04810004 	movi	r18,1024
 81315d4:	003fc306 	br	81314e4 <__alt_data_end+0xfc1314e4>
 81315d8:	0027883a 	mov	r19,zero
 81315dc:	04810004 	movi	r18,1024
 81315e0:	003fc006 	br	81314e4 <__alt_data_end+0xfc1314e4>

081315e4 <_malloc_r>:
 81315e4:	defff504 	addi	sp,sp,-44
 81315e8:	dc800315 	stw	r18,12(sp)
 81315ec:	dfc00a15 	stw	ra,40(sp)
 81315f0:	df000915 	stw	fp,36(sp)
 81315f4:	ddc00815 	stw	r23,32(sp)
 81315f8:	dd800715 	stw	r22,28(sp)
 81315fc:	dd400615 	stw	r21,24(sp)
 8131600:	dd000515 	stw	r20,20(sp)
 8131604:	dcc00415 	stw	r19,16(sp)
 8131608:	dc400215 	stw	r17,8(sp)
 813160c:	dc000115 	stw	r16,4(sp)
 8131610:	288002c4 	addi	r2,r5,11
 8131614:	00c00584 	movi	r3,22
 8131618:	2025883a 	mov	r18,r4
 813161c:	18807f2e 	bgeu	r3,r2,813181c <_malloc_r+0x238>
 8131620:	047ffe04 	movi	r17,-8
 8131624:	1462703a 	and	r17,r2,r17
 8131628:	8800a316 	blt	r17,zero,81318b8 <_malloc_r+0x2d4>
 813162c:	8940a236 	bltu	r17,r5,81318b8 <_malloc_r+0x2d4>
 8131630:	81397940 	call	8139794 <__malloc_lock>
 8131634:	00807dc4 	movi	r2,503
 8131638:	1441e92e 	bgeu	r2,r17,8131de0 <_malloc_r+0x7fc>
 813163c:	8804d27a 	srli	r2,r17,9
 8131640:	1000a126 	beq	r2,zero,81318c8 <_malloc_r+0x2e4>
 8131644:	00c00104 	movi	r3,4
 8131648:	18811e36 	bltu	r3,r2,8131ac4 <_malloc_r+0x4e0>
 813164c:	8804d1ba 	srli	r2,r17,6
 8131650:	12000e44 	addi	r8,r2,57
 8131654:	11c00e04 	addi	r7,r2,56
 8131658:	4209883a 	add	r4,r8,r8
 813165c:	04c20534 	movhi	r19,2068
 8131660:	2109883a 	add	r4,r4,r4
 8131664:	9cf0b504 	addi	r19,r19,-15660
 8131668:	2109883a 	add	r4,r4,r4
 813166c:	9909883a 	add	r4,r19,r4
 8131670:	24000117 	ldw	r16,4(r4)
 8131674:	213ffe04 	addi	r4,r4,-8
 8131678:	24009726 	beq	r4,r16,81318d8 <_malloc_r+0x2f4>
 813167c:	80800117 	ldw	r2,4(r16)
 8131680:	01bfff04 	movi	r6,-4
 8131684:	014003c4 	movi	r5,15
 8131688:	1184703a 	and	r2,r2,r6
 813168c:	1447c83a 	sub	r3,r2,r17
 8131690:	28c00716 	blt	r5,r3,81316b0 <_malloc_r+0xcc>
 8131694:	1800920e 	bge	r3,zero,81318e0 <_malloc_r+0x2fc>
 8131698:	84000317 	ldw	r16,12(r16)
 813169c:	24008e26 	beq	r4,r16,81318d8 <_malloc_r+0x2f4>
 81316a0:	80800117 	ldw	r2,4(r16)
 81316a4:	1184703a 	and	r2,r2,r6
 81316a8:	1447c83a 	sub	r3,r2,r17
 81316ac:	28fff90e 	bge	r5,r3,8131694 <__alt_data_end+0xfc131694>
 81316b0:	3809883a 	mov	r4,r7
 81316b4:	01820534 	movhi	r6,2068
 81316b8:	9c000417 	ldw	r16,16(r19)
 81316bc:	31b0b504 	addi	r6,r6,-15660
 81316c0:	32000204 	addi	r8,r6,8
 81316c4:	82013426 	beq	r16,r8,8131b98 <_malloc_r+0x5b4>
 81316c8:	80c00117 	ldw	r3,4(r16)
 81316cc:	00bfff04 	movi	r2,-4
 81316d0:	188e703a 	and	r7,r3,r2
 81316d4:	3c45c83a 	sub	r2,r7,r17
 81316d8:	00c003c4 	movi	r3,15
 81316dc:	18811f16 	blt	r3,r2,8131b5c <_malloc_r+0x578>
 81316e0:	32000515 	stw	r8,20(r6)
 81316e4:	32000415 	stw	r8,16(r6)
 81316e8:	10007f0e 	bge	r2,zero,81318e8 <_malloc_r+0x304>
 81316ec:	00807fc4 	movi	r2,511
 81316f0:	11c0fd36 	bltu	r2,r7,8131ae8 <_malloc_r+0x504>
 81316f4:	3806d0fa 	srli	r3,r7,3
 81316f8:	01c00044 	movi	r7,1
 81316fc:	30800117 	ldw	r2,4(r6)
 8131700:	19400044 	addi	r5,r3,1
 8131704:	294b883a 	add	r5,r5,r5
 8131708:	1807d0ba 	srai	r3,r3,2
 813170c:	294b883a 	add	r5,r5,r5
 8131710:	294b883a 	add	r5,r5,r5
 8131714:	298b883a 	add	r5,r5,r6
 8131718:	38c6983a 	sll	r3,r7,r3
 813171c:	29c00017 	ldw	r7,0(r5)
 8131720:	2a7ffe04 	addi	r9,r5,-8
 8131724:	1886b03a 	or	r3,r3,r2
 8131728:	82400315 	stw	r9,12(r16)
 813172c:	81c00215 	stw	r7,8(r16)
 8131730:	30c00115 	stw	r3,4(r6)
 8131734:	2c000015 	stw	r16,0(r5)
 8131738:	3c000315 	stw	r16,12(r7)
 813173c:	2005d0ba 	srai	r2,r4,2
 8131740:	01400044 	movi	r5,1
 8131744:	288a983a 	sll	r5,r5,r2
 8131748:	19406f36 	bltu	r3,r5,8131908 <_malloc_r+0x324>
 813174c:	28c4703a 	and	r2,r5,r3
 8131750:	10000a1e 	bne	r2,zero,813177c <_malloc_r+0x198>
 8131754:	00bfff04 	movi	r2,-4
 8131758:	294b883a 	add	r5,r5,r5
 813175c:	2088703a 	and	r4,r4,r2
 8131760:	28c4703a 	and	r2,r5,r3
 8131764:	21000104 	addi	r4,r4,4
 8131768:	1000041e 	bne	r2,zero,813177c <_malloc_r+0x198>
 813176c:	294b883a 	add	r5,r5,r5
 8131770:	28c4703a 	and	r2,r5,r3
 8131774:	21000104 	addi	r4,r4,4
 8131778:	103ffc26 	beq	r2,zero,813176c <__alt_data_end+0xfc13176c>
 813177c:	02bfff04 	movi	r10,-4
 8131780:	024003c4 	movi	r9,15
 8131784:	21800044 	addi	r6,r4,1
 8131788:	318d883a 	add	r6,r6,r6
 813178c:	318d883a 	add	r6,r6,r6
 8131790:	318d883a 	add	r6,r6,r6
 8131794:	998d883a 	add	r6,r19,r6
 8131798:	333ffe04 	addi	r12,r6,-8
 813179c:	2017883a 	mov	r11,r4
 81317a0:	31800104 	addi	r6,r6,4
 81317a4:	34000017 	ldw	r16,0(r6)
 81317a8:	31fffd04 	addi	r7,r6,-12
 81317ac:	81c0041e 	bne	r16,r7,81317c0 <_malloc_r+0x1dc>
 81317b0:	0000fb06 	br	8131ba0 <_malloc_r+0x5bc>
 81317b4:	1801030e 	bge	r3,zero,8131bc4 <_malloc_r+0x5e0>
 81317b8:	84000317 	ldw	r16,12(r16)
 81317bc:	81c0f826 	beq	r16,r7,8131ba0 <_malloc_r+0x5bc>
 81317c0:	80800117 	ldw	r2,4(r16)
 81317c4:	1284703a 	and	r2,r2,r10
 81317c8:	1447c83a 	sub	r3,r2,r17
 81317cc:	48fff90e 	bge	r9,r3,81317b4 <__alt_data_end+0xfc1317b4>
 81317d0:	80800317 	ldw	r2,12(r16)
 81317d4:	81000217 	ldw	r4,8(r16)
 81317d8:	89400054 	ori	r5,r17,1
 81317dc:	81400115 	stw	r5,4(r16)
 81317e0:	20800315 	stw	r2,12(r4)
 81317e4:	11000215 	stw	r4,8(r2)
 81317e8:	8463883a 	add	r17,r16,r17
 81317ec:	9c400515 	stw	r17,20(r19)
 81317f0:	9c400415 	stw	r17,16(r19)
 81317f4:	18800054 	ori	r2,r3,1
 81317f8:	88800115 	stw	r2,4(r17)
 81317fc:	8a000315 	stw	r8,12(r17)
 8131800:	8a000215 	stw	r8,8(r17)
 8131804:	88e3883a 	add	r17,r17,r3
 8131808:	88c00015 	stw	r3,0(r17)
 813180c:	9009883a 	mov	r4,r18
 8131810:	81397b80 	call	81397b8 <__malloc_unlock>
 8131814:	80800204 	addi	r2,r16,8
 8131818:	00001b06 	br	8131888 <_malloc_r+0x2a4>
 813181c:	04400404 	movi	r17,16
 8131820:	89402536 	bltu	r17,r5,81318b8 <_malloc_r+0x2d4>
 8131824:	81397940 	call	8139794 <__malloc_lock>
 8131828:	00800184 	movi	r2,6
 813182c:	01000084 	movi	r4,2
 8131830:	04c20534 	movhi	r19,2068
 8131834:	1085883a 	add	r2,r2,r2
 8131838:	9cf0b504 	addi	r19,r19,-15660
 813183c:	1085883a 	add	r2,r2,r2
 8131840:	9885883a 	add	r2,r19,r2
 8131844:	14000117 	ldw	r16,4(r2)
 8131848:	10fffe04 	addi	r3,r2,-8
 813184c:	80c0d926 	beq	r16,r3,8131bb4 <_malloc_r+0x5d0>
 8131850:	80c00117 	ldw	r3,4(r16)
 8131854:	81000317 	ldw	r4,12(r16)
 8131858:	00bfff04 	movi	r2,-4
 813185c:	1884703a 	and	r2,r3,r2
 8131860:	81400217 	ldw	r5,8(r16)
 8131864:	8085883a 	add	r2,r16,r2
 8131868:	10c00117 	ldw	r3,4(r2)
 813186c:	29000315 	stw	r4,12(r5)
 8131870:	21400215 	stw	r5,8(r4)
 8131874:	18c00054 	ori	r3,r3,1
 8131878:	10c00115 	stw	r3,4(r2)
 813187c:	9009883a 	mov	r4,r18
 8131880:	81397b80 	call	81397b8 <__malloc_unlock>
 8131884:	80800204 	addi	r2,r16,8
 8131888:	dfc00a17 	ldw	ra,40(sp)
 813188c:	df000917 	ldw	fp,36(sp)
 8131890:	ddc00817 	ldw	r23,32(sp)
 8131894:	dd800717 	ldw	r22,28(sp)
 8131898:	dd400617 	ldw	r21,24(sp)
 813189c:	dd000517 	ldw	r20,20(sp)
 81318a0:	dcc00417 	ldw	r19,16(sp)
 81318a4:	dc800317 	ldw	r18,12(sp)
 81318a8:	dc400217 	ldw	r17,8(sp)
 81318ac:	dc000117 	ldw	r16,4(sp)
 81318b0:	dec00b04 	addi	sp,sp,44
 81318b4:	f800283a 	ret
 81318b8:	00800304 	movi	r2,12
 81318bc:	90800015 	stw	r2,0(r18)
 81318c0:	0005883a 	mov	r2,zero
 81318c4:	003ff006 	br	8131888 <__alt_data_end+0xfc131888>
 81318c8:	01002004 	movi	r4,128
 81318cc:	02001004 	movi	r8,64
 81318d0:	01c00fc4 	movi	r7,63
 81318d4:	003f6106 	br	813165c <__alt_data_end+0xfc13165c>
 81318d8:	4009883a 	mov	r4,r8
 81318dc:	003f7506 	br	81316b4 <__alt_data_end+0xfc1316b4>
 81318e0:	81000317 	ldw	r4,12(r16)
 81318e4:	003fde06 	br	8131860 <__alt_data_end+0xfc131860>
 81318e8:	81c5883a 	add	r2,r16,r7
 81318ec:	11400117 	ldw	r5,4(r2)
 81318f0:	9009883a 	mov	r4,r18
 81318f4:	29400054 	ori	r5,r5,1
 81318f8:	11400115 	stw	r5,4(r2)
 81318fc:	81397b80 	call	81397b8 <__malloc_unlock>
 8131900:	80800204 	addi	r2,r16,8
 8131904:	003fe006 	br	8131888 <__alt_data_end+0xfc131888>
 8131908:	9c000217 	ldw	r16,8(r19)
 813190c:	00bfff04 	movi	r2,-4
 8131910:	85800117 	ldw	r22,4(r16)
 8131914:	b0ac703a 	and	r22,r22,r2
 8131918:	b4400336 	bltu	r22,r17,8131928 <_malloc_r+0x344>
 813191c:	b445c83a 	sub	r2,r22,r17
 8131920:	00c003c4 	movi	r3,15
 8131924:	18805d16 	blt	r3,r2,8131a9c <_malloc_r+0x4b8>
 8131928:	05c20534 	movhi	r23,2068
 813192c:	00820534 	movhi	r2,2068
 8131930:	10bd0d04 	addi	r2,r2,-3020
 8131934:	bdf63e04 	addi	r23,r23,-9992
 8131938:	15400017 	ldw	r21,0(r2)
 813193c:	b8c00017 	ldw	r3,0(r23)
 8131940:	00bfffc4 	movi	r2,-1
 8131944:	858d883a 	add	r6,r16,r22
 8131948:	8d6b883a 	add	r21,r17,r21
 813194c:	1880ea26 	beq	r3,r2,8131cf8 <_malloc_r+0x714>
 8131950:	ad4403c4 	addi	r21,r21,4111
 8131954:	00bc0004 	movi	r2,-4096
 8131958:	a8aa703a 	and	r21,r21,r2
 813195c:	a80b883a 	mov	r5,r21
 8131960:	9009883a 	mov	r4,r18
 8131964:	d9800015 	stw	r6,0(sp)
 8131968:	81339300 	call	8133930 <_sbrk_r>
 813196c:	1029883a 	mov	r20,r2
 8131970:	00bfffc4 	movi	r2,-1
 8131974:	d9800017 	ldw	r6,0(sp)
 8131978:	a080e826 	beq	r20,r2,8131d1c <_malloc_r+0x738>
 813197c:	a180a636 	bltu	r20,r6,8131c18 <_malloc_r+0x634>
 8131980:	07020534 	movhi	fp,2068
 8131984:	e73d1604 	addi	fp,fp,-2984
 8131988:	e0800017 	ldw	r2,0(fp)
 813198c:	a887883a 	add	r3,r21,r2
 8131990:	e0c00015 	stw	r3,0(fp)
 8131994:	3500e626 	beq	r6,r20,8131d30 <_malloc_r+0x74c>
 8131998:	b9000017 	ldw	r4,0(r23)
 813199c:	00bfffc4 	movi	r2,-1
 81319a0:	2080ee26 	beq	r4,r2,8131d5c <_malloc_r+0x778>
 81319a4:	a185c83a 	sub	r2,r20,r6
 81319a8:	10c5883a 	add	r2,r2,r3
 81319ac:	e0800015 	stw	r2,0(fp)
 81319b0:	a0c001cc 	andi	r3,r20,7
 81319b4:	1800bc26 	beq	r3,zero,8131ca8 <_malloc_r+0x6c4>
 81319b8:	a0e9c83a 	sub	r20,r20,r3
 81319bc:	00840204 	movi	r2,4104
 81319c0:	a5000204 	addi	r20,r20,8
 81319c4:	10c7c83a 	sub	r3,r2,r3
 81319c8:	a545883a 	add	r2,r20,r21
 81319cc:	1083ffcc 	andi	r2,r2,4095
 81319d0:	18abc83a 	sub	r21,r3,r2
 81319d4:	a80b883a 	mov	r5,r21
 81319d8:	9009883a 	mov	r4,r18
 81319dc:	81339300 	call	8133930 <_sbrk_r>
 81319e0:	00ffffc4 	movi	r3,-1
 81319e4:	10c0e126 	beq	r2,r3,8131d6c <_malloc_r+0x788>
 81319e8:	1505c83a 	sub	r2,r2,r20
 81319ec:	1545883a 	add	r2,r2,r21
 81319f0:	10800054 	ori	r2,r2,1
 81319f4:	e0c00017 	ldw	r3,0(fp)
 81319f8:	9d000215 	stw	r20,8(r19)
 81319fc:	a0800115 	stw	r2,4(r20)
 8131a00:	a8c7883a 	add	r3,r21,r3
 8131a04:	e0c00015 	stw	r3,0(fp)
 8131a08:	84c00e26 	beq	r16,r19,8131a44 <_malloc_r+0x460>
 8131a0c:	018003c4 	movi	r6,15
 8131a10:	3580a72e 	bgeu	r6,r22,8131cb0 <_malloc_r+0x6cc>
 8131a14:	81400117 	ldw	r5,4(r16)
 8131a18:	013ffe04 	movi	r4,-8
 8131a1c:	b0bffd04 	addi	r2,r22,-12
 8131a20:	1104703a 	and	r2,r2,r4
 8131a24:	2900004c 	andi	r4,r5,1
 8131a28:	2088b03a 	or	r4,r4,r2
 8131a2c:	81000115 	stw	r4,4(r16)
 8131a30:	01400144 	movi	r5,5
 8131a34:	8089883a 	add	r4,r16,r2
 8131a38:	21400115 	stw	r5,4(r4)
 8131a3c:	21400215 	stw	r5,8(r4)
 8131a40:	3080cd36 	bltu	r6,r2,8131d78 <_malloc_r+0x794>
 8131a44:	00820534 	movhi	r2,2068
 8131a48:	10bd0c04 	addi	r2,r2,-3024
 8131a4c:	11000017 	ldw	r4,0(r2)
 8131a50:	20c0012e 	bgeu	r4,r3,8131a58 <_malloc_r+0x474>
 8131a54:	10c00015 	stw	r3,0(r2)
 8131a58:	00820534 	movhi	r2,2068
 8131a5c:	10bd0b04 	addi	r2,r2,-3028
 8131a60:	11000017 	ldw	r4,0(r2)
 8131a64:	9c000217 	ldw	r16,8(r19)
 8131a68:	20c0012e 	bgeu	r4,r3,8131a70 <_malloc_r+0x48c>
 8131a6c:	10c00015 	stw	r3,0(r2)
 8131a70:	80c00117 	ldw	r3,4(r16)
 8131a74:	00bfff04 	movi	r2,-4
 8131a78:	1886703a 	and	r3,r3,r2
 8131a7c:	1c45c83a 	sub	r2,r3,r17
 8131a80:	1c400236 	bltu	r3,r17,8131a8c <_malloc_r+0x4a8>
 8131a84:	00c003c4 	movi	r3,15
 8131a88:	18800416 	blt	r3,r2,8131a9c <_malloc_r+0x4b8>
 8131a8c:	9009883a 	mov	r4,r18
 8131a90:	81397b80 	call	81397b8 <__malloc_unlock>
 8131a94:	0005883a 	mov	r2,zero
 8131a98:	003f7b06 	br	8131888 <__alt_data_end+0xfc131888>
 8131a9c:	88c00054 	ori	r3,r17,1
 8131aa0:	80c00115 	stw	r3,4(r16)
 8131aa4:	8463883a 	add	r17,r16,r17
 8131aa8:	10800054 	ori	r2,r2,1
 8131aac:	9c400215 	stw	r17,8(r19)
 8131ab0:	88800115 	stw	r2,4(r17)
 8131ab4:	9009883a 	mov	r4,r18
 8131ab8:	81397b80 	call	81397b8 <__malloc_unlock>
 8131abc:	80800204 	addi	r2,r16,8
 8131ac0:	003f7106 	br	8131888 <__alt_data_end+0xfc131888>
 8131ac4:	00c00504 	movi	r3,20
 8131ac8:	18804a2e 	bgeu	r3,r2,8131bf4 <_malloc_r+0x610>
 8131acc:	00c01504 	movi	r3,84
 8131ad0:	18806e36 	bltu	r3,r2,8131c8c <_malloc_r+0x6a8>
 8131ad4:	8804d33a 	srli	r2,r17,12
 8131ad8:	12001bc4 	addi	r8,r2,111
 8131adc:	11c01b84 	addi	r7,r2,110
 8131ae0:	4209883a 	add	r4,r8,r8
 8131ae4:	003edd06 	br	813165c <__alt_data_end+0xfc13165c>
 8131ae8:	3804d27a 	srli	r2,r7,9
 8131aec:	00c00104 	movi	r3,4
 8131af0:	1880442e 	bgeu	r3,r2,8131c04 <_malloc_r+0x620>
 8131af4:	00c00504 	movi	r3,20
 8131af8:	18808136 	bltu	r3,r2,8131d00 <_malloc_r+0x71c>
 8131afc:	11401704 	addi	r5,r2,92
 8131b00:	10c016c4 	addi	r3,r2,91
 8131b04:	294b883a 	add	r5,r5,r5
 8131b08:	294b883a 	add	r5,r5,r5
 8131b0c:	294b883a 	add	r5,r5,r5
 8131b10:	994b883a 	add	r5,r19,r5
 8131b14:	28800017 	ldw	r2,0(r5)
 8131b18:	01820534 	movhi	r6,2068
 8131b1c:	297ffe04 	addi	r5,r5,-8
 8131b20:	31b0b504 	addi	r6,r6,-15660
 8131b24:	28806526 	beq	r5,r2,8131cbc <_malloc_r+0x6d8>
 8131b28:	01bfff04 	movi	r6,-4
 8131b2c:	10c00117 	ldw	r3,4(r2)
 8131b30:	1986703a 	and	r3,r3,r6
 8131b34:	38c0022e 	bgeu	r7,r3,8131b40 <_malloc_r+0x55c>
 8131b38:	10800217 	ldw	r2,8(r2)
 8131b3c:	28bffb1e 	bne	r5,r2,8131b2c <__alt_data_end+0xfc131b2c>
 8131b40:	11400317 	ldw	r5,12(r2)
 8131b44:	98c00117 	ldw	r3,4(r19)
 8131b48:	81400315 	stw	r5,12(r16)
 8131b4c:	80800215 	stw	r2,8(r16)
 8131b50:	2c000215 	stw	r16,8(r5)
 8131b54:	14000315 	stw	r16,12(r2)
 8131b58:	003ef806 	br	813173c <__alt_data_end+0xfc13173c>
 8131b5c:	88c00054 	ori	r3,r17,1
 8131b60:	80c00115 	stw	r3,4(r16)
 8131b64:	8463883a 	add	r17,r16,r17
 8131b68:	34400515 	stw	r17,20(r6)
 8131b6c:	34400415 	stw	r17,16(r6)
 8131b70:	10c00054 	ori	r3,r2,1
 8131b74:	8a000315 	stw	r8,12(r17)
 8131b78:	8a000215 	stw	r8,8(r17)
 8131b7c:	88c00115 	stw	r3,4(r17)
 8131b80:	88a3883a 	add	r17,r17,r2
 8131b84:	88800015 	stw	r2,0(r17)
 8131b88:	9009883a 	mov	r4,r18
 8131b8c:	81397b80 	call	81397b8 <__malloc_unlock>
 8131b90:	80800204 	addi	r2,r16,8
 8131b94:	003f3c06 	br	8131888 <__alt_data_end+0xfc131888>
 8131b98:	30c00117 	ldw	r3,4(r6)
 8131b9c:	003ee706 	br	813173c <__alt_data_end+0xfc13173c>
 8131ba0:	5ac00044 	addi	r11,r11,1
 8131ba4:	588000cc 	andi	r2,r11,3
 8131ba8:	31800204 	addi	r6,r6,8
 8131bac:	103efd1e 	bne	r2,zero,81317a4 <__alt_data_end+0xfc1317a4>
 8131bb0:	00002406 	br	8131c44 <_malloc_r+0x660>
 8131bb4:	14000317 	ldw	r16,12(r2)
 8131bb8:	143f251e 	bne	r2,r16,8131850 <__alt_data_end+0xfc131850>
 8131bbc:	21000084 	addi	r4,r4,2
 8131bc0:	003ebc06 	br	81316b4 <__alt_data_end+0xfc1316b4>
 8131bc4:	8085883a 	add	r2,r16,r2
 8131bc8:	10c00117 	ldw	r3,4(r2)
 8131bcc:	81000317 	ldw	r4,12(r16)
 8131bd0:	81400217 	ldw	r5,8(r16)
 8131bd4:	18c00054 	ori	r3,r3,1
 8131bd8:	10c00115 	stw	r3,4(r2)
 8131bdc:	29000315 	stw	r4,12(r5)
 8131be0:	21400215 	stw	r5,8(r4)
 8131be4:	9009883a 	mov	r4,r18
 8131be8:	81397b80 	call	81397b8 <__malloc_unlock>
 8131bec:	80800204 	addi	r2,r16,8
 8131bf0:	003f2506 	br	8131888 <__alt_data_end+0xfc131888>
 8131bf4:	12001704 	addi	r8,r2,92
 8131bf8:	11c016c4 	addi	r7,r2,91
 8131bfc:	4209883a 	add	r4,r8,r8
 8131c00:	003e9606 	br	813165c <__alt_data_end+0xfc13165c>
 8131c04:	3804d1ba 	srli	r2,r7,6
 8131c08:	11400e44 	addi	r5,r2,57
 8131c0c:	10c00e04 	addi	r3,r2,56
 8131c10:	294b883a 	add	r5,r5,r5
 8131c14:	003fbc06 	br	8131b08 <__alt_data_end+0xfc131b08>
 8131c18:	84ff5926 	beq	r16,r19,8131980 <__alt_data_end+0xfc131980>
 8131c1c:	00820534 	movhi	r2,2068
 8131c20:	10b0b504 	addi	r2,r2,-15660
 8131c24:	14000217 	ldw	r16,8(r2)
 8131c28:	00bfff04 	movi	r2,-4
 8131c2c:	80c00117 	ldw	r3,4(r16)
 8131c30:	1886703a 	and	r3,r3,r2
 8131c34:	003f9106 	br	8131a7c <__alt_data_end+0xfc131a7c>
 8131c38:	60800217 	ldw	r2,8(r12)
 8131c3c:	213fffc4 	addi	r4,r4,-1
 8131c40:	1300651e 	bne	r2,r12,8131dd8 <_malloc_r+0x7f4>
 8131c44:	208000cc 	andi	r2,r4,3
 8131c48:	633ffe04 	addi	r12,r12,-8
 8131c4c:	103ffa1e 	bne	r2,zero,8131c38 <__alt_data_end+0xfc131c38>
 8131c50:	98800117 	ldw	r2,4(r19)
 8131c54:	0146303a 	nor	r3,zero,r5
 8131c58:	1884703a 	and	r2,r3,r2
 8131c5c:	98800115 	stw	r2,4(r19)
 8131c60:	294b883a 	add	r5,r5,r5
 8131c64:	117f2836 	bltu	r2,r5,8131908 <__alt_data_end+0xfc131908>
 8131c68:	283f2726 	beq	r5,zero,8131908 <__alt_data_end+0xfc131908>
 8131c6c:	2886703a 	and	r3,r5,r2
 8131c70:	5809883a 	mov	r4,r11
 8131c74:	183ec31e 	bne	r3,zero,8131784 <__alt_data_end+0xfc131784>
 8131c78:	294b883a 	add	r5,r5,r5
 8131c7c:	2886703a 	and	r3,r5,r2
 8131c80:	21000104 	addi	r4,r4,4
 8131c84:	183ffc26 	beq	r3,zero,8131c78 <__alt_data_end+0xfc131c78>
 8131c88:	003ebe06 	br	8131784 <__alt_data_end+0xfc131784>
 8131c8c:	00c05504 	movi	r3,340
 8131c90:	18801236 	bltu	r3,r2,8131cdc <_malloc_r+0x6f8>
 8131c94:	8804d3fa 	srli	r2,r17,15
 8131c98:	12001e04 	addi	r8,r2,120
 8131c9c:	11c01dc4 	addi	r7,r2,119
 8131ca0:	4209883a 	add	r4,r8,r8
 8131ca4:	003e6d06 	br	813165c <__alt_data_end+0xfc13165c>
 8131ca8:	00c40004 	movi	r3,4096
 8131cac:	003f4606 	br	81319c8 <__alt_data_end+0xfc1319c8>
 8131cb0:	00800044 	movi	r2,1
 8131cb4:	a0800115 	stw	r2,4(r20)
 8131cb8:	003f7406 	br	8131a8c <__alt_data_end+0xfc131a8c>
 8131cbc:	1805d0ba 	srai	r2,r3,2
 8131cc0:	01c00044 	movi	r7,1
 8131cc4:	30c00117 	ldw	r3,4(r6)
 8131cc8:	388e983a 	sll	r7,r7,r2
 8131ccc:	2805883a 	mov	r2,r5
 8131cd0:	38c6b03a 	or	r3,r7,r3
 8131cd4:	30c00115 	stw	r3,4(r6)
 8131cd8:	003f9b06 	br	8131b48 <__alt_data_end+0xfc131b48>
 8131cdc:	00c15504 	movi	r3,1364
 8131ce0:	18801a36 	bltu	r3,r2,8131d4c <_malloc_r+0x768>
 8131ce4:	8804d4ba 	srli	r2,r17,18
 8131ce8:	12001f44 	addi	r8,r2,125
 8131cec:	11c01f04 	addi	r7,r2,124
 8131cf0:	4209883a 	add	r4,r8,r8
 8131cf4:	003e5906 	br	813165c <__alt_data_end+0xfc13165c>
 8131cf8:	ad400404 	addi	r21,r21,16
 8131cfc:	003f1706 	br	813195c <__alt_data_end+0xfc13195c>
 8131d00:	00c01504 	movi	r3,84
 8131d04:	18802336 	bltu	r3,r2,8131d94 <_malloc_r+0x7b0>
 8131d08:	3804d33a 	srli	r2,r7,12
 8131d0c:	11401bc4 	addi	r5,r2,111
 8131d10:	10c01b84 	addi	r3,r2,110
 8131d14:	294b883a 	add	r5,r5,r5
 8131d18:	003f7b06 	br	8131b08 <__alt_data_end+0xfc131b08>
 8131d1c:	9c000217 	ldw	r16,8(r19)
 8131d20:	00bfff04 	movi	r2,-4
 8131d24:	80c00117 	ldw	r3,4(r16)
 8131d28:	1886703a 	and	r3,r3,r2
 8131d2c:	003f5306 	br	8131a7c <__alt_data_end+0xfc131a7c>
 8131d30:	3083ffcc 	andi	r2,r6,4095
 8131d34:	103f181e 	bne	r2,zero,8131998 <__alt_data_end+0xfc131998>
 8131d38:	99000217 	ldw	r4,8(r19)
 8131d3c:	b545883a 	add	r2,r22,r21
 8131d40:	10800054 	ori	r2,r2,1
 8131d44:	20800115 	stw	r2,4(r4)
 8131d48:	003f3e06 	br	8131a44 <__alt_data_end+0xfc131a44>
 8131d4c:	01003f84 	movi	r4,254
 8131d50:	02001fc4 	movi	r8,127
 8131d54:	01c01f84 	movi	r7,126
 8131d58:	003e4006 	br	813165c <__alt_data_end+0xfc13165c>
 8131d5c:	00820534 	movhi	r2,2068
 8131d60:	10b63e04 	addi	r2,r2,-9992
 8131d64:	15000015 	stw	r20,0(r2)
 8131d68:	003f1106 	br	81319b0 <__alt_data_end+0xfc1319b0>
 8131d6c:	00800044 	movi	r2,1
 8131d70:	002b883a 	mov	r21,zero
 8131d74:	003f1f06 	br	81319f4 <__alt_data_end+0xfc1319f4>
 8131d78:	81400204 	addi	r5,r16,8
 8131d7c:	9009883a 	mov	r4,r18
 8131d80:	81309ec0 	call	81309ec <_free_r>
 8131d84:	00820534 	movhi	r2,2068
 8131d88:	10bd1604 	addi	r2,r2,-2984
 8131d8c:	10c00017 	ldw	r3,0(r2)
 8131d90:	003f2c06 	br	8131a44 <__alt_data_end+0xfc131a44>
 8131d94:	00c05504 	movi	r3,340
 8131d98:	18800536 	bltu	r3,r2,8131db0 <_malloc_r+0x7cc>
 8131d9c:	3804d3fa 	srli	r2,r7,15
 8131da0:	11401e04 	addi	r5,r2,120
 8131da4:	10c01dc4 	addi	r3,r2,119
 8131da8:	294b883a 	add	r5,r5,r5
 8131dac:	003f5606 	br	8131b08 <__alt_data_end+0xfc131b08>
 8131db0:	00c15504 	movi	r3,1364
 8131db4:	18800536 	bltu	r3,r2,8131dcc <_malloc_r+0x7e8>
 8131db8:	3804d4ba 	srli	r2,r7,18
 8131dbc:	11401f44 	addi	r5,r2,125
 8131dc0:	10c01f04 	addi	r3,r2,124
 8131dc4:	294b883a 	add	r5,r5,r5
 8131dc8:	003f4f06 	br	8131b08 <__alt_data_end+0xfc131b08>
 8131dcc:	01403f84 	movi	r5,254
 8131dd0:	00c01f84 	movi	r3,126
 8131dd4:	003f4c06 	br	8131b08 <__alt_data_end+0xfc131b08>
 8131dd8:	98800117 	ldw	r2,4(r19)
 8131ddc:	003fa006 	br	8131c60 <__alt_data_end+0xfc131c60>
 8131de0:	8808d0fa 	srli	r4,r17,3
 8131de4:	20800044 	addi	r2,r4,1
 8131de8:	1085883a 	add	r2,r2,r2
 8131dec:	003e9006 	br	8131830 <__alt_data_end+0xfc131830>

08131df0 <memchr>:
 8131df0:	208000cc 	andi	r2,r4,3
 8131df4:	280f883a 	mov	r7,r5
 8131df8:	10003426 	beq	r2,zero,8131ecc <memchr+0xdc>
 8131dfc:	30bfffc4 	addi	r2,r6,-1
 8131e00:	30001a26 	beq	r6,zero,8131e6c <memchr+0x7c>
 8131e04:	20c00003 	ldbu	r3,0(r4)
 8131e08:	29803fcc 	andi	r6,r5,255
 8131e0c:	30c0051e 	bne	r6,r3,8131e24 <memchr+0x34>
 8131e10:	00001806 	br	8131e74 <memchr+0x84>
 8131e14:	10001526 	beq	r2,zero,8131e6c <memchr+0x7c>
 8131e18:	20c00003 	ldbu	r3,0(r4)
 8131e1c:	10bfffc4 	addi	r2,r2,-1
 8131e20:	30c01426 	beq	r6,r3,8131e74 <memchr+0x84>
 8131e24:	21000044 	addi	r4,r4,1
 8131e28:	20c000cc 	andi	r3,r4,3
 8131e2c:	183ff91e 	bne	r3,zero,8131e14 <__alt_data_end+0xfc131e14>
 8131e30:	020000c4 	movi	r8,3
 8131e34:	40801136 	bltu	r8,r2,8131e7c <memchr+0x8c>
 8131e38:	10000c26 	beq	r2,zero,8131e6c <memchr+0x7c>
 8131e3c:	20c00003 	ldbu	r3,0(r4)
 8131e40:	29403fcc 	andi	r5,r5,255
 8131e44:	28c00b26 	beq	r5,r3,8131e74 <memchr+0x84>
 8131e48:	20c00044 	addi	r3,r4,1
 8131e4c:	39803fcc 	andi	r6,r7,255
 8131e50:	2089883a 	add	r4,r4,r2
 8131e54:	00000306 	br	8131e64 <memchr+0x74>
 8131e58:	18c00044 	addi	r3,r3,1
 8131e5c:	197fffc3 	ldbu	r5,-1(r3)
 8131e60:	31400526 	beq	r6,r5,8131e78 <memchr+0x88>
 8131e64:	1805883a 	mov	r2,r3
 8131e68:	20fffb1e 	bne	r4,r3,8131e58 <__alt_data_end+0xfc131e58>
 8131e6c:	0005883a 	mov	r2,zero
 8131e70:	f800283a 	ret
 8131e74:	2005883a 	mov	r2,r4
 8131e78:	f800283a 	ret
 8131e7c:	28c03fcc 	andi	r3,r5,255
 8131e80:	1812923a 	slli	r9,r3,8
 8131e84:	02ffbff4 	movhi	r11,65279
 8131e88:	02a02074 	movhi	r10,32897
 8131e8c:	48d2b03a 	or	r9,r9,r3
 8131e90:	4806943a 	slli	r3,r9,16
 8131e94:	5affbfc4 	addi	r11,r11,-257
 8131e98:	52a02004 	addi	r10,r10,-32640
 8131e9c:	48d2b03a 	or	r9,r9,r3
 8131ea0:	20c00017 	ldw	r3,0(r4)
 8131ea4:	48c6f03a 	xor	r3,r9,r3
 8131ea8:	1acd883a 	add	r6,r3,r11
 8131eac:	00c6303a 	nor	r3,zero,r3
 8131eb0:	30c6703a 	and	r3,r6,r3
 8131eb4:	1a86703a 	and	r3,r3,r10
 8131eb8:	183fe01e 	bne	r3,zero,8131e3c <__alt_data_end+0xfc131e3c>
 8131ebc:	10bfff04 	addi	r2,r2,-4
 8131ec0:	21000104 	addi	r4,r4,4
 8131ec4:	40bff636 	bltu	r8,r2,8131ea0 <__alt_data_end+0xfc131ea0>
 8131ec8:	003fdb06 	br	8131e38 <__alt_data_end+0xfc131e38>
 8131ecc:	3005883a 	mov	r2,r6
 8131ed0:	003fd706 	br	8131e30 <__alt_data_end+0xfc131e30>

08131ed4 <memcpy>:
 8131ed4:	defffd04 	addi	sp,sp,-12
 8131ed8:	dfc00215 	stw	ra,8(sp)
 8131edc:	dc400115 	stw	r17,4(sp)
 8131ee0:	dc000015 	stw	r16,0(sp)
 8131ee4:	00c003c4 	movi	r3,15
 8131ee8:	2005883a 	mov	r2,r4
 8131eec:	1980452e 	bgeu	r3,r6,8132004 <memcpy+0x130>
 8131ef0:	2906b03a 	or	r3,r5,r4
 8131ef4:	18c000cc 	andi	r3,r3,3
 8131ef8:	1800441e 	bne	r3,zero,813200c <memcpy+0x138>
 8131efc:	347ffc04 	addi	r17,r6,-16
 8131f00:	8822d13a 	srli	r17,r17,4
 8131f04:	28c00104 	addi	r3,r5,4
 8131f08:	23400104 	addi	r13,r4,4
 8131f0c:	8820913a 	slli	r16,r17,4
 8131f10:	2b000204 	addi	r12,r5,8
 8131f14:	22c00204 	addi	r11,r4,8
 8131f18:	84000504 	addi	r16,r16,20
 8131f1c:	2a800304 	addi	r10,r5,12
 8131f20:	22400304 	addi	r9,r4,12
 8131f24:	2c21883a 	add	r16,r5,r16
 8131f28:	2811883a 	mov	r8,r5
 8131f2c:	200f883a 	mov	r7,r4
 8131f30:	41000017 	ldw	r4,0(r8)
 8131f34:	1fc00017 	ldw	ra,0(r3)
 8131f38:	63c00017 	ldw	r15,0(r12)
 8131f3c:	39000015 	stw	r4,0(r7)
 8131f40:	53800017 	ldw	r14,0(r10)
 8131f44:	6fc00015 	stw	ra,0(r13)
 8131f48:	5bc00015 	stw	r15,0(r11)
 8131f4c:	4b800015 	stw	r14,0(r9)
 8131f50:	18c00404 	addi	r3,r3,16
 8131f54:	39c00404 	addi	r7,r7,16
 8131f58:	42000404 	addi	r8,r8,16
 8131f5c:	6b400404 	addi	r13,r13,16
 8131f60:	63000404 	addi	r12,r12,16
 8131f64:	5ac00404 	addi	r11,r11,16
 8131f68:	52800404 	addi	r10,r10,16
 8131f6c:	4a400404 	addi	r9,r9,16
 8131f70:	1c3fef1e 	bne	r3,r16,8131f30 <__alt_data_end+0xfc131f30>
 8131f74:	89c00044 	addi	r7,r17,1
 8131f78:	380e913a 	slli	r7,r7,4
 8131f7c:	310003cc 	andi	r4,r6,15
 8131f80:	02c000c4 	movi	r11,3
 8131f84:	11c7883a 	add	r3,r2,r7
 8131f88:	29cb883a 	add	r5,r5,r7
 8131f8c:	5900212e 	bgeu	r11,r4,8132014 <memcpy+0x140>
 8131f90:	1813883a 	mov	r9,r3
 8131f94:	2811883a 	mov	r8,r5
 8131f98:	200f883a 	mov	r7,r4
 8131f9c:	42800017 	ldw	r10,0(r8)
 8131fa0:	4a400104 	addi	r9,r9,4
 8131fa4:	39ffff04 	addi	r7,r7,-4
 8131fa8:	4abfff15 	stw	r10,-4(r9)
 8131fac:	42000104 	addi	r8,r8,4
 8131fb0:	59fffa36 	bltu	r11,r7,8131f9c <__alt_data_end+0xfc131f9c>
 8131fb4:	213fff04 	addi	r4,r4,-4
 8131fb8:	2008d0ba 	srli	r4,r4,2
 8131fbc:	318000cc 	andi	r6,r6,3
 8131fc0:	21000044 	addi	r4,r4,1
 8131fc4:	2109883a 	add	r4,r4,r4
 8131fc8:	2109883a 	add	r4,r4,r4
 8131fcc:	1907883a 	add	r3,r3,r4
 8131fd0:	290b883a 	add	r5,r5,r4
 8131fd4:	30000626 	beq	r6,zero,8131ff0 <memcpy+0x11c>
 8131fd8:	198d883a 	add	r6,r3,r6
 8131fdc:	29c00003 	ldbu	r7,0(r5)
 8131fe0:	18c00044 	addi	r3,r3,1
 8131fe4:	29400044 	addi	r5,r5,1
 8131fe8:	19ffffc5 	stb	r7,-1(r3)
 8131fec:	19bffb1e 	bne	r3,r6,8131fdc <__alt_data_end+0xfc131fdc>
 8131ff0:	dfc00217 	ldw	ra,8(sp)
 8131ff4:	dc400117 	ldw	r17,4(sp)
 8131ff8:	dc000017 	ldw	r16,0(sp)
 8131ffc:	dec00304 	addi	sp,sp,12
 8132000:	f800283a 	ret
 8132004:	2007883a 	mov	r3,r4
 8132008:	003ff206 	br	8131fd4 <__alt_data_end+0xfc131fd4>
 813200c:	2007883a 	mov	r3,r4
 8132010:	003ff106 	br	8131fd8 <__alt_data_end+0xfc131fd8>
 8132014:	200d883a 	mov	r6,r4
 8132018:	003fee06 	br	8131fd4 <__alt_data_end+0xfc131fd4>

0813201c <memmove>:
 813201c:	2005883a 	mov	r2,r4
 8132020:	29000b2e 	bgeu	r5,r4,8132050 <memmove+0x34>
 8132024:	298f883a 	add	r7,r5,r6
 8132028:	21c0092e 	bgeu	r4,r7,8132050 <memmove+0x34>
 813202c:	2187883a 	add	r3,r4,r6
 8132030:	198bc83a 	sub	r5,r3,r6
 8132034:	30004826 	beq	r6,zero,8132158 <memmove+0x13c>
 8132038:	39ffffc4 	addi	r7,r7,-1
 813203c:	39000003 	ldbu	r4,0(r7)
 8132040:	18ffffc4 	addi	r3,r3,-1
 8132044:	19000005 	stb	r4,0(r3)
 8132048:	28fffb1e 	bne	r5,r3,8132038 <__alt_data_end+0xfc132038>
 813204c:	f800283a 	ret
 8132050:	00c003c4 	movi	r3,15
 8132054:	1980412e 	bgeu	r3,r6,813215c <memmove+0x140>
 8132058:	2886b03a 	or	r3,r5,r2
 813205c:	18c000cc 	andi	r3,r3,3
 8132060:	1800401e 	bne	r3,zero,8132164 <memmove+0x148>
 8132064:	33fffc04 	addi	r15,r6,-16
 8132068:	781ed13a 	srli	r15,r15,4
 813206c:	28c00104 	addi	r3,r5,4
 8132070:	13400104 	addi	r13,r2,4
 8132074:	781c913a 	slli	r14,r15,4
 8132078:	2b000204 	addi	r12,r5,8
 813207c:	12c00204 	addi	r11,r2,8
 8132080:	73800504 	addi	r14,r14,20
 8132084:	2a800304 	addi	r10,r5,12
 8132088:	12400304 	addi	r9,r2,12
 813208c:	2b9d883a 	add	r14,r5,r14
 8132090:	2811883a 	mov	r8,r5
 8132094:	100f883a 	mov	r7,r2
 8132098:	41000017 	ldw	r4,0(r8)
 813209c:	39c00404 	addi	r7,r7,16
 81320a0:	18c00404 	addi	r3,r3,16
 81320a4:	393ffc15 	stw	r4,-16(r7)
 81320a8:	193ffc17 	ldw	r4,-16(r3)
 81320ac:	6b400404 	addi	r13,r13,16
 81320b0:	5ac00404 	addi	r11,r11,16
 81320b4:	693ffc15 	stw	r4,-16(r13)
 81320b8:	61000017 	ldw	r4,0(r12)
 81320bc:	4a400404 	addi	r9,r9,16
 81320c0:	42000404 	addi	r8,r8,16
 81320c4:	593ffc15 	stw	r4,-16(r11)
 81320c8:	51000017 	ldw	r4,0(r10)
 81320cc:	63000404 	addi	r12,r12,16
 81320d0:	52800404 	addi	r10,r10,16
 81320d4:	493ffc15 	stw	r4,-16(r9)
 81320d8:	1bbfef1e 	bne	r3,r14,8132098 <__alt_data_end+0xfc132098>
 81320dc:	79000044 	addi	r4,r15,1
 81320e0:	2008913a 	slli	r4,r4,4
 81320e4:	328003cc 	andi	r10,r6,15
 81320e8:	02c000c4 	movi	r11,3
 81320ec:	1107883a 	add	r3,r2,r4
 81320f0:	290b883a 	add	r5,r5,r4
 81320f4:	5a801e2e 	bgeu	r11,r10,8132170 <memmove+0x154>
 81320f8:	1813883a 	mov	r9,r3
 81320fc:	2811883a 	mov	r8,r5
 8132100:	500f883a 	mov	r7,r10
 8132104:	41000017 	ldw	r4,0(r8)
 8132108:	4a400104 	addi	r9,r9,4
 813210c:	39ffff04 	addi	r7,r7,-4
 8132110:	493fff15 	stw	r4,-4(r9)
 8132114:	42000104 	addi	r8,r8,4
 8132118:	59fffa36 	bltu	r11,r7,8132104 <__alt_data_end+0xfc132104>
 813211c:	513fff04 	addi	r4,r10,-4
 8132120:	2008d0ba 	srli	r4,r4,2
 8132124:	318000cc 	andi	r6,r6,3
 8132128:	21000044 	addi	r4,r4,1
 813212c:	2109883a 	add	r4,r4,r4
 8132130:	2109883a 	add	r4,r4,r4
 8132134:	1907883a 	add	r3,r3,r4
 8132138:	290b883a 	add	r5,r5,r4
 813213c:	30000b26 	beq	r6,zero,813216c <memmove+0x150>
 8132140:	198d883a 	add	r6,r3,r6
 8132144:	29c00003 	ldbu	r7,0(r5)
 8132148:	18c00044 	addi	r3,r3,1
 813214c:	29400044 	addi	r5,r5,1
 8132150:	19ffffc5 	stb	r7,-1(r3)
 8132154:	19bffb1e 	bne	r3,r6,8132144 <__alt_data_end+0xfc132144>
 8132158:	f800283a 	ret
 813215c:	1007883a 	mov	r3,r2
 8132160:	003ff606 	br	813213c <__alt_data_end+0xfc13213c>
 8132164:	1007883a 	mov	r3,r2
 8132168:	003ff506 	br	8132140 <__alt_data_end+0xfc132140>
 813216c:	f800283a 	ret
 8132170:	500d883a 	mov	r6,r10
 8132174:	003ff106 	br	813213c <__alt_data_end+0xfc13213c>

08132178 <memset>:
 8132178:	20c000cc 	andi	r3,r4,3
 813217c:	2005883a 	mov	r2,r4
 8132180:	18004426 	beq	r3,zero,8132294 <memset+0x11c>
 8132184:	31ffffc4 	addi	r7,r6,-1
 8132188:	30004026 	beq	r6,zero,813228c <memset+0x114>
 813218c:	2813883a 	mov	r9,r5
 8132190:	200d883a 	mov	r6,r4
 8132194:	2007883a 	mov	r3,r4
 8132198:	00000406 	br	81321ac <memset+0x34>
 813219c:	3a3fffc4 	addi	r8,r7,-1
 81321a0:	31800044 	addi	r6,r6,1
 81321a4:	38003926 	beq	r7,zero,813228c <memset+0x114>
 81321a8:	400f883a 	mov	r7,r8
 81321ac:	18c00044 	addi	r3,r3,1
 81321b0:	32400005 	stb	r9,0(r6)
 81321b4:	1a0000cc 	andi	r8,r3,3
 81321b8:	403ff81e 	bne	r8,zero,813219c <__alt_data_end+0xfc13219c>
 81321bc:	010000c4 	movi	r4,3
 81321c0:	21c02d2e 	bgeu	r4,r7,8132278 <memset+0x100>
 81321c4:	29003fcc 	andi	r4,r5,255
 81321c8:	200c923a 	slli	r6,r4,8
 81321cc:	3108b03a 	or	r4,r6,r4
 81321d0:	200c943a 	slli	r6,r4,16
 81321d4:	218cb03a 	or	r6,r4,r6
 81321d8:	010003c4 	movi	r4,15
 81321dc:	21c0182e 	bgeu	r4,r7,8132240 <memset+0xc8>
 81321e0:	3b3ffc04 	addi	r12,r7,-16
 81321e4:	6018d13a 	srli	r12,r12,4
 81321e8:	1a000104 	addi	r8,r3,4
 81321ec:	1ac00204 	addi	r11,r3,8
 81321f0:	6008913a 	slli	r4,r12,4
 81321f4:	1a800304 	addi	r10,r3,12
 81321f8:	1813883a 	mov	r9,r3
 81321fc:	21000504 	addi	r4,r4,20
 8132200:	1909883a 	add	r4,r3,r4
 8132204:	49800015 	stw	r6,0(r9)
 8132208:	41800015 	stw	r6,0(r8)
 813220c:	59800015 	stw	r6,0(r11)
 8132210:	51800015 	stw	r6,0(r10)
 8132214:	42000404 	addi	r8,r8,16
 8132218:	4a400404 	addi	r9,r9,16
 813221c:	5ac00404 	addi	r11,r11,16
 8132220:	52800404 	addi	r10,r10,16
 8132224:	413ff71e 	bne	r8,r4,8132204 <__alt_data_end+0xfc132204>
 8132228:	63000044 	addi	r12,r12,1
 813222c:	6018913a 	slli	r12,r12,4
 8132230:	39c003cc 	andi	r7,r7,15
 8132234:	010000c4 	movi	r4,3
 8132238:	1b07883a 	add	r3,r3,r12
 813223c:	21c00e2e 	bgeu	r4,r7,8132278 <memset+0x100>
 8132240:	1813883a 	mov	r9,r3
 8132244:	3811883a 	mov	r8,r7
 8132248:	010000c4 	movi	r4,3
 813224c:	49800015 	stw	r6,0(r9)
 8132250:	423fff04 	addi	r8,r8,-4
 8132254:	4a400104 	addi	r9,r9,4
 8132258:	223ffc36 	bltu	r4,r8,813224c <__alt_data_end+0xfc13224c>
 813225c:	393fff04 	addi	r4,r7,-4
 8132260:	2008d0ba 	srli	r4,r4,2
 8132264:	39c000cc 	andi	r7,r7,3
 8132268:	21000044 	addi	r4,r4,1
 813226c:	2109883a 	add	r4,r4,r4
 8132270:	2109883a 	add	r4,r4,r4
 8132274:	1907883a 	add	r3,r3,r4
 8132278:	38000526 	beq	r7,zero,8132290 <memset+0x118>
 813227c:	19cf883a 	add	r7,r3,r7
 8132280:	19400005 	stb	r5,0(r3)
 8132284:	18c00044 	addi	r3,r3,1
 8132288:	38fffd1e 	bne	r7,r3,8132280 <__alt_data_end+0xfc132280>
 813228c:	f800283a 	ret
 8132290:	f800283a 	ret
 8132294:	2007883a 	mov	r3,r4
 8132298:	300f883a 	mov	r7,r6
 813229c:	003fc706 	br	81321bc <__alt_data_end+0xfc1321bc>

081322a0 <_Balloc>:
 81322a0:	20801317 	ldw	r2,76(r4)
 81322a4:	defffc04 	addi	sp,sp,-16
 81322a8:	dc400115 	stw	r17,4(sp)
 81322ac:	dc000015 	stw	r16,0(sp)
 81322b0:	dfc00315 	stw	ra,12(sp)
 81322b4:	dc800215 	stw	r18,8(sp)
 81322b8:	2023883a 	mov	r17,r4
 81322bc:	2821883a 	mov	r16,r5
 81322c0:	10000f26 	beq	r2,zero,8132300 <_Balloc+0x60>
 81322c4:	8407883a 	add	r3,r16,r16
 81322c8:	18c7883a 	add	r3,r3,r3
 81322cc:	10c7883a 	add	r3,r2,r3
 81322d0:	18800017 	ldw	r2,0(r3)
 81322d4:	10001126 	beq	r2,zero,813231c <_Balloc+0x7c>
 81322d8:	11000017 	ldw	r4,0(r2)
 81322dc:	19000015 	stw	r4,0(r3)
 81322e0:	10000415 	stw	zero,16(r2)
 81322e4:	10000315 	stw	zero,12(r2)
 81322e8:	dfc00317 	ldw	ra,12(sp)
 81322ec:	dc800217 	ldw	r18,8(sp)
 81322f0:	dc400117 	ldw	r17,4(sp)
 81322f4:	dc000017 	ldw	r16,0(sp)
 81322f8:	dec00404 	addi	sp,sp,16
 81322fc:	f800283a 	ret
 8132300:	01800844 	movi	r6,33
 8132304:	01400104 	movi	r5,4
 8132308:	81353480 	call	8135348 <_calloc_r>
 813230c:	88801315 	stw	r2,76(r17)
 8132310:	103fec1e 	bne	r2,zero,81322c4 <__alt_data_end+0xfc1322c4>
 8132314:	0005883a 	mov	r2,zero
 8132318:	003ff306 	br	81322e8 <__alt_data_end+0xfc1322e8>
 813231c:	01400044 	movi	r5,1
 8132320:	2c24983a 	sll	r18,r5,r16
 8132324:	8809883a 	mov	r4,r17
 8132328:	91800144 	addi	r6,r18,5
 813232c:	318d883a 	add	r6,r6,r6
 8132330:	318d883a 	add	r6,r6,r6
 8132334:	81353480 	call	8135348 <_calloc_r>
 8132338:	103ff626 	beq	r2,zero,8132314 <__alt_data_end+0xfc132314>
 813233c:	14000115 	stw	r16,4(r2)
 8132340:	14800215 	stw	r18,8(r2)
 8132344:	003fe606 	br	81322e0 <__alt_data_end+0xfc1322e0>

08132348 <_Bfree>:
 8132348:	28000826 	beq	r5,zero,813236c <_Bfree+0x24>
 813234c:	28c00117 	ldw	r3,4(r5)
 8132350:	20801317 	ldw	r2,76(r4)
 8132354:	18c7883a 	add	r3,r3,r3
 8132358:	18c7883a 	add	r3,r3,r3
 813235c:	10c5883a 	add	r2,r2,r3
 8132360:	10c00017 	ldw	r3,0(r2)
 8132364:	28c00015 	stw	r3,0(r5)
 8132368:	11400015 	stw	r5,0(r2)
 813236c:	f800283a 	ret

08132370 <__multadd>:
 8132370:	defff704 	addi	sp,sp,-36
 8132374:	dc800215 	stw	r18,8(sp)
 8132378:	2c800417 	ldw	r18,16(r5)
 813237c:	dd800615 	stw	r22,24(sp)
 8132380:	dd400515 	stw	r21,20(sp)
 8132384:	dd000415 	stw	r20,16(sp)
 8132388:	dcc00315 	stw	r19,12(sp)
 813238c:	dc400115 	stw	r17,4(sp)
 8132390:	dc000015 	stw	r16,0(sp)
 8132394:	dfc00815 	stw	ra,32(sp)
 8132398:	ddc00715 	stw	r23,28(sp)
 813239c:	2827883a 	mov	r19,r5
 81323a0:	2029883a 	mov	r20,r4
 81323a4:	3023883a 	mov	r17,r6
 81323a8:	3821883a 	mov	r16,r7
 81323ac:	2d400504 	addi	r21,r5,20
 81323b0:	002d883a 	mov	r22,zero
 81323b4:	adc00017 	ldw	r23,0(r21)
 81323b8:	880b883a 	mov	r5,r17
 81323bc:	ad400104 	addi	r21,r21,4
 81323c0:	b93fffcc 	andi	r4,r23,65535
 81323c4:	812c2b80 	call	812c2b8 <__mulsi3>
 81323c8:	b808d43a 	srli	r4,r23,16
 81323cc:	880b883a 	mov	r5,r17
 81323d0:	1421883a 	add	r16,r2,r16
 81323d4:	812c2b80 	call	812c2b8 <__mulsi3>
 81323d8:	800ed43a 	srli	r7,r16,16
 81323dc:	80ffffcc 	andi	r3,r16,65535
 81323e0:	b5800044 	addi	r22,r22,1
 81323e4:	11c5883a 	add	r2,r2,r7
 81323e8:	100e943a 	slli	r7,r2,16
 81323ec:	1020d43a 	srli	r16,r2,16
 81323f0:	38c7883a 	add	r3,r7,r3
 81323f4:	a8ffff15 	stw	r3,-4(r21)
 81323f8:	b4bfee16 	blt	r22,r18,81323b4 <__alt_data_end+0xfc1323b4>
 81323fc:	80000926 	beq	r16,zero,8132424 <__multadd+0xb4>
 8132400:	98800217 	ldw	r2,8(r19)
 8132404:	9080130e 	bge	r18,r2,8132454 <__multadd+0xe4>
 8132408:	90800144 	addi	r2,r18,5
 813240c:	1085883a 	add	r2,r2,r2
 8132410:	1085883a 	add	r2,r2,r2
 8132414:	9885883a 	add	r2,r19,r2
 8132418:	14000015 	stw	r16,0(r2)
 813241c:	94800044 	addi	r18,r18,1
 8132420:	9c800415 	stw	r18,16(r19)
 8132424:	9805883a 	mov	r2,r19
 8132428:	dfc00817 	ldw	ra,32(sp)
 813242c:	ddc00717 	ldw	r23,28(sp)
 8132430:	dd800617 	ldw	r22,24(sp)
 8132434:	dd400517 	ldw	r21,20(sp)
 8132438:	dd000417 	ldw	r20,16(sp)
 813243c:	dcc00317 	ldw	r19,12(sp)
 8132440:	dc800217 	ldw	r18,8(sp)
 8132444:	dc400117 	ldw	r17,4(sp)
 8132448:	dc000017 	ldw	r16,0(sp)
 813244c:	dec00904 	addi	sp,sp,36
 8132450:	f800283a 	ret
 8132454:	99400117 	ldw	r5,4(r19)
 8132458:	a009883a 	mov	r4,r20
 813245c:	29400044 	addi	r5,r5,1
 8132460:	81322a00 	call	81322a0 <_Balloc>
 8132464:	99800417 	ldw	r6,16(r19)
 8132468:	99400304 	addi	r5,r19,12
 813246c:	11000304 	addi	r4,r2,12
 8132470:	31800084 	addi	r6,r6,2
 8132474:	318d883a 	add	r6,r6,r6
 8132478:	318d883a 	add	r6,r6,r6
 813247c:	1023883a 	mov	r17,r2
 8132480:	8131ed40 	call	8131ed4 <memcpy>
 8132484:	98000a26 	beq	r19,zero,81324b0 <__multadd+0x140>
 8132488:	98c00117 	ldw	r3,4(r19)
 813248c:	a0801317 	ldw	r2,76(r20)
 8132490:	18c7883a 	add	r3,r3,r3
 8132494:	18c7883a 	add	r3,r3,r3
 8132498:	10c5883a 	add	r2,r2,r3
 813249c:	10c00017 	ldw	r3,0(r2)
 81324a0:	98c00015 	stw	r3,0(r19)
 81324a4:	14c00015 	stw	r19,0(r2)
 81324a8:	8827883a 	mov	r19,r17
 81324ac:	003fd606 	br	8132408 <__alt_data_end+0xfc132408>
 81324b0:	8827883a 	mov	r19,r17
 81324b4:	003fd406 	br	8132408 <__alt_data_end+0xfc132408>

081324b8 <__s2b>:
 81324b8:	defff904 	addi	sp,sp,-28
 81324bc:	dc400115 	stw	r17,4(sp)
 81324c0:	dc000015 	stw	r16,0(sp)
 81324c4:	2023883a 	mov	r17,r4
 81324c8:	2821883a 	mov	r16,r5
 81324cc:	39000204 	addi	r4,r7,8
 81324d0:	01400244 	movi	r5,9
 81324d4:	dcc00315 	stw	r19,12(sp)
 81324d8:	dc800215 	stw	r18,8(sp)
 81324dc:	dfc00615 	stw	ra,24(sp)
 81324e0:	dd400515 	stw	r21,20(sp)
 81324e4:	dd000415 	stw	r20,16(sp)
 81324e8:	3825883a 	mov	r18,r7
 81324ec:	3027883a 	mov	r19,r6
 81324f0:	81367a00 	call	81367a0 <__divsi3>
 81324f4:	00c00044 	movi	r3,1
 81324f8:	000b883a 	mov	r5,zero
 81324fc:	1880030e 	bge	r3,r2,813250c <__s2b+0x54>
 8132500:	18c7883a 	add	r3,r3,r3
 8132504:	29400044 	addi	r5,r5,1
 8132508:	18bffd16 	blt	r3,r2,8132500 <__alt_data_end+0xfc132500>
 813250c:	8809883a 	mov	r4,r17
 8132510:	81322a00 	call	81322a0 <_Balloc>
 8132514:	d8c00717 	ldw	r3,28(sp)
 8132518:	10c00515 	stw	r3,20(r2)
 813251c:	00c00044 	movi	r3,1
 8132520:	10c00415 	stw	r3,16(r2)
 8132524:	00c00244 	movi	r3,9
 8132528:	1cc0210e 	bge	r3,r19,81325b0 <__s2b+0xf8>
 813252c:	80eb883a 	add	r21,r16,r3
 8132530:	a829883a 	mov	r20,r21
 8132534:	84e1883a 	add	r16,r16,r19
 8132538:	a1c00007 	ldb	r7,0(r20)
 813253c:	01800284 	movi	r6,10
 8132540:	a5000044 	addi	r20,r20,1
 8132544:	100b883a 	mov	r5,r2
 8132548:	39fff404 	addi	r7,r7,-48
 813254c:	8809883a 	mov	r4,r17
 8132550:	81323700 	call	8132370 <__multadd>
 8132554:	a43ff81e 	bne	r20,r16,8132538 <__alt_data_end+0xfc132538>
 8132558:	ace1883a 	add	r16,r21,r19
 813255c:	843ffe04 	addi	r16,r16,-8
 8132560:	9c800a0e 	bge	r19,r18,813258c <__s2b+0xd4>
 8132564:	94e5c83a 	sub	r18,r18,r19
 8132568:	84a5883a 	add	r18,r16,r18
 813256c:	81c00007 	ldb	r7,0(r16)
 8132570:	01800284 	movi	r6,10
 8132574:	84000044 	addi	r16,r16,1
 8132578:	100b883a 	mov	r5,r2
 813257c:	39fff404 	addi	r7,r7,-48
 8132580:	8809883a 	mov	r4,r17
 8132584:	81323700 	call	8132370 <__multadd>
 8132588:	84bff81e 	bne	r16,r18,813256c <__alt_data_end+0xfc13256c>
 813258c:	dfc00617 	ldw	ra,24(sp)
 8132590:	dd400517 	ldw	r21,20(sp)
 8132594:	dd000417 	ldw	r20,16(sp)
 8132598:	dcc00317 	ldw	r19,12(sp)
 813259c:	dc800217 	ldw	r18,8(sp)
 81325a0:	dc400117 	ldw	r17,4(sp)
 81325a4:	dc000017 	ldw	r16,0(sp)
 81325a8:	dec00704 	addi	sp,sp,28
 81325ac:	f800283a 	ret
 81325b0:	84000284 	addi	r16,r16,10
 81325b4:	1827883a 	mov	r19,r3
 81325b8:	003fe906 	br	8132560 <__alt_data_end+0xfc132560>

081325bc <__hi0bits>:
 81325bc:	20bfffec 	andhi	r2,r4,65535
 81325c0:	1000141e 	bne	r2,zero,8132614 <__hi0bits+0x58>
 81325c4:	2008943a 	slli	r4,r4,16
 81325c8:	00800404 	movi	r2,16
 81325cc:	20ffc02c 	andhi	r3,r4,65280
 81325d0:	1800021e 	bne	r3,zero,81325dc <__hi0bits+0x20>
 81325d4:	2008923a 	slli	r4,r4,8
 81325d8:	10800204 	addi	r2,r2,8
 81325dc:	20fc002c 	andhi	r3,r4,61440
 81325e0:	1800021e 	bne	r3,zero,81325ec <__hi0bits+0x30>
 81325e4:	2008913a 	slli	r4,r4,4
 81325e8:	10800104 	addi	r2,r2,4
 81325ec:	20f0002c 	andhi	r3,r4,49152
 81325f0:	1800031e 	bne	r3,zero,8132600 <__hi0bits+0x44>
 81325f4:	2109883a 	add	r4,r4,r4
 81325f8:	10800084 	addi	r2,r2,2
 81325fc:	2109883a 	add	r4,r4,r4
 8132600:	20000316 	blt	r4,zero,8132610 <__hi0bits+0x54>
 8132604:	2110002c 	andhi	r4,r4,16384
 8132608:	2000041e 	bne	r4,zero,813261c <__hi0bits+0x60>
 813260c:	00800804 	movi	r2,32
 8132610:	f800283a 	ret
 8132614:	0005883a 	mov	r2,zero
 8132618:	003fec06 	br	81325cc <__alt_data_end+0xfc1325cc>
 813261c:	10800044 	addi	r2,r2,1
 8132620:	f800283a 	ret

08132624 <__lo0bits>:
 8132624:	20c00017 	ldw	r3,0(r4)
 8132628:	188001cc 	andi	r2,r3,7
 813262c:	10000826 	beq	r2,zero,8132650 <__lo0bits+0x2c>
 8132630:	1880004c 	andi	r2,r3,1
 8132634:	1000211e 	bne	r2,zero,81326bc <__lo0bits+0x98>
 8132638:	1880008c 	andi	r2,r3,2
 813263c:	1000211e 	bne	r2,zero,81326c4 <__lo0bits+0xa0>
 8132640:	1806d0ba 	srli	r3,r3,2
 8132644:	00800084 	movi	r2,2
 8132648:	20c00015 	stw	r3,0(r4)
 813264c:	f800283a 	ret
 8132650:	18bfffcc 	andi	r2,r3,65535
 8132654:	10001326 	beq	r2,zero,81326a4 <__lo0bits+0x80>
 8132658:	0005883a 	mov	r2,zero
 813265c:	19403fcc 	andi	r5,r3,255
 8132660:	2800021e 	bne	r5,zero,813266c <__lo0bits+0x48>
 8132664:	1806d23a 	srli	r3,r3,8
 8132668:	10800204 	addi	r2,r2,8
 813266c:	194003cc 	andi	r5,r3,15
 8132670:	2800021e 	bne	r5,zero,813267c <__lo0bits+0x58>
 8132674:	1806d13a 	srli	r3,r3,4
 8132678:	10800104 	addi	r2,r2,4
 813267c:	194000cc 	andi	r5,r3,3
 8132680:	2800021e 	bne	r5,zero,813268c <__lo0bits+0x68>
 8132684:	1806d0ba 	srli	r3,r3,2
 8132688:	10800084 	addi	r2,r2,2
 813268c:	1940004c 	andi	r5,r3,1
 8132690:	2800081e 	bne	r5,zero,81326b4 <__lo0bits+0x90>
 8132694:	1806d07a 	srli	r3,r3,1
 8132698:	1800051e 	bne	r3,zero,81326b0 <__lo0bits+0x8c>
 813269c:	00800804 	movi	r2,32
 81326a0:	f800283a 	ret
 81326a4:	1806d43a 	srli	r3,r3,16
 81326a8:	00800404 	movi	r2,16
 81326ac:	003feb06 	br	813265c <__alt_data_end+0xfc13265c>
 81326b0:	10800044 	addi	r2,r2,1
 81326b4:	20c00015 	stw	r3,0(r4)
 81326b8:	f800283a 	ret
 81326bc:	0005883a 	mov	r2,zero
 81326c0:	f800283a 	ret
 81326c4:	1806d07a 	srli	r3,r3,1
 81326c8:	00800044 	movi	r2,1
 81326cc:	20c00015 	stw	r3,0(r4)
 81326d0:	f800283a 	ret

081326d4 <__i2b>:
 81326d4:	defffd04 	addi	sp,sp,-12
 81326d8:	dc000015 	stw	r16,0(sp)
 81326dc:	04000044 	movi	r16,1
 81326e0:	dc400115 	stw	r17,4(sp)
 81326e4:	2823883a 	mov	r17,r5
 81326e8:	800b883a 	mov	r5,r16
 81326ec:	dfc00215 	stw	ra,8(sp)
 81326f0:	81322a00 	call	81322a0 <_Balloc>
 81326f4:	14400515 	stw	r17,20(r2)
 81326f8:	14000415 	stw	r16,16(r2)
 81326fc:	dfc00217 	ldw	ra,8(sp)
 8132700:	dc400117 	ldw	r17,4(sp)
 8132704:	dc000017 	ldw	r16,0(sp)
 8132708:	dec00304 	addi	sp,sp,12
 813270c:	f800283a 	ret

08132710 <__multiply>:
 8132710:	deffef04 	addi	sp,sp,-68
 8132714:	dc400815 	stw	r17,32(sp)
 8132718:	dc000715 	stw	r16,28(sp)
 813271c:	34400417 	ldw	r17,16(r6)
 8132720:	2c000417 	ldw	r16,16(r5)
 8132724:	dd800d15 	stw	r22,52(sp)
 8132728:	dc800915 	stw	r18,36(sp)
 813272c:	dfc01015 	stw	ra,64(sp)
 8132730:	df000f15 	stw	fp,60(sp)
 8132734:	ddc00e15 	stw	r23,56(sp)
 8132738:	dd400c15 	stw	r21,48(sp)
 813273c:	dd000b15 	stw	r20,44(sp)
 8132740:	dcc00a15 	stw	r19,40(sp)
 8132744:	2825883a 	mov	r18,r5
 8132748:	302d883a 	mov	r22,r6
 813274c:	8440050e 	bge	r16,r17,8132764 <__multiply+0x54>
 8132750:	8007883a 	mov	r3,r16
 8132754:	3025883a 	mov	r18,r6
 8132758:	8821883a 	mov	r16,r17
 813275c:	282d883a 	mov	r22,r5
 8132760:	1823883a 	mov	r17,r3
 8132764:	90800217 	ldw	r2,8(r18)
 8132768:	8447883a 	add	r3,r16,r17
 813276c:	d8c00215 	stw	r3,8(sp)
 8132770:	91400117 	ldw	r5,4(r18)
 8132774:	10c0010e 	bge	r2,r3,813277c <__multiply+0x6c>
 8132778:	29400044 	addi	r5,r5,1
 813277c:	81322a00 	call	81322a0 <_Balloc>
 8132780:	d8c00217 	ldw	r3,8(sp)
 8132784:	d8800615 	stw	r2,24(sp)
 8132788:	18eb883a 	add	r21,r3,r3
 813278c:	ad6b883a 	add	r21,r21,r21
 8132790:	10c00504 	addi	r3,r2,20
 8132794:	1d6b883a 	add	r21,r3,r21
 8132798:	d8c00115 	stw	r3,4(sp)
 813279c:	dd400315 	stw	r21,12(sp)
 81327a0:	1805883a 	mov	r2,r3
 81327a4:	1d40042e 	bgeu	r3,r21,81327b8 <__multiply+0xa8>
 81327a8:	d8c00317 	ldw	r3,12(sp)
 81327ac:	10000015 	stw	zero,0(r2)
 81327b0:	10800104 	addi	r2,r2,4
 81327b4:	10fffc36 	bltu	r2,r3,81327a8 <__alt_data_end+0xfc1327a8>
 81327b8:	8c63883a 	add	r17,r17,r17
 81327bc:	b5800504 	addi	r22,r22,20
 81327c0:	8c63883a 	add	r17,r17,r17
 81327c4:	94800504 	addi	r18,r18,20
 81327c8:	8421883a 	add	r16,r16,r16
 81327cc:	b463883a 	add	r17,r22,r17
 81327d0:	8421883a 	add	r16,r16,r16
 81327d4:	dd800015 	stw	r22,0(sp)
 81327d8:	dc800415 	stw	r18,16(sp)
 81327dc:	dc400515 	stw	r17,20(sp)
 81327e0:	9429883a 	add	r20,r18,r16
 81327e4:	b4404f2e 	bgeu	r22,r17,8132924 <__multiply+0x214>
 81327e8:	d8c00017 	ldw	r3,0(sp)
 81327ec:	1c800017 	ldw	r18,0(r3)
 81327f0:	947fffcc 	andi	r17,r18,65535
 81327f4:	88001e26 	beq	r17,zero,8132870 <__multiply+0x160>
 81327f8:	dd800117 	ldw	r22,4(sp)
 81327fc:	dd400417 	ldw	r21,16(sp)
 8132800:	0027883a 	mov	r19,zero
 8132804:	ac800017 	ldw	r18,0(r21)
 8132808:	b4000017 	ldw	r16,0(r22)
 813280c:	880b883a 	mov	r5,r17
 8132810:	913fffcc 	andi	r4,r18,65535
 8132814:	812c2b80 	call	812c2b8 <__mulsi3>
 8132818:	9008d43a 	srli	r4,r18,16
 813281c:	84bfffcc 	andi	r18,r16,65535
 8132820:	1485883a 	add	r2,r2,r18
 8132824:	14e5883a 	add	r18,r2,r19
 8132828:	8020d43a 	srli	r16,r16,16
 813282c:	9026d43a 	srli	r19,r18,16
 8132830:	880b883a 	mov	r5,r17
 8132834:	812c2b80 	call	812c2b8 <__mulsi3>
 8132838:	1405883a 	add	r2,r2,r16
 813283c:	14e1883a 	add	r16,r2,r19
 8132840:	90ffffcc 	andi	r3,r18,65535
 8132844:	8024943a 	slli	r18,r16,16
 8132848:	ad400104 	addi	r21,r21,4
 813284c:	b005883a 	mov	r2,r22
 8132850:	90c6b03a 	or	r3,r18,r3
 8132854:	b0c00015 	stw	r3,0(r22)
 8132858:	8026d43a 	srli	r19,r16,16
 813285c:	b5800104 	addi	r22,r22,4
 8132860:	ad3fe836 	bltu	r21,r20,8132804 <__alt_data_end+0xfc132804>
 8132864:	d8c00017 	ldw	r3,0(sp)
 8132868:	14c00115 	stw	r19,4(r2)
 813286c:	1c800017 	ldw	r18,0(r3)
 8132870:	9024d43a 	srli	r18,r18,16
 8132874:	90002226 	beq	r18,zero,8132900 <__multiply+0x1f0>
 8132878:	d8c00117 	ldw	r3,4(sp)
 813287c:	dd800417 	ldw	r22,16(sp)
 8132880:	002f883a 	mov	r23,zero
 8132884:	1f000017 	ldw	fp,0(r3)
 8132888:	1823883a 	mov	r17,r3
 813288c:	182b883a 	mov	r21,r3
 8132890:	e021883a 	mov	r16,fp
 8132894:	00000106 	br	813289c <__multiply+0x18c>
 8132898:	982b883a 	mov	r21,r19
 813289c:	b100000b 	ldhu	r4,0(r22)
 81328a0:	8020d43a 	srli	r16,r16,16
 81328a4:	900b883a 	mov	r5,r18
 81328a8:	812c2b80 	call	812c2b8 <__mulsi3>
 81328ac:	1405883a 	add	r2,r2,r16
 81328b0:	15ef883a 	add	r23,r2,r23
 81328b4:	b804943a 	slli	r2,r23,16
 81328b8:	e0ffffcc 	andi	r3,fp,65535
 81328bc:	8c400104 	addi	r17,r17,4
 81328c0:	10c6b03a 	or	r3,r2,r3
 81328c4:	88ffff15 	stw	r3,-4(r17)
 81328c8:	b5800104 	addi	r22,r22,4
 81328cc:	b13fff17 	ldw	r4,-4(r22)
 81328d0:	acc00104 	addi	r19,r21,4
 81328d4:	900b883a 	mov	r5,r18
 81328d8:	2008d43a 	srli	r4,r4,16
 81328dc:	9c000017 	ldw	r16,0(r19)
 81328e0:	812c2b80 	call	812c2b8 <__mulsi3>
 81328e4:	b806d43a 	srli	r3,r23,16
 81328e8:	813fffcc 	andi	r4,r16,65535
 81328ec:	1105883a 	add	r2,r2,r4
 81328f0:	10f9883a 	add	fp,r2,r3
 81328f4:	e02ed43a 	srli	r23,fp,16
 81328f8:	b53fe736 	bltu	r22,r20,8132898 <__alt_data_end+0xfc132898>
 81328fc:	af000115 	stw	fp,4(r21)
 8132900:	d8c00017 	ldw	r3,0(sp)
 8132904:	d9000517 	ldw	r4,20(sp)
 8132908:	18c00104 	addi	r3,r3,4
 813290c:	d8c00015 	stw	r3,0(sp)
 8132910:	d8c00117 	ldw	r3,4(sp)
 8132914:	18c00104 	addi	r3,r3,4
 8132918:	d8c00115 	stw	r3,4(sp)
 813291c:	d8c00017 	ldw	r3,0(sp)
 8132920:	193fb136 	bltu	r3,r4,81327e8 <__alt_data_end+0xfc1327e8>
 8132924:	d8c00217 	ldw	r3,8(sp)
 8132928:	00c00c0e 	bge	zero,r3,813295c <__multiply+0x24c>
 813292c:	d8c00317 	ldw	r3,12(sp)
 8132930:	18bfff17 	ldw	r2,-4(r3)
 8132934:	1d7fff04 	addi	r21,r3,-4
 8132938:	10000326 	beq	r2,zero,8132948 <__multiply+0x238>
 813293c:	00000706 	br	813295c <__multiply+0x24c>
 8132940:	a8800017 	ldw	r2,0(r21)
 8132944:	1000051e 	bne	r2,zero,813295c <__multiply+0x24c>
 8132948:	d8c00217 	ldw	r3,8(sp)
 813294c:	ad7fff04 	addi	r21,r21,-4
 8132950:	18ffffc4 	addi	r3,r3,-1
 8132954:	d8c00215 	stw	r3,8(sp)
 8132958:	183ff91e 	bne	r3,zero,8132940 <__alt_data_end+0xfc132940>
 813295c:	d8c00617 	ldw	r3,24(sp)
 8132960:	d9000217 	ldw	r4,8(sp)
 8132964:	1805883a 	mov	r2,r3
 8132968:	19000415 	stw	r4,16(r3)
 813296c:	dfc01017 	ldw	ra,64(sp)
 8132970:	df000f17 	ldw	fp,60(sp)
 8132974:	ddc00e17 	ldw	r23,56(sp)
 8132978:	dd800d17 	ldw	r22,52(sp)
 813297c:	dd400c17 	ldw	r21,48(sp)
 8132980:	dd000b17 	ldw	r20,44(sp)
 8132984:	dcc00a17 	ldw	r19,40(sp)
 8132988:	dc800917 	ldw	r18,36(sp)
 813298c:	dc400817 	ldw	r17,32(sp)
 8132990:	dc000717 	ldw	r16,28(sp)
 8132994:	dec01104 	addi	sp,sp,68
 8132998:	f800283a 	ret

0813299c <__pow5mult>:
 813299c:	defffa04 	addi	sp,sp,-24
 81329a0:	dcc00315 	stw	r19,12(sp)
 81329a4:	dc000015 	stw	r16,0(sp)
 81329a8:	dfc00515 	stw	ra,20(sp)
 81329ac:	dd000415 	stw	r20,16(sp)
 81329b0:	dc800215 	stw	r18,8(sp)
 81329b4:	dc400115 	stw	r17,4(sp)
 81329b8:	308000cc 	andi	r2,r6,3
 81329bc:	3021883a 	mov	r16,r6
 81329c0:	2027883a 	mov	r19,r4
 81329c4:	10002f1e 	bne	r2,zero,8132a84 <__pow5mult+0xe8>
 81329c8:	2825883a 	mov	r18,r5
 81329cc:	8021d0ba 	srai	r16,r16,2
 81329d0:	80001a26 	beq	r16,zero,8132a3c <__pow5mult+0xa0>
 81329d4:	9c401217 	ldw	r17,72(r19)
 81329d8:	8800061e 	bne	r17,zero,81329f4 <__pow5mult+0x58>
 81329dc:	00003406 	br	8132ab0 <__pow5mult+0x114>
 81329e0:	8021d07a 	srai	r16,r16,1
 81329e4:	80001526 	beq	r16,zero,8132a3c <__pow5mult+0xa0>
 81329e8:	88800017 	ldw	r2,0(r17)
 81329ec:	10001c26 	beq	r2,zero,8132a60 <__pow5mult+0xc4>
 81329f0:	1023883a 	mov	r17,r2
 81329f4:	8080004c 	andi	r2,r16,1
 81329f8:	103ff926 	beq	r2,zero,81329e0 <__alt_data_end+0xfc1329e0>
 81329fc:	880d883a 	mov	r6,r17
 8132a00:	900b883a 	mov	r5,r18
 8132a04:	9809883a 	mov	r4,r19
 8132a08:	81327100 	call	8132710 <__multiply>
 8132a0c:	90001b26 	beq	r18,zero,8132a7c <__pow5mult+0xe0>
 8132a10:	91000117 	ldw	r4,4(r18)
 8132a14:	98c01317 	ldw	r3,76(r19)
 8132a18:	8021d07a 	srai	r16,r16,1
 8132a1c:	2109883a 	add	r4,r4,r4
 8132a20:	2109883a 	add	r4,r4,r4
 8132a24:	1907883a 	add	r3,r3,r4
 8132a28:	19000017 	ldw	r4,0(r3)
 8132a2c:	91000015 	stw	r4,0(r18)
 8132a30:	1c800015 	stw	r18,0(r3)
 8132a34:	1025883a 	mov	r18,r2
 8132a38:	803feb1e 	bne	r16,zero,81329e8 <__alt_data_end+0xfc1329e8>
 8132a3c:	9005883a 	mov	r2,r18
 8132a40:	dfc00517 	ldw	ra,20(sp)
 8132a44:	dd000417 	ldw	r20,16(sp)
 8132a48:	dcc00317 	ldw	r19,12(sp)
 8132a4c:	dc800217 	ldw	r18,8(sp)
 8132a50:	dc400117 	ldw	r17,4(sp)
 8132a54:	dc000017 	ldw	r16,0(sp)
 8132a58:	dec00604 	addi	sp,sp,24
 8132a5c:	f800283a 	ret
 8132a60:	880d883a 	mov	r6,r17
 8132a64:	880b883a 	mov	r5,r17
 8132a68:	9809883a 	mov	r4,r19
 8132a6c:	81327100 	call	8132710 <__multiply>
 8132a70:	88800015 	stw	r2,0(r17)
 8132a74:	10000015 	stw	zero,0(r2)
 8132a78:	003fdd06 	br	81329f0 <__alt_data_end+0xfc1329f0>
 8132a7c:	1025883a 	mov	r18,r2
 8132a80:	003fd706 	br	81329e0 <__alt_data_end+0xfc1329e0>
 8132a84:	10bfffc4 	addi	r2,r2,-1
 8132a88:	1085883a 	add	r2,r2,r2
 8132a8c:	00c20534 	movhi	r3,2068
 8132a90:	18eef004 	addi	r3,r3,-17472
 8132a94:	1085883a 	add	r2,r2,r2
 8132a98:	1885883a 	add	r2,r3,r2
 8132a9c:	11800017 	ldw	r6,0(r2)
 8132aa0:	000f883a 	mov	r7,zero
 8132aa4:	81323700 	call	8132370 <__multadd>
 8132aa8:	1025883a 	mov	r18,r2
 8132aac:	003fc706 	br	81329cc <__alt_data_end+0xfc1329cc>
 8132ab0:	05000044 	movi	r20,1
 8132ab4:	a00b883a 	mov	r5,r20
 8132ab8:	9809883a 	mov	r4,r19
 8132abc:	81322a00 	call	81322a0 <_Balloc>
 8132ac0:	1023883a 	mov	r17,r2
 8132ac4:	00809c44 	movi	r2,625
 8132ac8:	88800515 	stw	r2,20(r17)
 8132acc:	8d000415 	stw	r20,16(r17)
 8132ad0:	9c401215 	stw	r17,72(r19)
 8132ad4:	88000015 	stw	zero,0(r17)
 8132ad8:	003fc606 	br	81329f4 <__alt_data_end+0xfc1329f4>

08132adc <__lshift>:
 8132adc:	defff904 	addi	sp,sp,-28
 8132ae0:	dd400515 	stw	r21,20(sp)
 8132ae4:	dcc00315 	stw	r19,12(sp)
 8132ae8:	302bd17a 	srai	r21,r6,5
 8132aec:	2cc00417 	ldw	r19,16(r5)
 8132af0:	28800217 	ldw	r2,8(r5)
 8132af4:	dd000415 	stw	r20,16(sp)
 8132af8:	ace7883a 	add	r19,r21,r19
 8132afc:	dc800215 	stw	r18,8(sp)
 8132b00:	dc400115 	stw	r17,4(sp)
 8132b04:	dc000015 	stw	r16,0(sp)
 8132b08:	dfc00615 	stw	ra,24(sp)
 8132b0c:	9c000044 	addi	r16,r19,1
 8132b10:	2823883a 	mov	r17,r5
 8132b14:	3029883a 	mov	r20,r6
 8132b18:	2025883a 	mov	r18,r4
 8132b1c:	29400117 	ldw	r5,4(r5)
 8132b20:	1400030e 	bge	r2,r16,8132b30 <__lshift+0x54>
 8132b24:	1085883a 	add	r2,r2,r2
 8132b28:	29400044 	addi	r5,r5,1
 8132b2c:	143ffd16 	blt	r2,r16,8132b24 <__alt_data_end+0xfc132b24>
 8132b30:	9009883a 	mov	r4,r18
 8132b34:	81322a00 	call	81322a0 <_Balloc>
 8132b38:	10c00504 	addi	r3,r2,20
 8132b3c:	0540070e 	bge	zero,r21,8132b5c <__lshift+0x80>
 8132b40:	ad6b883a 	add	r21,r21,r21
 8132b44:	ad6b883a 	add	r21,r21,r21
 8132b48:	1809883a 	mov	r4,r3
 8132b4c:	1d47883a 	add	r3,r3,r21
 8132b50:	20000015 	stw	zero,0(r4)
 8132b54:	21000104 	addi	r4,r4,4
 8132b58:	193ffd1e 	bne	r3,r4,8132b50 <__alt_data_end+0xfc132b50>
 8132b5c:	8a000417 	ldw	r8,16(r17)
 8132b60:	89000504 	addi	r4,r17,20
 8132b64:	a18007cc 	andi	r6,r20,31
 8132b68:	4211883a 	add	r8,r8,r8
 8132b6c:	4211883a 	add	r8,r8,r8
 8132b70:	2211883a 	add	r8,r4,r8
 8132b74:	30002326 	beq	r6,zero,8132c04 <__lshift+0x128>
 8132b78:	02400804 	movi	r9,32
 8132b7c:	4993c83a 	sub	r9,r9,r6
 8132b80:	000b883a 	mov	r5,zero
 8132b84:	21c00017 	ldw	r7,0(r4)
 8132b88:	1815883a 	mov	r10,r3
 8132b8c:	18c00104 	addi	r3,r3,4
 8132b90:	398e983a 	sll	r7,r7,r6
 8132b94:	21000104 	addi	r4,r4,4
 8132b98:	394ab03a 	or	r5,r7,r5
 8132b9c:	197fff15 	stw	r5,-4(r3)
 8132ba0:	217fff17 	ldw	r5,-4(r4)
 8132ba4:	2a4ad83a 	srl	r5,r5,r9
 8132ba8:	223ff636 	bltu	r4,r8,8132b84 <__alt_data_end+0xfc132b84>
 8132bac:	51400115 	stw	r5,4(r10)
 8132bb0:	28001a1e 	bne	r5,zero,8132c1c <__lshift+0x140>
 8132bb4:	843fffc4 	addi	r16,r16,-1
 8132bb8:	14000415 	stw	r16,16(r2)
 8132bbc:	88000826 	beq	r17,zero,8132be0 <__lshift+0x104>
 8132bc0:	89000117 	ldw	r4,4(r17)
 8132bc4:	90c01317 	ldw	r3,76(r18)
 8132bc8:	2109883a 	add	r4,r4,r4
 8132bcc:	2109883a 	add	r4,r4,r4
 8132bd0:	1907883a 	add	r3,r3,r4
 8132bd4:	19000017 	ldw	r4,0(r3)
 8132bd8:	89000015 	stw	r4,0(r17)
 8132bdc:	1c400015 	stw	r17,0(r3)
 8132be0:	dfc00617 	ldw	ra,24(sp)
 8132be4:	dd400517 	ldw	r21,20(sp)
 8132be8:	dd000417 	ldw	r20,16(sp)
 8132bec:	dcc00317 	ldw	r19,12(sp)
 8132bf0:	dc800217 	ldw	r18,8(sp)
 8132bf4:	dc400117 	ldw	r17,4(sp)
 8132bf8:	dc000017 	ldw	r16,0(sp)
 8132bfc:	dec00704 	addi	sp,sp,28
 8132c00:	f800283a 	ret
 8132c04:	21400017 	ldw	r5,0(r4)
 8132c08:	18c00104 	addi	r3,r3,4
 8132c0c:	21000104 	addi	r4,r4,4
 8132c10:	197fff15 	stw	r5,-4(r3)
 8132c14:	223ffb36 	bltu	r4,r8,8132c04 <__alt_data_end+0xfc132c04>
 8132c18:	003fe606 	br	8132bb4 <__alt_data_end+0xfc132bb4>
 8132c1c:	9c000084 	addi	r16,r19,2
 8132c20:	003fe406 	br	8132bb4 <__alt_data_end+0xfc132bb4>

08132c24 <__mcmp>:
 8132c24:	20800417 	ldw	r2,16(r4)
 8132c28:	28c00417 	ldw	r3,16(r5)
 8132c2c:	10c5c83a 	sub	r2,r2,r3
 8132c30:	1000111e 	bne	r2,zero,8132c78 <__mcmp+0x54>
 8132c34:	18c7883a 	add	r3,r3,r3
 8132c38:	18c7883a 	add	r3,r3,r3
 8132c3c:	21000504 	addi	r4,r4,20
 8132c40:	29400504 	addi	r5,r5,20
 8132c44:	20c5883a 	add	r2,r4,r3
 8132c48:	28cb883a 	add	r5,r5,r3
 8132c4c:	00000106 	br	8132c54 <__mcmp+0x30>
 8132c50:	20800a2e 	bgeu	r4,r2,8132c7c <__mcmp+0x58>
 8132c54:	10bfff04 	addi	r2,r2,-4
 8132c58:	297fff04 	addi	r5,r5,-4
 8132c5c:	11800017 	ldw	r6,0(r2)
 8132c60:	28c00017 	ldw	r3,0(r5)
 8132c64:	30fffa26 	beq	r6,r3,8132c50 <__alt_data_end+0xfc132c50>
 8132c68:	30c00236 	bltu	r6,r3,8132c74 <__mcmp+0x50>
 8132c6c:	00800044 	movi	r2,1
 8132c70:	f800283a 	ret
 8132c74:	00bfffc4 	movi	r2,-1
 8132c78:	f800283a 	ret
 8132c7c:	0005883a 	mov	r2,zero
 8132c80:	f800283a 	ret

08132c84 <__mdiff>:
 8132c84:	28c00417 	ldw	r3,16(r5)
 8132c88:	30800417 	ldw	r2,16(r6)
 8132c8c:	defffa04 	addi	sp,sp,-24
 8132c90:	dcc00315 	stw	r19,12(sp)
 8132c94:	dc800215 	stw	r18,8(sp)
 8132c98:	dfc00515 	stw	ra,20(sp)
 8132c9c:	dd000415 	stw	r20,16(sp)
 8132ca0:	dc400115 	stw	r17,4(sp)
 8132ca4:	dc000015 	stw	r16,0(sp)
 8132ca8:	1887c83a 	sub	r3,r3,r2
 8132cac:	2825883a 	mov	r18,r5
 8132cb0:	3027883a 	mov	r19,r6
 8132cb4:	1800141e 	bne	r3,zero,8132d08 <__mdiff+0x84>
 8132cb8:	1085883a 	add	r2,r2,r2
 8132cbc:	1085883a 	add	r2,r2,r2
 8132cc0:	2a000504 	addi	r8,r5,20
 8132cc4:	34000504 	addi	r16,r6,20
 8132cc8:	4087883a 	add	r3,r8,r2
 8132ccc:	8085883a 	add	r2,r16,r2
 8132cd0:	00000106 	br	8132cd8 <__mdiff+0x54>
 8132cd4:	40c0592e 	bgeu	r8,r3,8132e3c <__mdiff+0x1b8>
 8132cd8:	18ffff04 	addi	r3,r3,-4
 8132cdc:	10bfff04 	addi	r2,r2,-4
 8132ce0:	19c00017 	ldw	r7,0(r3)
 8132ce4:	11400017 	ldw	r5,0(r2)
 8132ce8:	397ffa26 	beq	r7,r5,8132cd4 <__alt_data_end+0xfc132cd4>
 8132cec:	3940592e 	bgeu	r7,r5,8132e54 <__mdiff+0x1d0>
 8132cf0:	9005883a 	mov	r2,r18
 8132cf4:	4023883a 	mov	r17,r8
 8132cf8:	9825883a 	mov	r18,r19
 8132cfc:	05000044 	movi	r20,1
 8132d00:	1027883a 	mov	r19,r2
 8132d04:	00000406 	br	8132d18 <__mdiff+0x94>
 8132d08:	18005616 	blt	r3,zero,8132e64 <__mdiff+0x1e0>
 8132d0c:	34400504 	addi	r17,r6,20
 8132d10:	2c000504 	addi	r16,r5,20
 8132d14:	0029883a 	mov	r20,zero
 8132d18:	91400117 	ldw	r5,4(r18)
 8132d1c:	81322a00 	call	81322a0 <_Balloc>
 8132d20:	92400417 	ldw	r9,16(r18)
 8132d24:	9b000417 	ldw	r12,16(r19)
 8132d28:	12c00504 	addi	r11,r2,20
 8132d2c:	4a51883a 	add	r8,r9,r9
 8132d30:	6319883a 	add	r12,r12,r12
 8132d34:	4211883a 	add	r8,r8,r8
 8132d38:	6319883a 	add	r12,r12,r12
 8132d3c:	15000315 	stw	r20,12(r2)
 8132d40:	8211883a 	add	r8,r16,r8
 8132d44:	8b19883a 	add	r12,r17,r12
 8132d48:	0007883a 	mov	r3,zero
 8132d4c:	81400017 	ldw	r5,0(r16)
 8132d50:	89c00017 	ldw	r7,0(r17)
 8132d54:	59800104 	addi	r6,r11,4
 8132d58:	293fffcc 	andi	r4,r5,65535
 8132d5c:	20c7883a 	add	r3,r4,r3
 8132d60:	393fffcc 	andi	r4,r7,65535
 8132d64:	1909c83a 	sub	r4,r3,r4
 8132d68:	280ad43a 	srli	r5,r5,16
 8132d6c:	380ed43a 	srli	r7,r7,16
 8132d70:	2007d43a 	srai	r3,r4,16
 8132d74:	213fffcc 	andi	r4,r4,65535
 8132d78:	29cbc83a 	sub	r5,r5,r7
 8132d7c:	28c7883a 	add	r3,r5,r3
 8132d80:	180a943a 	slli	r5,r3,16
 8132d84:	8c400104 	addi	r17,r17,4
 8132d88:	84000104 	addi	r16,r16,4
 8132d8c:	2908b03a 	or	r4,r5,r4
 8132d90:	59000015 	stw	r4,0(r11)
 8132d94:	1807d43a 	srai	r3,r3,16
 8132d98:	3015883a 	mov	r10,r6
 8132d9c:	3017883a 	mov	r11,r6
 8132da0:	8b3fea36 	bltu	r17,r12,8132d4c <__alt_data_end+0xfc132d4c>
 8132da4:	8200162e 	bgeu	r16,r8,8132e00 <__mdiff+0x17c>
 8132da8:	8017883a 	mov	r11,r16
 8132dac:	59400017 	ldw	r5,0(r11)
 8132db0:	31800104 	addi	r6,r6,4
 8132db4:	5ac00104 	addi	r11,r11,4
 8132db8:	293fffcc 	andi	r4,r5,65535
 8132dbc:	20c7883a 	add	r3,r4,r3
 8132dc0:	280ed43a 	srli	r7,r5,16
 8132dc4:	180bd43a 	srai	r5,r3,16
 8132dc8:	193fffcc 	andi	r4,r3,65535
 8132dcc:	3947883a 	add	r3,r7,r5
 8132dd0:	180a943a 	slli	r5,r3,16
 8132dd4:	1807d43a 	srai	r3,r3,16
 8132dd8:	2908b03a 	or	r4,r5,r4
 8132ddc:	313fff15 	stw	r4,-4(r6)
 8132de0:	5a3ff236 	bltu	r11,r8,8132dac <__alt_data_end+0xfc132dac>
 8132de4:	0406303a 	nor	r3,zero,r16
 8132de8:	1a07883a 	add	r3,r3,r8
 8132dec:	1806d0ba 	srli	r3,r3,2
 8132df0:	18c00044 	addi	r3,r3,1
 8132df4:	18c7883a 	add	r3,r3,r3
 8132df8:	18c7883a 	add	r3,r3,r3
 8132dfc:	50d5883a 	add	r10,r10,r3
 8132e00:	50ffff04 	addi	r3,r10,-4
 8132e04:	2000041e 	bne	r4,zero,8132e18 <__mdiff+0x194>
 8132e08:	18ffff04 	addi	r3,r3,-4
 8132e0c:	19000017 	ldw	r4,0(r3)
 8132e10:	4a7fffc4 	addi	r9,r9,-1
 8132e14:	203ffc26 	beq	r4,zero,8132e08 <__alt_data_end+0xfc132e08>
 8132e18:	12400415 	stw	r9,16(r2)
 8132e1c:	dfc00517 	ldw	ra,20(sp)
 8132e20:	dd000417 	ldw	r20,16(sp)
 8132e24:	dcc00317 	ldw	r19,12(sp)
 8132e28:	dc800217 	ldw	r18,8(sp)
 8132e2c:	dc400117 	ldw	r17,4(sp)
 8132e30:	dc000017 	ldw	r16,0(sp)
 8132e34:	dec00604 	addi	sp,sp,24
 8132e38:	f800283a 	ret
 8132e3c:	000b883a 	mov	r5,zero
 8132e40:	81322a00 	call	81322a0 <_Balloc>
 8132e44:	00c00044 	movi	r3,1
 8132e48:	10c00415 	stw	r3,16(r2)
 8132e4c:	10000515 	stw	zero,20(r2)
 8132e50:	003ff206 	br	8132e1c <__alt_data_end+0xfc132e1c>
 8132e54:	8023883a 	mov	r17,r16
 8132e58:	0029883a 	mov	r20,zero
 8132e5c:	4021883a 	mov	r16,r8
 8132e60:	003fad06 	br	8132d18 <__alt_data_end+0xfc132d18>
 8132e64:	9005883a 	mov	r2,r18
 8132e68:	94400504 	addi	r17,r18,20
 8132e6c:	9c000504 	addi	r16,r19,20
 8132e70:	9825883a 	mov	r18,r19
 8132e74:	05000044 	movi	r20,1
 8132e78:	1027883a 	mov	r19,r2
 8132e7c:	003fa606 	br	8132d18 <__alt_data_end+0xfc132d18>

08132e80 <__ulp>:
 8132e80:	295ffc2c 	andhi	r5,r5,32752
 8132e84:	00bf3034 	movhi	r2,64704
 8132e88:	2887883a 	add	r3,r5,r2
 8132e8c:	00c0020e 	bge	zero,r3,8132e98 <__ulp+0x18>
 8132e90:	0005883a 	mov	r2,zero
 8132e94:	f800283a 	ret
 8132e98:	00c7c83a 	sub	r3,zero,r3
 8132e9c:	1807d53a 	srai	r3,r3,20
 8132ea0:	008004c4 	movi	r2,19
 8132ea4:	10c00b0e 	bge	r2,r3,8132ed4 <__ulp+0x54>
 8132ea8:	18bffb04 	addi	r2,r3,-20
 8132eac:	01000784 	movi	r4,30
 8132eb0:	0007883a 	mov	r3,zero
 8132eb4:	20800516 	blt	r4,r2,8132ecc <__ulp+0x4c>
 8132eb8:	010007c4 	movi	r4,31
 8132ebc:	2089c83a 	sub	r4,r4,r2
 8132ec0:	00800044 	movi	r2,1
 8132ec4:	1104983a 	sll	r2,r2,r4
 8132ec8:	f800283a 	ret
 8132ecc:	00800044 	movi	r2,1
 8132ed0:	f800283a 	ret
 8132ed4:	01400234 	movhi	r5,8
 8132ed8:	28c7d83a 	sra	r3,r5,r3
 8132edc:	0005883a 	mov	r2,zero
 8132ee0:	f800283a 	ret

08132ee4 <__b2d>:
 8132ee4:	defffa04 	addi	sp,sp,-24
 8132ee8:	dc000015 	stw	r16,0(sp)
 8132eec:	24000417 	ldw	r16,16(r4)
 8132ef0:	dc400115 	stw	r17,4(sp)
 8132ef4:	24400504 	addi	r17,r4,20
 8132ef8:	8421883a 	add	r16,r16,r16
 8132efc:	8421883a 	add	r16,r16,r16
 8132f00:	8c21883a 	add	r16,r17,r16
 8132f04:	dc800215 	stw	r18,8(sp)
 8132f08:	84bfff17 	ldw	r18,-4(r16)
 8132f0c:	dd000415 	stw	r20,16(sp)
 8132f10:	dcc00315 	stw	r19,12(sp)
 8132f14:	9009883a 	mov	r4,r18
 8132f18:	2829883a 	mov	r20,r5
 8132f1c:	dfc00515 	stw	ra,20(sp)
 8132f20:	81325bc0 	call	81325bc <__hi0bits>
 8132f24:	00c00804 	movi	r3,32
 8132f28:	1889c83a 	sub	r4,r3,r2
 8132f2c:	a1000015 	stw	r4,0(r20)
 8132f30:	01000284 	movi	r4,10
 8132f34:	84ffff04 	addi	r19,r16,-4
 8132f38:	20801216 	blt	r4,r2,8132f84 <__b2d+0xa0>
 8132f3c:	018002c4 	movi	r6,11
 8132f40:	308dc83a 	sub	r6,r6,r2
 8132f44:	9186d83a 	srl	r3,r18,r6
 8132f48:	18cffc34 	orhi	r3,r3,16368
 8132f4c:	8cc0212e 	bgeu	r17,r19,8132fd4 <__b2d+0xf0>
 8132f50:	813ffe17 	ldw	r4,-8(r16)
 8132f54:	218cd83a 	srl	r6,r4,r6
 8132f58:	10800544 	addi	r2,r2,21
 8132f5c:	9084983a 	sll	r2,r18,r2
 8132f60:	1184b03a 	or	r2,r2,r6
 8132f64:	dfc00517 	ldw	ra,20(sp)
 8132f68:	dd000417 	ldw	r20,16(sp)
 8132f6c:	dcc00317 	ldw	r19,12(sp)
 8132f70:	dc800217 	ldw	r18,8(sp)
 8132f74:	dc400117 	ldw	r17,4(sp)
 8132f78:	dc000017 	ldw	r16,0(sp)
 8132f7c:	dec00604 	addi	sp,sp,24
 8132f80:	f800283a 	ret
 8132f84:	8cc00f2e 	bgeu	r17,r19,8132fc4 <__b2d+0xe0>
 8132f88:	117ffd44 	addi	r5,r2,-11
 8132f8c:	80bffe17 	ldw	r2,-8(r16)
 8132f90:	28000e26 	beq	r5,zero,8132fcc <__b2d+0xe8>
 8132f94:	1949c83a 	sub	r4,r3,r5
 8132f98:	9164983a 	sll	r18,r18,r5
 8132f9c:	1106d83a 	srl	r3,r2,r4
 8132fa0:	81bffe04 	addi	r6,r16,-8
 8132fa4:	948ffc34 	orhi	r18,r18,16368
 8132fa8:	90c6b03a 	or	r3,r18,r3
 8132fac:	89800e2e 	bgeu	r17,r6,8132fe8 <__b2d+0x104>
 8132fb0:	81bffd17 	ldw	r6,-12(r16)
 8132fb4:	1144983a 	sll	r2,r2,r5
 8132fb8:	310ad83a 	srl	r5,r6,r4
 8132fbc:	2884b03a 	or	r2,r5,r2
 8132fc0:	003fe806 	br	8132f64 <__alt_data_end+0xfc132f64>
 8132fc4:	10bffd44 	addi	r2,r2,-11
 8132fc8:	1000041e 	bne	r2,zero,8132fdc <__b2d+0xf8>
 8132fcc:	90cffc34 	orhi	r3,r18,16368
 8132fd0:	003fe406 	br	8132f64 <__alt_data_end+0xfc132f64>
 8132fd4:	000d883a 	mov	r6,zero
 8132fd8:	003fdf06 	br	8132f58 <__alt_data_end+0xfc132f58>
 8132fdc:	90a4983a 	sll	r18,r18,r2
 8132fe0:	0005883a 	mov	r2,zero
 8132fe4:	003ff906 	br	8132fcc <__alt_data_end+0xfc132fcc>
 8132fe8:	1144983a 	sll	r2,r2,r5
 8132fec:	003fdd06 	br	8132f64 <__alt_data_end+0xfc132f64>

08132ff0 <__d2b>:
 8132ff0:	defff804 	addi	sp,sp,-32
 8132ff4:	dc000215 	stw	r16,8(sp)
 8132ff8:	3021883a 	mov	r16,r6
 8132ffc:	dc400315 	stw	r17,12(sp)
 8133000:	8022907a 	slli	r17,r16,1
 8133004:	dd000615 	stw	r20,24(sp)
 8133008:	2829883a 	mov	r20,r5
 813300c:	01400044 	movi	r5,1
 8133010:	dcc00515 	stw	r19,20(sp)
 8133014:	dc800415 	stw	r18,16(sp)
 8133018:	dfc00715 	stw	ra,28(sp)
 813301c:	3825883a 	mov	r18,r7
 8133020:	8822d57a 	srli	r17,r17,21
 8133024:	81322a00 	call	81322a0 <_Balloc>
 8133028:	1027883a 	mov	r19,r2
 813302c:	00800434 	movhi	r2,16
 8133030:	10bfffc4 	addi	r2,r2,-1
 8133034:	808c703a 	and	r6,r16,r2
 8133038:	88000126 	beq	r17,zero,8133040 <__d2b+0x50>
 813303c:	31800434 	orhi	r6,r6,16
 8133040:	d9800015 	stw	r6,0(sp)
 8133044:	a0002426 	beq	r20,zero,81330d8 <__d2b+0xe8>
 8133048:	d9000104 	addi	r4,sp,4
 813304c:	dd000115 	stw	r20,4(sp)
 8133050:	81326240 	call	8132624 <__lo0bits>
 8133054:	d8c00017 	ldw	r3,0(sp)
 8133058:	10002f1e 	bne	r2,zero,8133118 <__d2b+0x128>
 813305c:	d9000117 	ldw	r4,4(sp)
 8133060:	99000515 	stw	r4,20(r19)
 8133064:	1821003a 	cmpeq	r16,r3,zero
 8133068:	01000084 	movi	r4,2
 813306c:	2421c83a 	sub	r16,r4,r16
 8133070:	98c00615 	stw	r3,24(r19)
 8133074:	9c000415 	stw	r16,16(r19)
 8133078:	88001f1e 	bne	r17,zero,81330f8 <__d2b+0x108>
 813307c:	10bef384 	addi	r2,r2,-1074
 8133080:	90800015 	stw	r2,0(r18)
 8133084:	00900034 	movhi	r2,16384
 8133088:	10bfffc4 	addi	r2,r2,-1
 813308c:	8085883a 	add	r2,r16,r2
 8133090:	1085883a 	add	r2,r2,r2
 8133094:	1085883a 	add	r2,r2,r2
 8133098:	9885883a 	add	r2,r19,r2
 813309c:	11000517 	ldw	r4,20(r2)
 81330a0:	8020917a 	slli	r16,r16,5
 81330a4:	81325bc0 	call	81325bc <__hi0bits>
 81330a8:	d8c00817 	ldw	r3,32(sp)
 81330ac:	8085c83a 	sub	r2,r16,r2
 81330b0:	18800015 	stw	r2,0(r3)
 81330b4:	9805883a 	mov	r2,r19
 81330b8:	dfc00717 	ldw	ra,28(sp)
 81330bc:	dd000617 	ldw	r20,24(sp)
 81330c0:	dcc00517 	ldw	r19,20(sp)
 81330c4:	dc800417 	ldw	r18,16(sp)
 81330c8:	dc400317 	ldw	r17,12(sp)
 81330cc:	dc000217 	ldw	r16,8(sp)
 81330d0:	dec00804 	addi	sp,sp,32
 81330d4:	f800283a 	ret
 81330d8:	d809883a 	mov	r4,sp
 81330dc:	81326240 	call	8132624 <__lo0bits>
 81330e0:	d8c00017 	ldw	r3,0(sp)
 81330e4:	04000044 	movi	r16,1
 81330e8:	9c000415 	stw	r16,16(r19)
 81330ec:	98c00515 	stw	r3,20(r19)
 81330f0:	10800804 	addi	r2,r2,32
 81330f4:	883fe126 	beq	r17,zero,813307c <__alt_data_end+0xfc13307c>
 81330f8:	00c00d44 	movi	r3,53
 81330fc:	8c7ef344 	addi	r17,r17,-1075
 8133100:	88a3883a 	add	r17,r17,r2
 8133104:	1885c83a 	sub	r2,r3,r2
 8133108:	d8c00817 	ldw	r3,32(sp)
 813310c:	94400015 	stw	r17,0(r18)
 8133110:	18800015 	stw	r2,0(r3)
 8133114:	003fe706 	br	81330b4 <__alt_data_end+0xfc1330b4>
 8133118:	01000804 	movi	r4,32
 813311c:	2089c83a 	sub	r4,r4,r2
 8133120:	1908983a 	sll	r4,r3,r4
 8133124:	d9400117 	ldw	r5,4(sp)
 8133128:	1886d83a 	srl	r3,r3,r2
 813312c:	2148b03a 	or	r4,r4,r5
 8133130:	99000515 	stw	r4,20(r19)
 8133134:	d8c00015 	stw	r3,0(sp)
 8133138:	003fca06 	br	8133064 <__alt_data_end+0xfc133064>

0813313c <__ratio>:
 813313c:	defff904 	addi	sp,sp,-28
 8133140:	dc400315 	stw	r17,12(sp)
 8133144:	2823883a 	mov	r17,r5
 8133148:	d9400104 	addi	r5,sp,4
 813314c:	dfc00615 	stw	ra,24(sp)
 8133150:	dcc00515 	stw	r19,20(sp)
 8133154:	dc800415 	stw	r18,16(sp)
 8133158:	2027883a 	mov	r19,r4
 813315c:	dc000215 	stw	r16,8(sp)
 8133160:	8132ee40 	call	8132ee4 <__b2d>
 8133164:	d80b883a 	mov	r5,sp
 8133168:	8809883a 	mov	r4,r17
 813316c:	1025883a 	mov	r18,r2
 8133170:	1821883a 	mov	r16,r3
 8133174:	8132ee40 	call	8132ee4 <__b2d>
 8133178:	8a000417 	ldw	r8,16(r17)
 813317c:	99000417 	ldw	r4,16(r19)
 8133180:	d9400117 	ldw	r5,4(sp)
 8133184:	2209c83a 	sub	r4,r4,r8
 8133188:	2010917a 	slli	r8,r4,5
 813318c:	d9000017 	ldw	r4,0(sp)
 8133190:	2909c83a 	sub	r4,r5,r4
 8133194:	4109883a 	add	r4,r8,r4
 8133198:	01000e0e 	bge	zero,r4,81331d4 <__ratio+0x98>
 813319c:	2008953a 	slli	r4,r4,20
 81331a0:	2421883a 	add	r16,r4,r16
 81331a4:	100d883a 	mov	r6,r2
 81331a8:	180f883a 	mov	r7,r3
 81331ac:	9009883a 	mov	r4,r18
 81331b0:	800b883a 	mov	r5,r16
 81331b4:	81372000 	call	8137200 <__divdf3>
 81331b8:	dfc00617 	ldw	ra,24(sp)
 81331bc:	dcc00517 	ldw	r19,20(sp)
 81331c0:	dc800417 	ldw	r18,16(sp)
 81331c4:	dc400317 	ldw	r17,12(sp)
 81331c8:	dc000217 	ldw	r16,8(sp)
 81331cc:	dec00704 	addi	sp,sp,28
 81331d0:	f800283a 	ret
 81331d4:	2008953a 	slli	r4,r4,20
 81331d8:	1907c83a 	sub	r3,r3,r4
 81331dc:	003ff106 	br	81331a4 <__alt_data_end+0xfc1331a4>

081331e0 <_mprec_log10>:
 81331e0:	defffe04 	addi	sp,sp,-8
 81331e4:	dc000015 	stw	r16,0(sp)
 81331e8:	dfc00115 	stw	ra,4(sp)
 81331ec:	008005c4 	movi	r2,23
 81331f0:	2021883a 	mov	r16,r4
 81331f4:	11000d0e 	bge	r2,r4,813322c <_mprec_log10+0x4c>
 81331f8:	0005883a 	mov	r2,zero
 81331fc:	00cffc34 	movhi	r3,16368
 8133200:	843fffc4 	addi	r16,r16,-1
 8133204:	000d883a 	mov	r6,zero
 8133208:	01d00934 	movhi	r7,16420
 813320c:	1009883a 	mov	r4,r2
 8133210:	180b883a 	mov	r5,r3
 8133214:	8137e280 	call	8137e28 <__muldf3>
 8133218:	803ff91e 	bne	r16,zero,8133200 <__alt_data_end+0xfc133200>
 813321c:	dfc00117 	ldw	ra,4(sp)
 8133220:	dc000017 	ldw	r16,0(sp)
 8133224:	dec00204 	addi	sp,sp,8
 8133228:	f800283a 	ret
 813322c:	202090fa 	slli	r16,r4,3
 8133230:	00820534 	movhi	r2,2068
 8133234:	10af0704 	addi	r2,r2,-17380
 8133238:	1421883a 	add	r16,r2,r16
 813323c:	80800017 	ldw	r2,0(r16)
 8133240:	80c00117 	ldw	r3,4(r16)
 8133244:	dfc00117 	ldw	ra,4(sp)
 8133248:	dc000017 	ldw	r16,0(sp)
 813324c:	dec00204 	addi	sp,sp,8
 8133250:	f800283a 	ret

08133254 <__copybits>:
 8133254:	297fffc4 	addi	r5,r5,-1
 8133258:	280fd17a 	srai	r7,r5,5
 813325c:	30c00417 	ldw	r3,16(r6)
 8133260:	30800504 	addi	r2,r6,20
 8133264:	39c00044 	addi	r7,r7,1
 8133268:	18c7883a 	add	r3,r3,r3
 813326c:	39cf883a 	add	r7,r7,r7
 8133270:	18c7883a 	add	r3,r3,r3
 8133274:	39cf883a 	add	r7,r7,r7
 8133278:	10c7883a 	add	r3,r2,r3
 813327c:	21cf883a 	add	r7,r4,r7
 8133280:	10c00d2e 	bgeu	r2,r3,81332b8 <__copybits+0x64>
 8133284:	200b883a 	mov	r5,r4
 8133288:	12000017 	ldw	r8,0(r2)
 813328c:	29400104 	addi	r5,r5,4
 8133290:	10800104 	addi	r2,r2,4
 8133294:	2a3fff15 	stw	r8,-4(r5)
 8133298:	10fffb36 	bltu	r2,r3,8133288 <__alt_data_end+0xfc133288>
 813329c:	1985c83a 	sub	r2,r3,r6
 81332a0:	10bffac4 	addi	r2,r2,-21
 81332a4:	1004d0ba 	srli	r2,r2,2
 81332a8:	10800044 	addi	r2,r2,1
 81332ac:	1085883a 	add	r2,r2,r2
 81332b0:	1085883a 	add	r2,r2,r2
 81332b4:	2089883a 	add	r4,r4,r2
 81332b8:	21c0032e 	bgeu	r4,r7,81332c8 <__copybits+0x74>
 81332bc:	20000015 	stw	zero,0(r4)
 81332c0:	21000104 	addi	r4,r4,4
 81332c4:	21fffd36 	bltu	r4,r7,81332bc <__alt_data_end+0xfc1332bc>
 81332c8:	f800283a 	ret

081332cc <__any_on>:
 81332cc:	20c00417 	ldw	r3,16(r4)
 81332d0:	2805d17a 	srai	r2,r5,5
 81332d4:	21000504 	addi	r4,r4,20
 81332d8:	18800d0e 	bge	r3,r2,8133310 <__any_on+0x44>
 81332dc:	18c7883a 	add	r3,r3,r3
 81332e0:	18c7883a 	add	r3,r3,r3
 81332e4:	20c7883a 	add	r3,r4,r3
 81332e8:	20c0192e 	bgeu	r4,r3,8133350 <__any_on+0x84>
 81332ec:	18bfff17 	ldw	r2,-4(r3)
 81332f0:	18ffff04 	addi	r3,r3,-4
 81332f4:	1000041e 	bne	r2,zero,8133308 <__any_on+0x3c>
 81332f8:	20c0142e 	bgeu	r4,r3,813334c <__any_on+0x80>
 81332fc:	18ffff04 	addi	r3,r3,-4
 8133300:	19400017 	ldw	r5,0(r3)
 8133304:	283ffc26 	beq	r5,zero,81332f8 <__alt_data_end+0xfc1332f8>
 8133308:	00800044 	movi	r2,1
 813330c:	f800283a 	ret
 8133310:	10c00a0e 	bge	r2,r3,813333c <__any_on+0x70>
 8133314:	1085883a 	add	r2,r2,r2
 8133318:	1085883a 	add	r2,r2,r2
 813331c:	294007cc 	andi	r5,r5,31
 8133320:	2087883a 	add	r3,r4,r2
 8133324:	283ff026 	beq	r5,zero,81332e8 <__alt_data_end+0xfc1332e8>
 8133328:	19800017 	ldw	r6,0(r3)
 813332c:	3144d83a 	srl	r2,r6,r5
 8133330:	114a983a 	sll	r5,r2,r5
 8133334:	317ff41e 	bne	r6,r5,8133308 <__alt_data_end+0xfc133308>
 8133338:	003feb06 	br	81332e8 <__alt_data_end+0xfc1332e8>
 813333c:	1085883a 	add	r2,r2,r2
 8133340:	1085883a 	add	r2,r2,r2
 8133344:	2087883a 	add	r3,r4,r2
 8133348:	003fe706 	br	81332e8 <__alt_data_end+0xfc1332e8>
 813334c:	f800283a 	ret
 8133350:	0005883a 	mov	r2,zero
 8133354:	f800283a 	ret

08133358 <_realloc_r>:
 8133358:	defff604 	addi	sp,sp,-40
 813335c:	dc800215 	stw	r18,8(sp)
 8133360:	dfc00915 	stw	ra,36(sp)
 8133364:	df000815 	stw	fp,32(sp)
 8133368:	ddc00715 	stw	r23,28(sp)
 813336c:	dd800615 	stw	r22,24(sp)
 8133370:	dd400515 	stw	r21,20(sp)
 8133374:	dd000415 	stw	r20,16(sp)
 8133378:	dcc00315 	stw	r19,12(sp)
 813337c:	dc400115 	stw	r17,4(sp)
 8133380:	dc000015 	stw	r16,0(sp)
 8133384:	3025883a 	mov	r18,r6
 8133388:	2800b726 	beq	r5,zero,8133668 <_realloc_r+0x310>
 813338c:	282b883a 	mov	r21,r5
 8133390:	2029883a 	mov	r20,r4
 8133394:	81397940 	call	8139794 <__malloc_lock>
 8133398:	a8bfff17 	ldw	r2,-4(r21)
 813339c:	043fff04 	movi	r16,-4
 81333a0:	90c002c4 	addi	r3,r18,11
 81333a4:	01000584 	movi	r4,22
 81333a8:	acfffe04 	addi	r19,r21,-8
 81333ac:	1420703a 	and	r16,r2,r16
 81333b0:	20c0332e 	bgeu	r4,r3,8133480 <_realloc_r+0x128>
 81333b4:	047ffe04 	movi	r17,-8
 81333b8:	1c62703a 	and	r17,r3,r17
 81333bc:	8807883a 	mov	r3,r17
 81333c0:	88005816 	blt	r17,zero,8133524 <_realloc_r+0x1cc>
 81333c4:	8c805736 	bltu	r17,r18,8133524 <_realloc_r+0x1cc>
 81333c8:	80c0300e 	bge	r16,r3,813348c <_realloc_r+0x134>
 81333cc:	07020534 	movhi	fp,2068
 81333d0:	e730b504 	addi	fp,fp,-15660
 81333d4:	e1c00217 	ldw	r7,8(fp)
 81333d8:	9c09883a 	add	r4,r19,r16
 81333dc:	22000117 	ldw	r8,4(r4)
 81333e0:	21c06326 	beq	r4,r7,8133570 <_realloc_r+0x218>
 81333e4:	017fff84 	movi	r5,-2
 81333e8:	414a703a 	and	r5,r8,r5
 81333ec:	214b883a 	add	r5,r4,r5
 81333f0:	29800117 	ldw	r6,4(r5)
 81333f4:	3180004c 	andi	r6,r6,1
 81333f8:	30003f26 	beq	r6,zero,81334f8 <_realloc_r+0x1a0>
 81333fc:	1080004c 	andi	r2,r2,1
 8133400:	10008326 	beq	r2,zero,8133610 <_realloc_r+0x2b8>
 8133404:	900b883a 	mov	r5,r18
 8133408:	a009883a 	mov	r4,r20
 813340c:	81315e40 	call	81315e4 <_malloc_r>
 8133410:	1025883a 	mov	r18,r2
 8133414:	10011e26 	beq	r2,zero,8133890 <_realloc_r+0x538>
 8133418:	a93fff17 	ldw	r4,-4(r21)
 813341c:	10fffe04 	addi	r3,r2,-8
 8133420:	00bfff84 	movi	r2,-2
 8133424:	2084703a 	and	r2,r4,r2
 8133428:	9885883a 	add	r2,r19,r2
 813342c:	1880ee26 	beq	r3,r2,81337e8 <_realloc_r+0x490>
 8133430:	81bfff04 	addi	r6,r16,-4
 8133434:	00800904 	movi	r2,36
 8133438:	1180b836 	bltu	r2,r6,813371c <_realloc_r+0x3c4>
 813343c:	00c004c4 	movi	r3,19
 8133440:	19809636 	bltu	r3,r6,813369c <_realloc_r+0x344>
 8133444:	9005883a 	mov	r2,r18
 8133448:	a807883a 	mov	r3,r21
 813344c:	19000017 	ldw	r4,0(r3)
 8133450:	11000015 	stw	r4,0(r2)
 8133454:	19000117 	ldw	r4,4(r3)
 8133458:	11000115 	stw	r4,4(r2)
 813345c:	18c00217 	ldw	r3,8(r3)
 8133460:	10c00215 	stw	r3,8(r2)
 8133464:	a80b883a 	mov	r5,r21
 8133468:	a009883a 	mov	r4,r20
 813346c:	81309ec0 	call	81309ec <_free_r>
 8133470:	a009883a 	mov	r4,r20
 8133474:	81397b80 	call	81397b8 <__malloc_unlock>
 8133478:	9005883a 	mov	r2,r18
 813347c:	00001206 	br	81334c8 <_realloc_r+0x170>
 8133480:	00c00404 	movi	r3,16
 8133484:	1823883a 	mov	r17,r3
 8133488:	003fce06 	br	81333c4 <__alt_data_end+0xfc1333c4>
 813348c:	a825883a 	mov	r18,r21
 8133490:	8445c83a 	sub	r2,r16,r17
 8133494:	00c003c4 	movi	r3,15
 8133498:	18802636 	bltu	r3,r2,8133534 <_realloc_r+0x1dc>
 813349c:	99800117 	ldw	r6,4(r19)
 81334a0:	9c07883a 	add	r3,r19,r16
 81334a4:	3180004c 	andi	r6,r6,1
 81334a8:	3420b03a 	or	r16,r6,r16
 81334ac:	9c000115 	stw	r16,4(r19)
 81334b0:	18800117 	ldw	r2,4(r3)
 81334b4:	10800054 	ori	r2,r2,1
 81334b8:	18800115 	stw	r2,4(r3)
 81334bc:	a009883a 	mov	r4,r20
 81334c0:	81397b80 	call	81397b8 <__malloc_unlock>
 81334c4:	9005883a 	mov	r2,r18
 81334c8:	dfc00917 	ldw	ra,36(sp)
 81334cc:	df000817 	ldw	fp,32(sp)
 81334d0:	ddc00717 	ldw	r23,28(sp)
 81334d4:	dd800617 	ldw	r22,24(sp)
 81334d8:	dd400517 	ldw	r21,20(sp)
 81334dc:	dd000417 	ldw	r20,16(sp)
 81334e0:	dcc00317 	ldw	r19,12(sp)
 81334e4:	dc800217 	ldw	r18,8(sp)
 81334e8:	dc400117 	ldw	r17,4(sp)
 81334ec:	dc000017 	ldw	r16,0(sp)
 81334f0:	dec00a04 	addi	sp,sp,40
 81334f4:	f800283a 	ret
 81334f8:	017fff04 	movi	r5,-4
 81334fc:	414a703a 	and	r5,r8,r5
 8133500:	814d883a 	add	r6,r16,r5
 8133504:	30c01f16 	blt	r6,r3,8133584 <_realloc_r+0x22c>
 8133508:	20800317 	ldw	r2,12(r4)
 813350c:	20c00217 	ldw	r3,8(r4)
 8133510:	a825883a 	mov	r18,r21
 8133514:	3021883a 	mov	r16,r6
 8133518:	18800315 	stw	r2,12(r3)
 813351c:	10c00215 	stw	r3,8(r2)
 8133520:	003fdb06 	br	8133490 <__alt_data_end+0xfc133490>
 8133524:	00800304 	movi	r2,12
 8133528:	a0800015 	stw	r2,0(r20)
 813352c:	0005883a 	mov	r2,zero
 8133530:	003fe506 	br	81334c8 <__alt_data_end+0xfc1334c8>
 8133534:	98c00117 	ldw	r3,4(r19)
 8133538:	9c4b883a 	add	r5,r19,r17
 813353c:	11000054 	ori	r4,r2,1
 8133540:	18c0004c 	andi	r3,r3,1
 8133544:	1c62b03a 	or	r17,r3,r17
 8133548:	9c400115 	stw	r17,4(r19)
 813354c:	29000115 	stw	r4,4(r5)
 8133550:	2885883a 	add	r2,r5,r2
 8133554:	10c00117 	ldw	r3,4(r2)
 8133558:	29400204 	addi	r5,r5,8
 813355c:	a009883a 	mov	r4,r20
 8133560:	18c00054 	ori	r3,r3,1
 8133564:	10c00115 	stw	r3,4(r2)
 8133568:	81309ec0 	call	81309ec <_free_r>
 813356c:	003fd306 	br	81334bc <__alt_data_end+0xfc1334bc>
 8133570:	017fff04 	movi	r5,-4
 8133574:	414a703a 	and	r5,r8,r5
 8133578:	89800404 	addi	r6,r17,16
 813357c:	8151883a 	add	r8,r16,r5
 8133580:	4180590e 	bge	r8,r6,81336e8 <_realloc_r+0x390>
 8133584:	1080004c 	andi	r2,r2,1
 8133588:	103f9e1e 	bne	r2,zero,8133404 <__alt_data_end+0xfc133404>
 813358c:	adbffe17 	ldw	r22,-8(r21)
 8133590:	00bfff04 	movi	r2,-4
 8133594:	9dadc83a 	sub	r22,r19,r22
 8133598:	b1800117 	ldw	r6,4(r22)
 813359c:	3084703a 	and	r2,r6,r2
 81335a0:	20002026 	beq	r4,zero,8133624 <_realloc_r+0x2cc>
 81335a4:	80af883a 	add	r23,r16,r2
 81335a8:	b96f883a 	add	r23,r23,r5
 81335ac:	21c05f26 	beq	r4,r7,813372c <_realloc_r+0x3d4>
 81335b0:	b8c01c16 	blt	r23,r3,8133624 <_realloc_r+0x2cc>
 81335b4:	20800317 	ldw	r2,12(r4)
 81335b8:	20c00217 	ldw	r3,8(r4)
 81335bc:	81bfff04 	addi	r6,r16,-4
 81335c0:	01000904 	movi	r4,36
 81335c4:	18800315 	stw	r2,12(r3)
 81335c8:	10c00215 	stw	r3,8(r2)
 81335cc:	b0c00217 	ldw	r3,8(r22)
 81335d0:	b0800317 	ldw	r2,12(r22)
 81335d4:	b4800204 	addi	r18,r22,8
 81335d8:	18800315 	stw	r2,12(r3)
 81335dc:	10c00215 	stw	r3,8(r2)
 81335e0:	21801b36 	bltu	r4,r6,8133650 <_realloc_r+0x2f8>
 81335e4:	008004c4 	movi	r2,19
 81335e8:	1180352e 	bgeu	r2,r6,81336c0 <_realloc_r+0x368>
 81335ec:	a8800017 	ldw	r2,0(r21)
 81335f0:	b0800215 	stw	r2,8(r22)
 81335f4:	a8800117 	ldw	r2,4(r21)
 81335f8:	b0800315 	stw	r2,12(r22)
 81335fc:	008006c4 	movi	r2,27
 8133600:	11807f36 	bltu	r2,r6,8133800 <_realloc_r+0x4a8>
 8133604:	b0800404 	addi	r2,r22,16
 8133608:	ad400204 	addi	r21,r21,8
 813360c:	00002d06 	br	81336c4 <_realloc_r+0x36c>
 8133610:	adbffe17 	ldw	r22,-8(r21)
 8133614:	00bfff04 	movi	r2,-4
 8133618:	9dadc83a 	sub	r22,r19,r22
 813361c:	b1000117 	ldw	r4,4(r22)
 8133620:	2084703a 	and	r2,r4,r2
 8133624:	b03f7726 	beq	r22,zero,8133404 <__alt_data_end+0xfc133404>
 8133628:	80af883a 	add	r23,r16,r2
 813362c:	b8ff7516 	blt	r23,r3,8133404 <__alt_data_end+0xfc133404>
 8133630:	b0800317 	ldw	r2,12(r22)
 8133634:	b0c00217 	ldw	r3,8(r22)
 8133638:	81bfff04 	addi	r6,r16,-4
 813363c:	01000904 	movi	r4,36
 8133640:	18800315 	stw	r2,12(r3)
 8133644:	10c00215 	stw	r3,8(r2)
 8133648:	b4800204 	addi	r18,r22,8
 813364c:	21bfe52e 	bgeu	r4,r6,81335e4 <__alt_data_end+0xfc1335e4>
 8133650:	a80b883a 	mov	r5,r21
 8133654:	9009883a 	mov	r4,r18
 8133658:	813201c0 	call	813201c <memmove>
 813365c:	b821883a 	mov	r16,r23
 8133660:	b027883a 	mov	r19,r22
 8133664:	003f8a06 	br	8133490 <__alt_data_end+0xfc133490>
 8133668:	300b883a 	mov	r5,r6
 813366c:	dfc00917 	ldw	ra,36(sp)
 8133670:	df000817 	ldw	fp,32(sp)
 8133674:	ddc00717 	ldw	r23,28(sp)
 8133678:	dd800617 	ldw	r22,24(sp)
 813367c:	dd400517 	ldw	r21,20(sp)
 8133680:	dd000417 	ldw	r20,16(sp)
 8133684:	dcc00317 	ldw	r19,12(sp)
 8133688:	dc800217 	ldw	r18,8(sp)
 813368c:	dc400117 	ldw	r17,4(sp)
 8133690:	dc000017 	ldw	r16,0(sp)
 8133694:	dec00a04 	addi	sp,sp,40
 8133698:	81315e41 	jmpi	81315e4 <_malloc_r>
 813369c:	a8c00017 	ldw	r3,0(r21)
 81336a0:	90c00015 	stw	r3,0(r18)
 81336a4:	a8c00117 	ldw	r3,4(r21)
 81336a8:	90c00115 	stw	r3,4(r18)
 81336ac:	00c006c4 	movi	r3,27
 81336b0:	19804536 	bltu	r3,r6,81337c8 <_realloc_r+0x470>
 81336b4:	90800204 	addi	r2,r18,8
 81336b8:	a8c00204 	addi	r3,r21,8
 81336bc:	003f6306 	br	813344c <__alt_data_end+0xfc13344c>
 81336c0:	9005883a 	mov	r2,r18
 81336c4:	a8c00017 	ldw	r3,0(r21)
 81336c8:	b821883a 	mov	r16,r23
 81336cc:	b027883a 	mov	r19,r22
 81336d0:	10c00015 	stw	r3,0(r2)
 81336d4:	a8c00117 	ldw	r3,4(r21)
 81336d8:	10c00115 	stw	r3,4(r2)
 81336dc:	a8c00217 	ldw	r3,8(r21)
 81336e0:	10c00215 	stw	r3,8(r2)
 81336e4:	003f6a06 	br	8133490 <__alt_data_end+0xfc133490>
 81336e8:	9c67883a 	add	r19,r19,r17
 81336ec:	4445c83a 	sub	r2,r8,r17
 81336f0:	e4c00215 	stw	r19,8(fp)
 81336f4:	10800054 	ori	r2,r2,1
 81336f8:	98800115 	stw	r2,4(r19)
 81336fc:	a8bfff17 	ldw	r2,-4(r21)
 8133700:	a009883a 	mov	r4,r20
 8133704:	1080004c 	andi	r2,r2,1
 8133708:	1462b03a 	or	r17,r2,r17
 813370c:	ac7fff15 	stw	r17,-4(r21)
 8133710:	81397b80 	call	81397b8 <__malloc_unlock>
 8133714:	a805883a 	mov	r2,r21
 8133718:	003f6b06 	br	81334c8 <__alt_data_end+0xfc1334c8>
 813371c:	a80b883a 	mov	r5,r21
 8133720:	9009883a 	mov	r4,r18
 8133724:	813201c0 	call	813201c <memmove>
 8133728:	003f4e06 	br	8133464 <__alt_data_end+0xfc133464>
 813372c:	89000404 	addi	r4,r17,16
 8133730:	b93fbc16 	blt	r23,r4,8133624 <__alt_data_end+0xfc133624>
 8133734:	b0800317 	ldw	r2,12(r22)
 8133738:	b0c00217 	ldw	r3,8(r22)
 813373c:	81bfff04 	addi	r6,r16,-4
 8133740:	01000904 	movi	r4,36
 8133744:	18800315 	stw	r2,12(r3)
 8133748:	10c00215 	stw	r3,8(r2)
 813374c:	b4800204 	addi	r18,r22,8
 8133750:	21804336 	bltu	r4,r6,8133860 <_realloc_r+0x508>
 8133754:	008004c4 	movi	r2,19
 8133758:	11803f2e 	bgeu	r2,r6,8133858 <_realloc_r+0x500>
 813375c:	a8800017 	ldw	r2,0(r21)
 8133760:	b0800215 	stw	r2,8(r22)
 8133764:	a8800117 	ldw	r2,4(r21)
 8133768:	b0800315 	stw	r2,12(r22)
 813376c:	008006c4 	movi	r2,27
 8133770:	11803f36 	bltu	r2,r6,8133870 <_realloc_r+0x518>
 8133774:	b0800404 	addi	r2,r22,16
 8133778:	ad400204 	addi	r21,r21,8
 813377c:	a8c00017 	ldw	r3,0(r21)
 8133780:	10c00015 	stw	r3,0(r2)
 8133784:	a8c00117 	ldw	r3,4(r21)
 8133788:	10c00115 	stw	r3,4(r2)
 813378c:	a8c00217 	ldw	r3,8(r21)
 8133790:	10c00215 	stw	r3,8(r2)
 8133794:	b447883a 	add	r3,r22,r17
 8133798:	bc45c83a 	sub	r2,r23,r17
 813379c:	e0c00215 	stw	r3,8(fp)
 81337a0:	10800054 	ori	r2,r2,1
 81337a4:	18800115 	stw	r2,4(r3)
 81337a8:	b0800117 	ldw	r2,4(r22)
 81337ac:	a009883a 	mov	r4,r20
 81337b0:	1080004c 	andi	r2,r2,1
 81337b4:	1462b03a 	or	r17,r2,r17
 81337b8:	b4400115 	stw	r17,4(r22)
 81337bc:	81397b80 	call	81397b8 <__malloc_unlock>
 81337c0:	9005883a 	mov	r2,r18
 81337c4:	003f4006 	br	81334c8 <__alt_data_end+0xfc1334c8>
 81337c8:	a8c00217 	ldw	r3,8(r21)
 81337cc:	90c00215 	stw	r3,8(r18)
 81337d0:	a8c00317 	ldw	r3,12(r21)
 81337d4:	90c00315 	stw	r3,12(r18)
 81337d8:	30801126 	beq	r6,r2,8133820 <_realloc_r+0x4c8>
 81337dc:	90800404 	addi	r2,r18,16
 81337e0:	a8c00404 	addi	r3,r21,16
 81337e4:	003f1906 	br	813344c <__alt_data_end+0xfc13344c>
 81337e8:	90ffff17 	ldw	r3,-4(r18)
 81337ec:	00bfff04 	movi	r2,-4
 81337f0:	a825883a 	mov	r18,r21
 81337f4:	1884703a 	and	r2,r3,r2
 81337f8:	80a1883a 	add	r16,r16,r2
 81337fc:	003f2406 	br	8133490 <__alt_data_end+0xfc133490>
 8133800:	a8800217 	ldw	r2,8(r21)
 8133804:	b0800415 	stw	r2,16(r22)
 8133808:	a8800317 	ldw	r2,12(r21)
 813380c:	b0800515 	stw	r2,20(r22)
 8133810:	31000a26 	beq	r6,r4,813383c <_realloc_r+0x4e4>
 8133814:	b0800604 	addi	r2,r22,24
 8133818:	ad400404 	addi	r21,r21,16
 813381c:	003fa906 	br	81336c4 <__alt_data_end+0xfc1336c4>
 8133820:	a9000417 	ldw	r4,16(r21)
 8133824:	90800604 	addi	r2,r18,24
 8133828:	a8c00604 	addi	r3,r21,24
 813382c:	91000415 	stw	r4,16(r18)
 8133830:	a9000517 	ldw	r4,20(r21)
 8133834:	91000515 	stw	r4,20(r18)
 8133838:	003f0406 	br	813344c <__alt_data_end+0xfc13344c>
 813383c:	a8c00417 	ldw	r3,16(r21)
 8133840:	ad400604 	addi	r21,r21,24
 8133844:	b0800804 	addi	r2,r22,32
 8133848:	b0c00615 	stw	r3,24(r22)
 813384c:	a8ffff17 	ldw	r3,-4(r21)
 8133850:	b0c00715 	stw	r3,28(r22)
 8133854:	003f9b06 	br	81336c4 <__alt_data_end+0xfc1336c4>
 8133858:	9005883a 	mov	r2,r18
 813385c:	003fc706 	br	813377c <__alt_data_end+0xfc13377c>
 8133860:	a80b883a 	mov	r5,r21
 8133864:	9009883a 	mov	r4,r18
 8133868:	813201c0 	call	813201c <memmove>
 813386c:	003fc906 	br	8133794 <__alt_data_end+0xfc133794>
 8133870:	a8800217 	ldw	r2,8(r21)
 8133874:	b0800415 	stw	r2,16(r22)
 8133878:	a8800317 	ldw	r2,12(r21)
 813387c:	b0800515 	stw	r2,20(r22)
 8133880:	31000726 	beq	r6,r4,81338a0 <_realloc_r+0x548>
 8133884:	b0800604 	addi	r2,r22,24
 8133888:	ad400404 	addi	r21,r21,16
 813388c:	003fbb06 	br	813377c <__alt_data_end+0xfc13377c>
 8133890:	a009883a 	mov	r4,r20
 8133894:	81397b80 	call	81397b8 <__malloc_unlock>
 8133898:	0005883a 	mov	r2,zero
 813389c:	003f0a06 	br	81334c8 <__alt_data_end+0xfc1334c8>
 81338a0:	a8c00417 	ldw	r3,16(r21)
 81338a4:	ad400604 	addi	r21,r21,24
 81338a8:	b0800804 	addi	r2,r22,32
 81338ac:	b0c00615 	stw	r3,24(r22)
 81338b0:	a8ffff17 	ldw	r3,-4(r21)
 81338b4:	b0c00715 	stw	r3,28(r22)
 81338b8:	003fb006 	br	813377c <__alt_data_end+0xfc13377c>

081338bc <__fpclassifyd>:
 81338bc:	00a00034 	movhi	r2,32768
 81338c0:	10bfffc4 	addi	r2,r2,-1
 81338c4:	2884703a 	and	r2,r5,r2
 81338c8:	10000726 	beq	r2,zero,81338e8 <__fpclassifyd+0x2c>
 81338cc:	00fffc34 	movhi	r3,65520
 81338d0:	019ff834 	movhi	r6,32736
 81338d4:	28c7883a 	add	r3,r5,r3
 81338d8:	31bfffc4 	addi	r6,r6,-1
 81338dc:	30c00536 	bltu	r6,r3,81338f4 <__fpclassifyd+0x38>
 81338e0:	00800104 	movi	r2,4
 81338e4:	f800283a 	ret
 81338e8:	2000021e 	bne	r4,zero,81338f4 <__fpclassifyd+0x38>
 81338ec:	00800084 	movi	r2,2
 81338f0:	f800283a 	ret
 81338f4:	00dffc34 	movhi	r3,32752
 81338f8:	019ff834 	movhi	r6,32736
 81338fc:	28cb883a 	add	r5,r5,r3
 8133900:	31bfffc4 	addi	r6,r6,-1
 8133904:	317ff62e 	bgeu	r6,r5,81338e0 <__alt_data_end+0xfc1338e0>
 8133908:	01400434 	movhi	r5,16
 813390c:	297fffc4 	addi	r5,r5,-1
 8133910:	28800236 	bltu	r5,r2,813391c <__fpclassifyd+0x60>
 8133914:	008000c4 	movi	r2,3
 8133918:	f800283a 	ret
 813391c:	10c00226 	beq	r2,r3,8133928 <__fpclassifyd+0x6c>
 8133920:	0005883a 	mov	r2,zero
 8133924:	f800283a 	ret
 8133928:	2005003a 	cmpeq	r2,r4,zero
 813392c:	f800283a 	ret

08133930 <_sbrk_r>:
 8133930:	defffd04 	addi	sp,sp,-12
 8133934:	dc000015 	stw	r16,0(sp)
 8133938:	04020534 	movhi	r16,2068
 813393c:	dc400115 	stw	r17,4(sp)
 8133940:	843d0e04 	addi	r16,r16,-3016
 8133944:	2023883a 	mov	r17,r4
 8133948:	2809883a 	mov	r4,r5
 813394c:	dfc00215 	stw	ra,8(sp)
 8133950:	80000015 	stw	zero,0(r16)
 8133954:	81399a00 	call	81399a0 <sbrk>
 8133958:	00ffffc4 	movi	r3,-1
 813395c:	10c00526 	beq	r2,r3,8133974 <_sbrk_r+0x44>
 8133960:	dfc00217 	ldw	ra,8(sp)
 8133964:	dc400117 	ldw	r17,4(sp)
 8133968:	dc000017 	ldw	r16,0(sp)
 813396c:	dec00304 	addi	sp,sp,12
 8133970:	f800283a 	ret
 8133974:	80c00017 	ldw	r3,0(r16)
 8133978:	183ff926 	beq	r3,zero,8133960 <__alt_data_end+0xfc133960>
 813397c:	88c00015 	stw	r3,0(r17)
 8133980:	003ff706 	br	8133960 <__alt_data_end+0xfc133960>

08133984 <__sread>:
 8133984:	defffe04 	addi	sp,sp,-8
 8133988:	dc000015 	stw	r16,0(sp)
 813398c:	2821883a 	mov	r16,r5
 8133990:	2940038f 	ldh	r5,14(r5)
 8133994:	dfc00115 	stw	ra,4(sp)
 8133998:	81358400 	call	8135840 <_read_r>
 813399c:	10000716 	blt	r2,zero,81339bc <__sread+0x38>
 81339a0:	80c01417 	ldw	r3,80(r16)
 81339a4:	1887883a 	add	r3,r3,r2
 81339a8:	80c01415 	stw	r3,80(r16)
 81339ac:	dfc00117 	ldw	ra,4(sp)
 81339b0:	dc000017 	ldw	r16,0(sp)
 81339b4:	dec00204 	addi	sp,sp,8
 81339b8:	f800283a 	ret
 81339bc:	80c0030b 	ldhu	r3,12(r16)
 81339c0:	18fbffcc 	andi	r3,r3,61439
 81339c4:	80c0030d 	sth	r3,12(r16)
 81339c8:	dfc00117 	ldw	ra,4(sp)
 81339cc:	dc000017 	ldw	r16,0(sp)
 81339d0:	dec00204 	addi	sp,sp,8
 81339d4:	f800283a 	ret

081339d8 <__seofread>:
 81339d8:	0005883a 	mov	r2,zero
 81339dc:	f800283a 	ret

081339e0 <__swrite>:
 81339e0:	2880030b 	ldhu	r2,12(r5)
 81339e4:	defffb04 	addi	sp,sp,-20
 81339e8:	dcc00315 	stw	r19,12(sp)
 81339ec:	dc800215 	stw	r18,8(sp)
 81339f0:	dc400115 	stw	r17,4(sp)
 81339f4:	dc000015 	stw	r16,0(sp)
 81339f8:	dfc00415 	stw	ra,16(sp)
 81339fc:	10c0400c 	andi	r3,r2,256
 8133a00:	2821883a 	mov	r16,r5
 8133a04:	2023883a 	mov	r17,r4
 8133a08:	3025883a 	mov	r18,r6
 8133a0c:	3827883a 	mov	r19,r7
 8133a10:	18000526 	beq	r3,zero,8133a28 <__swrite+0x48>
 8133a14:	2940038f 	ldh	r5,14(r5)
 8133a18:	01c00084 	movi	r7,2
 8133a1c:	000d883a 	mov	r6,zero
 8133a20:	81357e00 	call	81357e0 <_lseek_r>
 8133a24:	8080030b 	ldhu	r2,12(r16)
 8133a28:	8140038f 	ldh	r5,14(r16)
 8133a2c:	10bbffcc 	andi	r2,r2,61439
 8133a30:	980f883a 	mov	r7,r19
 8133a34:	900d883a 	mov	r6,r18
 8133a38:	8809883a 	mov	r4,r17
 8133a3c:	8080030d 	sth	r2,12(r16)
 8133a40:	dfc00417 	ldw	ra,16(sp)
 8133a44:	dcc00317 	ldw	r19,12(sp)
 8133a48:	dc800217 	ldw	r18,8(sp)
 8133a4c:	dc400117 	ldw	r17,4(sp)
 8133a50:	dc000017 	ldw	r16,0(sp)
 8133a54:	dec00504 	addi	sp,sp,20
 8133a58:	81352941 	jmpi	8135294 <_write_r>

08133a5c <__sseek>:
 8133a5c:	defffe04 	addi	sp,sp,-8
 8133a60:	dc000015 	stw	r16,0(sp)
 8133a64:	2821883a 	mov	r16,r5
 8133a68:	2940038f 	ldh	r5,14(r5)
 8133a6c:	dfc00115 	stw	ra,4(sp)
 8133a70:	81357e00 	call	81357e0 <_lseek_r>
 8133a74:	00ffffc4 	movi	r3,-1
 8133a78:	10c00826 	beq	r2,r3,8133a9c <__sseek+0x40>
 8133a7c:	80c0030b 	ldhu	r3,12(r16)
 8133a80:	80801415 	stw	r2,80(r16)
 8133a84:	18c40014 	ori	r3,r3,4096
 8133a88:	80c0030d 	sth	r3,12(r16)
 8133a8c:	dfc00117 	ldw	ra,4(sp)
 8133a90:	dc000017 	ldw	r16,0(sp)
 8133a94:	dec00204 	addi	sp,sp,8
 8133a98:	f800283a 	ret
 8133a9c:	80c0030b 	ldhu	r3,12(r16)
 8133aa0:	18fbffcc 	andi	r3,r3,61439
 8133aa4:	80c0030d 	sth	r3,12(r16)
 8133aa8:	dfc00117 	ldw	ra,4(sp)
 8133aac:	dc000017 	ldw	r16,0(sp)
 8133ab0:	dec00204 	addi	sp,sp,8
 8133ab4:	f800283a 	ret

08133ab8 <__sclose>:
 8133ab8:	2940038f 	ldh	r5,14(r5)
 8133abc:	81352f41 	jmpi	81352f4 <_close_r>

08133ac0 <strcmp>:
 8133ac0:	2144b03a 	or	r2,r4,r5
 8133ac4:	108000cc 	andi	r2,r2,3
 8133ac8:	1000171e 	bne	r2,zero,8133b28 <strcmp+0x68>
 8133acc:	20800017 	ldw	r2,0(r4)
 8133ad0:	28c00017 	ldw	r3,0(r5)
 8133ad4:	10c0141e 	bne	r2,r3,8133b28 <strcmp+0x68>
 8133ad8:	027fbff4 	movhi	r9,65279
 8133adc:	4a7fbfc4 	addi	r9,r9,-257
 8133ae0:	0086303a 	nor	r3,zero,r2
 8133ae4:	02202074 	movhi	r8,32897
 8133ae8:	1245883a 	add	r2,r2,r9
 8133aec:	42202004 	addi	r8,r8,-32640
 8133af0:	10c4703a 	and	r2,r2,r3
 8133af4:	1204703a 	and	r2,r2,r8
 8133af8:	10000226 	beq	r2,zero,8133b04 <strcmp+0x44>
 8133afc:	00002306 	br	8133b8c <strcmp+0xcc>
 8133b00:	1000221e 	bne	r2,zero,8133b8c <strcmp+0xcc>
 8133b04:	21000104 	addi	r4,r4,4
 8133b08:	20c00017 	ldw	r3,0(r4)
 8133b0c:	29400104 	addi	r5,r5,4
 8133b10:	29800017 	ldw	r6,0(r5)
 8133b14:	1a4f883a 	add	r7,r3,r9
 8133b18:	00c4303a 	nor	r2,zero,r3
 8133b1c:	3884703a 	and	r2,r7,r2
 8133b20:	1204703a 	and	r2,r2,r8
 8133b24:	19bff626 	beq	r3,r6,8133b00 <__alt_data_end+0xfc133b00>
 8133b28:	20800003 	ldbu	r2,0(r4)
 8133b2c:	10c03fcc 	andi	r3,r2,255
 8133b30:	18c0201c 	xori	r3,r3,128
 8133b34:	18ffe004 	addi	r3,r3,-128
 8133b38:	18000c26 	beq	r3,zero,8133b6c <strcmp+0xac>
 8133b3c:	29800007 	ldb	r6,0(r5)
 8133b40:	19800326 	beq	r3,r6,8133b50 <strcmp+0x90>
 8133b44:	00001306 	br	8133b94 <strcmp+0xd4>
 8133b48:	29800007 	ldb	r6,0(r5)
 8133b4c:	11800b1e 	bne	r2,r6,8133b7c <strcmp+0xbc>
 8133b50:	21000044 	addi	r4,r4,1
 8133b54:	20c00003 	ldbu	r3,0(r4)
 8133b58:	29400044 	addi	r5,r5,1
 8133b5c:	18803fcc 	andi	r2,r3,255
 8133b60:	1080201c 	xori	r2,r2,128
 8133b64:	10bfe004 	addi	r2,r2,-128
 8133b68:	103ff71e 	bne	r2,zero,8133b48 <__alt_data_end+0xfc133b48>
 8133b6c:	0007883a 	mov	r3,zero
 8133b70:	28800003 	ldbu	r2,0(r5)
 8133b74:	1885c83a 	sub	r2,r3,r2
 8133b78:	f800283a 	ret
 8133b7c:	28800003 	ldbu	r2,0(r5)
 8133b80:	18c03fcc 	andi	r3,r3,255
 8133b84:	1885c83a 	sub	r2,r3,r2
 8133b88:	f800283a 	ret
 8133b8c:	0005883a 	mov	r2,zero
 8133b90:	f800283a 	ret
 8133b94:	10c03fcc 	andi	r3,r2,255
 8133b98:	003ff506 	br	8133b70 <__alt_data_end+0xfc133b70>

08133b9c <__sprint_r.part.0>:
 8133b9c:	28801917 	ldw	r2,100(r5)
 8133ba0:	defff604 	addi	sp,sp,-40
 8133ba4:	dd400515 	stw	r21,20(sp)
 8133ba8:	dfc00915 	stw	ra,36(sp)
 8133bac:	df000815 	stw	fp,32(sp)
 8133bb0:	ddc00715 	stw	r23,28(sp)
 8133bb4:	dd800615 	stw	r22,24(sp)
 8133bb8:	dd000415 	stw	r20,16(sp)
 8133bbc:	dcc00315 	stw	r19,12(sp)
 8133bc0:	dc800215 	stw	r18,8(sp)
 8133bc4:	dc400115 	stw	r17,4(sp)
 8133bc8:	dc000015 	stw	r16,0(sp)
 8133bcc:	1088000c 	andi	r2,r2,8192
 8133bd0:	302b883a 	mov	r21,r6
 8133bd4:	10002e26 	beq	r2,zero,8133c90 <__sprint_r.part.0+0xf4>
 8133bd8:	30800217 	ldw	r2,8(r6)
 8133bdc:	35800017 	ldw	r22,0(r6)
 8133be0:	10002926 	beq	r2,zero,8133c88 <__sprint_r.part.0+0xec>
 8133be4:	2827883a 	mov	r19,r5
 8133be8:	2029883a 	mov	r20,r4
 8133bec:	b5c00104 	addi	r23,r22,4
 8133bf0:	04bfffc4 	movi	r18,-1
 8133bf4:	bc400017 	ldw	r17,0(r23)
 8133bf8:	b4000017 	ldw	r16,0(r22)
 8133bfc:	0039883a 	mov	fp,zero
 8133c00:	8822d0ba 	srli	r17,r17,2
 8133c04:	8800031e 	bne	r17,zero,8133c14 <__sprint_r.part.0+0x78>
 8133c08:	00001806 	br	8133c6c <__sprint_r.part.0+0xd0>
 8133c0c:	84000104 	addi	r16,r16,4
 8133c10:	8f001526 	beq	r17,fp,8133c68 <__sprint_r.part.0+0xcc>
 8133c14:	81400017 	ldw	r5,0(r16)
 8133c18:	980d883a 	mov	r6,r19
 8133c1c:	a009883a 	mov	r4,r20
 8133c20:	813568c0 	call	813568c <_fputwc_r>
 8133c24:	e7000044 	addi	fp,fp,1
 8133c28:	14bff81e 	bne	r2,r18,8133c0c <__alt_data_end+0xfc133c0c>
 8133c2c:	9005883a 	mov	r2,r18
 8133c30:	a8000215 	stw	zero,8(r21)
 8133c34:	a8000115 	stw	zero,4(r21)
 8133c38:	dfc00917 	ldw	ra,36(sp)
 8133c3c:	df000817 	ldw	fp,32(sp)
 8133c40:	ddc00717 	ldw	r23,28(sp)
 8133c44:	dd800617 	ldw	r22,24(sp)
 8133c48:	dd400517 	ldw	r21,20(sp)
 8133c4c:	dd000417 	ldw	r20,16(sp)
 8133c50:	dcc00317 	ldw	r19,12(sp)
 8133c54:	dc800217 	ldw	r18,8(sp)
 8133c58:	dc400117 	ldw	r17,4(sp)
 8133c5c:	dc000017 	ldw	r16,0(sp)
 8133c60:	dec00a04 	addi	sp,sp,40
 8133c64:	f800283a 	ret
 8133c68:	a8800217 	ldw	r2,8(r21)
 8133c6c:	8c63883a 	add	r17,r17,r17
 8133c70:	8c63883a 	add	r17,r17,r17
 8133c74:	1445c83a 	sub	r2,r2,r17
 8133c78:	a8800215 	stw	r2,8(r21)
 8133c7c:	b5800204 	addi	r22,r22,8
 8133c80:	bdc00204 	addi	r23,r23,8
 8133c84:	103fdb1e 	bne	r2,zero,8133bf4 <__alt_data_end+0xfc133bf4>
 8133c88:	0005883a 	mov	r2,zero
 8133c8c:	003fe806 	br	8133c30 <__alt_data_end+0xfc133c30>
 8133c90:	8130cfc0 	call	8130cfc <__sfvwrite_r>
 8133c94:	003fe606 	br	8133c30 <__alt_data_end+0xfc133c30>

08133c98 <__sprint_r>:
 8133c98:	30c00217 	ldw	r3,8(r6)
 8133c9c:	18000126 	beq	r3,zero,8133ca4 <__sprint_r+0xc>
 8133ca0:	8133b9c1 	jmpi	8133b9c <__sprint_r.part.0>
 8133ca4:	30000115 	stw	zero,4(r6)
 8133ca8:	0005883a 	mov	r2,zero
 8133cac:	f800283a 	ret

08133cb0 <___vfiprintf_internal_r>:
 8133cb0:	deffca04 	addi	sp,sp,-216
 8133cb4:	dd403115 	stw	r21,196(sp)
 8133cb8:	dfc03515 	stw	ra,212(sp)
 8133cbc:	df003415 	stw	fp,208(sp)
 8133cc0:	ddc03315 	stw	r23,204(sp)
 8133cc4:	dd803215 	stw	r22,200(sp)
 8133cc8:	dd003015 	stw	r20,192(sp)
 8133ccc:	dcc02f15 	stw	r19,188(sp)
 8133cd0:	dc802e15 	stw	r18,184(sp)
 8133cd4:	dc402d15 	stw	r17,180(sp)
 8133cd8:	dc002c15 	stw	r16,176(sp)
 8133cdc:	d9002115 	stw	r4,132(sp)
 8133ce0:	d9402015 	stw	r5,128(sp)
 8133ce4:	d9c02215 	stw	r7,136(sp)
 8133ce8:	302b883a 	mov	r21,r6
 8133cec:	20000226 	beq	r4,zero,8133cf8 <___vfiprintf_internal_r+0x48>
 8133cf0:	20800e17 	ldw	r2,56(r4)
 8133cf4:	1000cf26 	beq	r2,zero,8134034 <___vfiprintf_internal_r+0x384>
 8133cf8:	d8c02017 	ldw	r3,128(sp)
 8133cfc:	1880030b 	ldhu	r2,12(r3)
 8133d00:	10c8000c 	andi	r3,r2,8192
 8133d04:	1800071e 	bne	r3,zero,8133d24 <___vfiprintf_internal_r+0x74>
 8133d08:	d9402017 	ldw	r5,128(sp)
 8133d0c:	00f7ffc4 	movi	r3,-8193
 8133d10:	10880014 	ori	r2,r2,8192
 8133d14:	29001917 	ldw	r4,100(r5)
 8133d18:	2880030d 	sth	r2,12(r5)
 8133d1c:	20c6703a 	and	r3,r4,r3
 8133d20:	28c01915 	stw	r3,100(r5)
 8133d24:	10c0020c 	andi	r3,r2,8
 8133d28:	1800a526 	beq	r3,zero,8133fc0 <___vfiprintf_internal_r+0x310>
 8133d2c:	d9002017 	ldw	r4,128(sp)
 8133d30:	20c00417 	ldw	r3,16(r4)
 8133d34:	1800a226 	beq	r3,zero,8133fc0 <___vfiprintf_internal_r+0x310>
 8133d38:	1080068c 	andi	r2,r2,26
 8133d3c:	00c00284 	movi	r3,10
 8133d40:	10c0a826 	beq	r2,r3,8133fe4 <___vfiprintf_internal_r+0x334>
 8133d44:	d9001a04 	addi	r4,sp,104
 8133d48:	d94019c4 	addi	r5,sp,103
 8133d4c:	04820534 	movhi	r18,2068
 8133d50:	2145c83a 	sub	r2,r4,r5
 8133d54:	94af3904 	addi	r18,r18,-17180
 8133d58:	d9001e15 	stw	r4,120(sp)
 8133d5c:	d9401f15 	stw	r5,124(sp)
 8133d60:	dec01a15 	stw	sp,104(sp)
 8133d64:	d8001c15 	stw	zero,112(sp)
 8133d68:	d8001b15 	stw	zero,108(sp)
 8133d6c:	d811883a 	mov	r8,sp
 8133d70:	d8002615 	stw	zero,152(sp)
 8133d74:	d8002415 	stw	zero,144(sp)
 8133d78:	d8802815 	stw	r2,160(sp)
 8133d7c:	a82d883a 	mov	r22,r21
 8133d80:	b0800007 	ldb	r2,0(r22)
 8133d84:	10040d26 	beq	r2,zero,8134dbc <___vfiprintf_internal_r+0x110c>
 8133d88:	00c00944 	movi	r3,37
 8133d8c:	b029883a 	mov	r20,r22
 8133d90:	10c0021e 	bne	r2,r3,8133d9c <___vfiprintf_internal_r+0xec>
 8133d94:	00001606 	br	8133df0 <___vfiprintf_internal_r+0x140>
 8133d98:	10c00326 	beq	r2,r3,8133da8 <___vfiprintf_internal_r+0xf8>
 8133d9c:	a5000044 	addi	r20,r20,1
 8133da0:	a0800007 	ldb	r2,0(r20)
 8133da4:	103ffc1e 	bne	r2,zero,8133d98 <__alt_data_end+0xfc133d98>
 8133da8:	a5a1c83a 	sub	r16,r20,r22
 8133dac:	80001026 	beq	r16,zero,8133df0 <___vfiprintf_internal_r+0x140>
 8133db0:	d8c01c17 	ldw	r3,112(sp)
 8133db4:	d8801b17 	ldw	r2,108(sp)
 8133db8:	45800015 	stw	r22,0(r8)
 8133dbc:	80c7883a 	add	r3,r16,r3
 8133dc0:	10800044 	addi	r2,r2,1
 8133dc4:	44000115 	stw	r16,4(r8)
 8133dc8:	d8c01c15 	stw	r3,112(sp)
 8133dcc:	d8801b15 	stw	r2,108(sp)
 8133dd0:	010001c4 	movi	r4,7
 8133dd4:	2080750e 	bge	r4,r2,8133fac <___vfiprintf_internal_r+0x2fc>
 8133dd8:	1803951e 	bne	r3,zero,8134c30 <___vfiprintf_internal_r+0xf80>
 8133ddc:	d8c02417 	ldw	r3,144(sp)
 8133de0:	d8001b15 	stw	zero,108(sp)
 8133de4:	d811883a 	mov	r8,sp
 8133de8:	1c07883a 	add	r3,r3,r16
 8133dec:	d8c02415 	stw	r3,144(sp)
 8133df0:	a0800007 	ldb	r2,0(r20)
 8133df4:	1002e026 	beq	r2,zero,8134978 <___vfiprintf_internal_r+0xcc8>
 8133df8:	a5800044 	addi	r22,r20,1
 8133dfc:	a0c00047 	ldb	r3,1(r20)
 8133e00:	d8001d85 	stb	zero,118(sp)
 8133e04:	0027883a 	mov	r19,zero
 8133e08:	d8002305 	stb	zero,140(sp)
 8133e0c:	043fffc4 	movi	r16,-1
 8133e10:	d8002515 	stw	zero,148(sp)
 8133e14:	0023883a 	mov	r17,zero
 8133e18:	05001604 	movi	r20,88
 8133e1c:	05400244 	movi	r21,9
 8133e20:	402f883a 	mov	r23,r8
 8133e24:	b5800044 	addi	r22,r22,1
 8133e28:	18bff804 	addi	r2,r3,-32
 8133e2c:	a0827736 	bltu	r20,r2,813480c <___vfiprintf_internal_r+0xb5c>
 8133e30:	100490ba 	slli	r2,r2,2
 8133e34:	010204f4 	movhi	r4,2067
 8133e38:	210f9204 	addi	r4,r4,15944
 8133e3c:	1105883a 	add	r2,r2,r4
 8133e40:	10800017 	ldw	r2,0(r2)
 8133e44:	1000683a 	jmp	r2
 8133e48:	0813450c 	andi	zero,at,19732
 8133e4c:	0813480c 	andi	zero,at,19744
 8133e50:	0813480c 	andi	zero,at,19744
 8133e54:	08134528 	cmpgeui	zero,at,19732
 8133e58:	0813480c 	andi	zero,at,19744
 8133e5c:	0813480c 	andi	zero,at,19744
 8133e60:	0813480c 	andi	zero,at,19744
 8133e64:	0813480c 	andi	zero,at,19744
 8133e68:	0813480c 	andi	zero,at,19744
 8133e6c:	0813480c 	andi	zero,at,19744
 8133e70:	08134730 	cmpltui	zero,at,19740
 8133e74:	08134754 	ori	zero,at,19741
 8133e78:	0813480c 	andi	zero,at,19744
 8133e7c:	0813404c 	andi	zero,at,19713
 8133e80:	08134768 	cmpgeui	zero,at,19741
 8133e84:	0813480c 	andi	zero,at,19744
 8133e88:	08134534 	orhi	zero,at,19732
 8133e8c:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133e90:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133e94:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133e98:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133e9c:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133ea0:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133ea4:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133ea8:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133eac:	08134540 	call	813454 <__ram_exceptions_end+0x813224>
 8133eb0:	0813480c 	andi	zero,at,19744
 8133eb4:	0813480c 	andi	zero,at,19744
 8133eb8:	0813480c 	andi	zero,at,19744
 8133ebc:	0813480c 	andi	zero,at,19744
 8133ec0:	0813480c 	andi	zero,at,19744
 8133ec4:	0813480c 	andi	zero,at,19744
 8133ec8:	0813480c 	andi	zero,at,19744
 8133ecc:	0813480c 	andi	zero,at,19744
 8133ed0:	0813480c 	andi	zero,at,19744
 8133ed4:	0813480c 	andi	zero,at,19744
 8133ed8:	08134580 	call	813458 <__ram_exceptions_end+0x813228>
 8133edc:	0813480c 	andi	zero,at,19744
 8133ee0:	0813480c 	andi	zero,at,19744
 8133ee4:	0813480c 	andi	zero,at,19744
 8133ee8:	0813480c 	andi	zero,at,19744
 8133eec:	0813480c 	andi	zero,at,19744
 8133ef0:	0813480c 	andi	zero,at,19744
 8133ef4:	0813480c 	andi	zero,at,19744
 8133ef8:	0813480c 	andi	zero,at,19744
 8133efc:	0813480c 	andi	zero,at,19744
 8133f00:	0813480c 	andi	zero,at,19744
 8133f04:	081345bc 	xorhi	zero,at,19734
 8133f08:	0813480c 	andi	zero,at,19744
 8133f0c:	0813480c 	andi	zero,at,19744
 8133f10:	0813480c 	andi	zero,at,19744
 8133f14:	0813480c 	andi	zero,at,19744
 8133f18:	0813480c 	andi	zero,at,19744
 8133f1c:	08134618 	cmpnei	zero,at,19736
 8133f20:	0813480c 	andi	zero,at,19744
 8133f24:	0813480c 	andi	zero,at,19744
 8133f28:	0813468c 	andi	zero,at,19738
 8133f2c:	0813480c 	andi	zero,at,19744
 8133f30:	0813480c 	andi	zero,at,19744
 8133f34:	0813480c 	andi	zero,at,19744
 8133f38:	0813480c 	andi	zero,at,19744
 8133f3c:	0813480c 	andi	zero,at,19744
 8133f40:	0813480c 	andi	zero,at,19744
 8133f44:	0813480c 	andi	zero,at,19744
 8133f48:	0813480c 	andi	zero,at,19744
 8133f4c:	0813480c 	andi	zero,at,19744
 8133f50:	0813480c 	andi	zero,at,19744
 8133f54:	08134434 	orhi	zero,at,19728
 8133f58:	08134464 	muli	zero,at,19729
 8133f5c:	0813480c 	andi	zero,at,19744
 8133f60:	0813480c 	andi	zero,at,19744
 8133f64:	0813480c 	andi	zero,at,19744
 8133f68:	081347b4 	orhi	zero,at,19742
 8133f6c:	08134464 	muli	zero,at,19729
 8133f70:	0813480c 	andi	zero,at,19744
 8133f74:	0813480c 	andi	zero,at,19744
 8133f78:	0813430c 	andi	zero,at,19724
 8133f7c:	0813480c 	andi	zero,at,19744
 8133f80:	08134320 	cmpeqi	zero,at,19724
 8133f84:	08134358 	cmpnei	zero,at,19725
 8133f88:	08134058 	cmpnei	zero,at,19713
 8133f8c:	08134300 	call	813430 <__ram_exceptions_end+0x813200>
 8133f90:	0813480c 	andi	zero,at,19744
 8133f94:	081346cc 	andi	zero,at,19739
 8133f98:	0813480c 	andi	zero,at,19744
 8133f9c:	08134718 	cmpnei	zero,at,19740
 8133fa0:	0813480c 	andi	zero,at,19744
 8133fa4:	0813480c 	andi	zero,at,19744
 8133fa8:	081343dc 	xori	zero,at,19727
 8133fac:	42000204 	addi	r8,r8,8
 8133fb0:	d8c02417 	ldw	r3,144(sp)
 8133fb4:	1c07883a 	add	r3,r3,r16
 8133fb8:	d8c02415 	stw	r3,144(sp)
 8133fbc:	003f8c06 	br	8133df0 <__alt_data_end+0xfc133df0>
 8133fc0:	d9402017 	ldw	r5,128(sp)
 8133fc4:	d9002117 	ldw	r4,132(sp)
 8133fc8:	812e86c0 	call	812e86c <__swsetup_r>
 8133fcc:	1003c11e 	bne	r2,zero,8134ed4 <___vfiprintf_internal_r+0x1224>
 8133fd0:	d9402017 	ldw	r5,128(sp)
 8133fd4:	00c00284 	movi	r3,10
 8133fd8:	2880030b 	ldhu	r2,12(r5)
 8133fdc:	1080068c 	andi	r2,r2,26
 8133fe0:	10ff581e 	bne	r2,r3,8133d44 <__alt_data_end+0xfc133d44>
 8133fe4:	d8c02017 	ldw	r3,128(sp)
 8133fe8:	1880038f 	ldh	r2,14(r3)
 8133fec:	103f5516 	blt	r2,zero,8133d44 <__alt_data_end+0xfc133d44>
 8133ff0:	d9c02217 	ldw	r7,136(sp)
 8133ff4:	d9002117 	ldw	r4,132(sp)
 8133ff8:	a80d883a 	mov	r6,r21
 8133ffc:	180b883a 	mov	r5,r3
 8134000:	81351d80 	call	81351d8 <__sbprintf>
 8134004:	dfc03517 	ldw	ra,212(sp)
 8134008:	df003417 	ldw	fp,208(sp)
 813400c:	ddc03317 	ldw	r23,204(sp)
 8134010:	dd803217 	ldw	r22,200(sp)
 8134014:	dd403117 	ldw	r21,196(sp)
 8134018:	dd003017 	ldw	r20,192(sp)
 813401c:	dcc02f17 	ldw	r19,188(sp)
 8134020:	dc802e17 	ldw	r18,184(sp)
 8134024:	dc402d17 	ldw	r17,180(sp)
 8134028:	dc002c17 	ldw	r16,176(sp)
 813402c:	dec03604 	addi	sp,sp,216
 8134030:	f800283a 	ret
 8134034:	81308780 	call	8130878 <__sinit>
 8134038:	003f2f06 	br	8133cf8 <__alt_data_end+0xfc133cf8>
 813403c:	d8c02517 	ldw	r3,148(sp)
 8134040:	d8802215 	stw	r2,136(sp)
 8134044:	00c7c83a 	sub	r3,zero,r3
 8134048:	d8c02515 	stw	r3,148(sp)
 813404c:	8c400114 	ori	r17,r17,4
 8134050:	b0c00007 	ldb	r3,0(r22)
 8134054:	003f7306 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134058:	00800c04 	movi	r2,48
 813405c:	d9402217 	ldw	r5,136(sp)
 8134060:	d8801d05 	stb	r2,116(sp)
 8134064:	00801e04 	movi	r2,120
 8134068:	d8801d45 	stb	r2,117(sp)
 813406c:	d8001d85 	stb	zero,118(sp)
 8134070:	b811883a 	mov	r8,r23
 8134074:	28c00104 	addi	r3,r5,4
 8134078:	2cc00017 	ldw	r19,0(r5)
 813407c:	0029883a 	mov	r20,zero
 8134080:	88800094 	ori	r2,r17,2
 8134084:	80032516 	blt	r16,zero,8134d1c <___vfiprintf_internal_r+0x106c>
 8134088:	00bfdfc4 	movi	r2,-129
 813408c:	88a2703a 	and	r17,r17,r2
 8134090:	d8c02215 	stw	r3,136(sp)
 8134094:	8c400094 	ori	r17,r17,2
 8134098:	98032a1e 	bne	r19,zero,8134d44 <___vfiprintf_internal_r+0x1094>
 813409c:	00820534 	movhi	r2,2068
 81340a0:	10aed804 	addi	r2,r2,-17568
 81340a4:	d8802615 	stw	r2,152(sp)
 81340a8:	002b883a 	mov	r21,zero
 81340ac:	8001741e 	bne	r16,zero,8134680 <___vfiprintf_internal_r+0x9d0>
 81340b0:	0021883a 	mov	r16,zero
 81340b4:	0029883a 	mov	r20,zero
 81340b8:	ddc01a04 	addi	r23,sp,104
 81340bc:	8027883a 	mov	r19,r16
 81340c0:	8500010e 	bge	r16,r20,81340c8 <___vfiprintf_internal_r+0x418>
 81340c4:	a027883a 	mov	r19,r20
 81340c8:	ad403fcc 	andi	r21,r21,255
 81340cc:	ad40201c 	xori	r21,r21,128
 81340d0:	ad7fe004 	addi	r21,r21,-128
 81340d4:	a8000126 	beq	r21,zero,81340dc <___vfiprintf_internal_r+0x42c>
 81340d8:	9cc00044 	addi	r19,r19,1
 81340dc:	89c0008c 	andi	r7,r17,2
 81340e0:	38000126 	beq	r7,zero,81340e8 <___vfiprintf_internal_r+0x438>
 81340e4:	9cc00084 	addi	r19,r19,2
 81340e8:	88c0210c 	andi	r3,r17,132
 81340ec:	1801dd1e 	bne	r3,zero,8134864 <___vfiprintf_internal_r+0xbb4>
 81340f0:	d9402517 	ldw	r5,148(sp)
 81340f4:	2cebc83a 	sub	r21,r5,r19
 81340f8:	0541da0e 	bge	zero,r21,8134864 <___vfiprintf_internal_r+0xbb4>
 81340fc:	07000404 	movi	fp,16
 8134100:	d8801c17 	ldw	r2,112(sp)
 8134104:	e543be0e 	bge	fp,r21,8135000 <___vfiprintf_internal_r+0x1350>
 8134108:	01420534 	movhi	r5,2068
 813410c:	296f3d04 	addi	r5,r5,-17164
 8134110:	dc002715 	stw	r16,156(sp)
 8134114:	d9801b17 	ldw	r6,108(sp)
 8134118:	a821883a 	mov	r16,r21
 813411c:	d9402315 	stw	r5,140(sp)
 8134120:	028001c4 	movi	r10,7
 8134124:	d9c02915 	stw	r7,164(sp)
 8134128:	182b883a 	mov	r21,r3
 813412c:	00000506 	br	8134144 <___vfiprintf_internal_r+0x494>
 8134130:	31000084 	addi	r4,r6,2
 8134134:	42000204 	addi	r8,r8,8
 8134138:	180d883a 	mov	r6,r3
 813413c:	843ffc04 	addi	r16,r16,-16
 8134140:	e4000f0e 	bge	fp,r16,8134180 <___vfiprintf_internal_r+0x4d0>
 8134144:	01020534 	movhi	r4,2068
 8134148:	10800404 	addi	r2,r2,16
 813414c:	30c00044 	addi	r3,r6,1
 8134150:	212f3d04 	addi	r4,r4,-17164
 8134154:	41000015 	stw	r4,0(r8)
 8134158:	47000115 	stw	fp,4(r8)
 813415c:	d8801c15 	stw	r2,112(sp)
 8134160:	d8c01b15 	stw	r3,108(sp)
 8134164:	50fff20e 	bge	r10,r3,8134130 <__alt_data_end+0xfc134130>
 8134168:	1001b21e 	bne	r2,zero,8134834 <___vfiprintf_internal_r+0xb84>
 813416c:	843ffc04 	addi	r16,r16,-16
 8134170:	000d883a 	mov	r6,zero
 8134174:	01000044 	movi	r4,1
 8134178:	d811883a 	mov	r8,sp
 813417c:	e43ff116 	blt	fp,r16,8134144 <__alt_data_end+0xfc134144>
 8134180:	a807883a 	mov	r3,r21
 8134184:	d9c02917 	ldw	r7,164(sp)
 8134188:	802b883a 	mov	r21,r16
 813418c:	dc002717 	ldw	r16,156(sp)
 8134190:	d9402317 	ldw	r5,140(sp)
 8134194:	a885883a 	add	r2,r21,r2
 8134198:	45400115 	stw	r21,4(r8)
 813419c:	41400015 	stw	r5,0(r8)
 81341a0:	d8801c15 	stw	r2,112(sp)
 81341a4:	d9001b15 	stw	r4,108(sp)
 81341a8:	014001c4 	movi	r5,7
 81341ac:	29026216 	blt	r5,r4,8134b38 <___vfiprintf_internal_r+0xe88>
 81341b0:	d9801d87 	ldb	r6,118(sp)
 81341b4:	42000204 	addi	r8,r8,8
 81341b8:	21400044 	addi	r5,r4,1
 81341bc:	3001ae1e 	bne	r6,zero,8134878 <___vfiprintf_internal_r+0xbc8>
 81341c0:	3801bb26 	beq	r7,zero,81348b0 <___vfiprintf_internal_r+0xc00>
 81341c4:	d9001d04 	addi	r4,sp,116
 81341c8:	10800084 	addi	r2,r2,2
 81341cc:	41000015 	stw	r4,0(r8)
 81341d0:	01000084 	movi	r4,2
 81341d4:	41000115 	stw	r4,4(r8)
 81341d8:	d8801c15 	stw	r2,112(sp)
 81341dc:	d9401b15 	stw	r5,108(sp)
 81341e0:	010001c4 	movi	r4,7
 81341e4:	2142680e 	bge	r4,r5,8134b88 <___vfiprintf_internal_r+0xed8>
 81341e8:	1002b11e 	bne	r2,zero,8134cb0 <___vfiprintf_internal_r+0x1000>
 81341ec:	01802004 	movi	r6,128
 81341f0:	01400044 	movi	r5,1
 81341f4:	0009883a 	mov	r4,zero
 81341f8:	d811883a 	mov	r8,sp
 81341fc:	1981ae1e 	bne	r3,r6,81348b8 <___vfiprintf_internal_r+0xc08>
 8134200:	d8c02517 	ldw	r3,148(sp)
 8134204:	1cf9c83a 	sub	fp,r3,r19
 8134208:	0701ab0e 	bge	zero,fp,81348b8 <___vfiprintf_internal_r+0xc08>
 813420c:	05400404 	movi	r21,16
 8134210:	af03a90e 	bge	r21,fp,81350b8 <___vfiprintf_internal_r+0x1408>
 8134214:	01420534 	movhi	r5,2068
 8134218:	296f3904 	addi	r5,r5,-17180
 813421c:	d9402315 	stw	r5,140(sp)
 8134220:	01c001c4 	movi	r7,7
 8134224:	00000506 	br	813423c <___vfiprintf_internal_r+0x58c>
 8134228:	21800084 	addi	r6,r4,2
 813422c:	42000204 	addi	r8,r8,8
 8134230:	1809883a 	mov	r4,r3
 8134234:	e73ffc04 	addi	fp,fp,-16
 8134238:	af000d0e 	bge	r21,fp,8134270 <___vfiprintf_internal_r+0x5c0>
 813423c:	10800404 	addi	r2,r2,16
 8134240:	20c00044 	addi	r3,r4,1
 8134244:	44800015 	stw	r18,0(r8)
 8134248:	45400115 	stw	r21,4(r8)
 813424c:	d8801c15 	stw	r2,112(sp)
 8134250:	d8c01b15 	stw	r3,108(sp)
 8134254:	38fff40e 	bge	r7,r3,8134228 <__alt_data_end+0xfc134228>
 8134258:	10022b1e 	bne	r2,zero,8134b08 <___vfiprintf_internal_r+0xe58>
 813425c:	e73ffc04 	addi	fp,fp,-16
 8134260:	01800044 	movi	r6,1
 8134264:	0009883a 	mov	r4,zero
 8134268:	d811883a 	mov	r8,sp
 813426c:	af3ff316 	blt	r21,fp,813423c <__alt_data_end+0xfc13423c>
 8134270:	d8c02317 	ldw	r3,140(sp)
 8134274:	1705883a 	add	r2,r2,fp
 8134278:	47000115 	stw	fp,4(r8)
 813427c:	40c00015 	stw	r3,0(r8)
 8134280:	d8801c15 	stw	r2,112(sp)
 8134284:	d9801b15 	stw	r6,108(sp)
 8134288:	00c001c4 	movi	r3,7
 813428c:	19829416 	blt	r3,r6,8134ce0 <___vfiprintf_internal_r+0x1030>
 8134290:	8521c83a 	sub	r16,r16,r20
 8134294:	42000204 	addi	r8,r8,8
 8134298:	31400044 	addi	r5,r6,1
 813429c:	3009883a 	mov	r4,r6
 81342a0:	04018716 	blt	zero,r16,81348c0 <___vfiprintf_internal_r+0xc10>
 81342a4:	a085883a 	add	r2,r20,r2
 81342a8:	45c00015 	stw	r23,0(r8)
 81342ac:	45000115 	stw	r20,4(r8)
 81342b0:	d8801c15 	stw	r2,112(sp)
 81342b4:	d9401b15 	stw	r5,108(sp)
 81342b8:	00c001c4 	movi	r3,7
 81342bc:	1941c20e 	bge	r3,r5,81349c8 <___vfiprintf_internal_r+0xd18>
 81342c0:	1002531e 	bne	r2,zero,8134c10 <___vfiprintf_internal_r+0xf60>
 81342c4:	d8001b15 	stw	zero,108(sp)
 81342c8:	8c40010c 	andi	r17,r17,4
 81342cc:	88023226 	beq	r17,zero,8134b98 <___vfiprintf_internal_r+0xee8>
 81342d0:	d9002517 	ldw	r4,148(sp)
 81342d4:	24e3c83a 	sub	r17,r4,r19
 81342d8:	04432916 	blt	zero,r17,8134f80 <___vfiprintf_internal_r+0x12d0>
 81342dc:	d8802517 	ldw	r2,148(sp)
 81342e0:	14c0010e 	bge	r2,r19,81342e8 <___vfiprintf_internal_r+0x638>
 81342e4:	9805883a 	mov	r2,r19
 81342e8:	d8c02417 	ldw	r3,144(sp)
 81342ec:	1887883a 	add	r3,r3,r2
 81342f0:	d8c02415 	stw	r3,144(sp)
 81342f4:	d8001b15 	stw	zero,108(sp)
 81342f8:	d811883a 	mov	r8,sp
 81342fc:	003ea006 	br	8133d80 <__alt_data_end+0xfc133d80>
 8134300:	8c400814 	ori	r17,r17,32
 8134304:	b0c00007 	ldb	r3,0(r22)
 8134308:	003ec606 	br	8133e24 <__alt_data_end+0xfc133e24>
 813430c:	b0c00007 	ldb	r3,0(r22)
 8134310:	00801b04 	movi	r2,108
 8134314:	18832026 	beq	r3,r2,8134f98 <___vfiprintf_internal_r+0x12e8>
 8134318:	8c400414 	ori	r17,r17,16
 813431c:	003ec106 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134320:	9cc03fcc 	andi	r19,r19,255
 8134324:	b811883a 	mov	r8,r23
 8134328:	9803981e 	bne	r19,zero,813518c <___vfiprintf_internal_r+0x14dc>
 813432c:	8880080c 	andi	r2,r17,32
 8134330:	1002be26 	beq	r2,zero,8134e2c <___vfiprintf_internal_r+0x117c>
 8134334:	d9002217 	ldw	r4,136(sp)
 8134338:	d9402417 	ldw	r5,144(sp)
 813433c:	20800017 	ldw	r2,0(r4)
 8134340:	2807d7fa 	srai	r3,r5,31
 8134344:	21000104 	addi	r4,r4,4
 8134348:	d9002215 	stw	r4,136(sp)
 813434c:	11400015 	stw	r5,0(r2)
 8134350:	10c00115 	stw	r3,4(r2)
 8134354:	003e8a06 	br	8133d80 <__alt_data_end+0xfc133d80>
 8134358:	9cc03fcc 	andi	r19,r19,255
 813435c:	b811883a 	mov	r8,r23
 8134360:	9803871e 	bne	r19,zero,8135180 <___vfiprintf_internal_r+0x14d0>
 8134364:	8880080c 	andi	r2,r17,32
 8134368:	10009a26 	beq	r2,zero,81345d4 <___vfiprintf_internal_r+0x924>
 813436c:	d9002217 	ldw	r4,136(sp)
 8134370:	d8001d85 	stb	zero,118(sp)
 8134374:	20800204 	addi	r2,r4,8
 8134378:	24c00017 	ldw	r19,0(r4)
 813437c:	25000117 	ldw	r20,4(r4)
 8134380:	8002a416 	blt	r16,zero,8134e14 <___vfiprintf_internal_r+0x1164>
 8134384:	013fdfc4 	movi	r4,-129
 8134388:	9d06b03a 	or	r3,r19,r20
 813438c:	d8802215 	stw	r2,136(sp)
 8134390:	8922703a 	and	r17,r17,r4
 8134394:	18009b26 	beq	r3,zero,8134604 <___vfiprintf_internal_r+0x954>
 8134398:	002b883a 	mov	r21,zero
 813439c:	ddc01a04 	addi	r23,sp,104
 81343a0:	9806d0fa 	srli	r3,r19,3
 81343a4:	a008977a 	slli	r4,r20,29
 81343a8:	a028d0fa 	srli	r20,r20,3
 81343ac:	9cc001cc 	andi	r19,r19,7
 81343b0:	98800c04 	addi	r2,r19,48
 81343b4:	bdffffc4 	addi	r23,r23,-1
 81343b8:	20e6b03a 	or	r19,r4,r3
 81343bc:	b8800005 	stb	r2,0(r23)
 81343c0:	9d06b03a 	or	r3,r19,r20
 81343c4:	183ff61e 	bne	r3,zero,81343a0 <__alt_data_end+0xfc1343a0>
 81343c8:	88c0004c 	andi	r3,r17,1
 81343cc:	18021f1e 	bne	r3,zero,8134c4c <___vfiprintf_internal_r+0xf9c>
 81343d0:	d9401e17 	ldw	r5,120(sp)
 81343d4:	2de9c83a 	sub	r20,r5,r23
 81343d8:	003f3806 	br	81340bc <__alt_data_end+0xfc1340bc>
 81343dc:	9cc03fcc 	andi	r19,r19,255
 81343e0:	b811883a 	mov	r8,r23
 81343e4:	98034f1e 	bne	r19,zero,8135124 <___vfiprintf_internal_r+0x1474>
 81343e8:	00820534 	movhi	r2,2068
 81343ec:	10aed804 	addi	r2,r2,-17568
 81343f0:	d8802615 	stw	r2,152(sp)
 81343f4:	8880080c 	andi	r2,r17,32
 81343f8:	1000ac26 	beq	r2,zero,81346ac <___vfiprintf_internal_r+0x9fc>
 81343fc:	d9002217 	ldw	r4,136(sp)
 8134400:	24c00017 	ldw	r19,0(r4)
 8134404:	25000117 	ldw	r20,4(r4)
 8134408:	21000204 	addi	r4,r4,8
 813440c:	d9002215 	stw	r4,136(sp)
 8134410:	8880004c 	andi	r2,r17,1
 8134414:	1001e726 	beq	r2,zero,8134bb4 <___vfiprintf_internal_r+0xf04>
 8134418:	9d04b03a 	or	r2,r19,r20
 813441c:	10025c1e 	bne	r2,zero,8134d90 <___vfiprintf_internal_r+0x10e0>
 8134420:	d8001d85 	stb	zero,118(sp)
 8134424:	80024416 	blt	r16,zero,8134d38 <___vfiprintf_internal_r+0x1088>
 8134428:	00bfdfc4 	movi	r2,-129
 813442c:	88a2703a 	and	r17,r17,r2
 8134430:	003f1d06 	br	81340a8 <__alt_data_end+0xfc1340a8>
 8134434:	d8c02217 	ldw	r3,136(sp)
 8134438:	04c00044 	movi	r19,1
 813443c:	b811883a 	mov	r8,r23
 8134440:	18800017 	ldw	r2,0(r3)
 8134444:	18c00104 	addi	r3,r3,4
 8134448:	d8001d85 	stb	zero,118(sp)
 813444c:	d8801005 	stb	r2,64(sp)
 8134450:	d8c02215 	stw	r3,136(sp)
 8134454:	9829883a 	mov	r20,r19
 8134458:	ddc01004 	addi	r23,sp,64
 813445c:	0021883a 	mov	r16,zero
 8134460:	003f1e06 	br	81340dc <__alt_data_end+0xfc1340dc>
 8134464:	9cc03fcc 	andi	r19,r19,255
 8134468:	b811883a 	mov	r8,r23
 813446c:	9803331e 	bne	r19,zero,813513c <___vfiprintf_internal_r+0x148c>
 8134470:	8880080c 	andi	r2,r17,32
 8134474:	10004826 	beq	r2,zero,8134598 <___vfiprintf_internal_r+0x8e8>
 8134478:	d9002217 	ldw	r4,136(sp)
 813447c:	20800117 	ldw	r2,4(r4)
 8134480:	24c00017 	ldw	r19,0(r4)
 8134484:	21000204 	addi	r4,r4,8
 8134488:	d9002215 	stw	r4,136(sp)
 813448c:	1029883a 	mov	r20,r2
 8134490:	10024c16 	blt	r2,zero,8134dc4 <___vfiprintf_internal_r+0x1114>
 8134494:	dd401d83 	ldbu	r21,118(sp)
 8134498:	80007116 	blt	r16,zero,8134660 <___vfiprintf_internal_r+0x9b0>
 813449c:	00ffdfc4 	movi	r3,-129
 81344a0:	9d04b03a 	or	r2,r19,r20
 81344a4:	88e2703a 	and	r17,r17,r3
 81344a8:	1000d126 	beq	r2,zero,81347f0 <___vfiprintf_internal_r+0xb40>
 81344ac:	a0023526 	beq	r20,zero,8134d84 <___vfiprintf_internal_r+0x10d4>
 81344b0:	ddc01a04 	addi	r23,sp,104
 81344b4:	4039883a 	mov	fp,r8
 81344b8:	9809883a 	mov	r4,r19
 81344bc:	a00b883a 	mov	r5,r20
 81344c0:	01800284 	movi	r6,10
 81344c4:	000f883a 	mov	r7,zero
 81344c8:	81361dc0 	call	81361dc <__umoddi3>
 81344cc:	10800c04 	addi	r2,r2,48
 81344d0:	bdffffc4 	addi	r23,r23,-1
 81344d4:	9809883a 	mov	r4,r19
 81344d8:	a00b883a 	mov	r5,r20
 81344dc:	b8800005 	stb	r2,0(r23)
 81344e0:	01800284 	movi	r6,10
 81344e4:	000f883a 	mov	r7,zero
 81344e8:	8135be00 	call	8135be0 <__udivdi3>
 81344ec:	1027883a 	mov	r19,r2
 81344f0:	10c4b03a 	or	r2,r2,r3
 81344f4:	1829883a 	mov	r20,r3
 81344f8:	103fef1e 	bne	r2,zero,81344b8 <__alt_data_end+0xfc1344b8>
 81344fc:	d9001e17 	ldw	r4,120(sp)
 8134500:	e011883a 	mov	r8,fp
 8134504:	25e9c83a 	sub	r20,r4,r23
 8134508:	003eec06 	br	81340bc <__alt_data_end+0xfc1340bc>
 813450c:	d8802307 	ldb	r2,140(sp)
 8134510:	1002361e 	bne	r2,zero,8134dec <___vfiprintf_internal_r+0x113c>
 8134514:	00c00804 	movi	r3,32
 8134518:	d8c02305 	stb	r3,140(sp)
 813451c:	04c00044 	movi	r19,1
 8134520:	b0c00007 	ldb	r3,0(r22)
 8134524:	003e3f06 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134528:	8c400054 	ori	r17,r17,1
 813452c:	b0c00007 	ldb	r3,0(r22)
 8134530:	003e3c06 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134534:	8c402014 	ori	r17,r17,128
 8134538:	b0c00007 	ldb	r3,0(r22)
 813453c:	003e3906 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134540:	dc002715 	stw	r16,156(sp)
 8134544:	d8002515 	stw	zero,148(sp)
 8134548:	1f3ff404 	addi	fp,r3,-48
 813454c:	0009883a 	mov	r4,zero
 8134550:	b021883a 	mov	r16,r22
 8134554:	01400284 	movi	r5,10
 8134558:	812c2b80 	call	812c2b8 <__mulsi3>
 813455c:	80c00007 	ldb	r3,0(r16)
 8134560:	e089883a 	add	r4,fp,r2
 8134564:	b5800044 	addi	r22,r22,1
 8134568:	1f3ff404 	addi	fp,r3,-48
 813456c:	b021883a 	mov	r16,r22
 8134570:	af3ff82e 	bgeu	r21,fp,8134554 <__alt_data_end+0xfc134554>
 8134574:	d9002515 	stw	r4,148(sp)
 8134578:	dc002717 	ldw	r16,156(sp)
 813457c:	003e2a06 	br	8133e28 <__alt_data_end+0xfc133e28>
 8134580:	9cc03fcc 	andi	r19,r19,255
 8134584:	b811883a 	mov	r8,r23
 8134588:	9802e91e 	bne	r19,zero,8135130 <___vfiprintf_internal_r+0x1480>
 813458c:	8c400414 	ori	r17,r17,16
 8134590:	8880080c 	andi	r2,r17,32
 8134594:	103fb81e 	bne	r2,zero,8134478 <__alt_data_end+0xfc134478>
 8134598:	8880040c 	andi	r2,r17,16
 813459c:	10022e26 	beq	r2,zero,8134e58 <___vfiprintf_internal_r+0x11a8>
 81345a0:	d9402217 	ldw	r5,136(sp)
 81345a4:	2cc00017 	ldw	r19,0(r5)
 81345a8:	29400104 	addi	r5,r5,4
 81345ac:	d9402215 	stw	r5,136(sp)
 81345b0:	9829d7fa 	srai	r20,r19,31
 81345b4:	a005883a 	mov	r2,r20
 81345b8:	003fb506 	br	8134490 <__alt_data_end+0xfc134490>
 81345bc:	9cc03fcc 	andi	r19,r19,255
 81345c0:	b811883a 	mov	r8,r23
 81345c4:	9802fa1e 	bne	r19,zero,81351b0 <___vfiprintf_internal_r+0x1500>
 81345c8:	8c400414 	ori	r17,r17,16
 81345cc:	8880080c 	andi	r2,r17,32
 81345d0:	103f661e 	bne	r2,zero,813436c <__alt_data_end+0xfc13436c>
 81345d4:	8880040c 	andi	r2,r17,16
 81345d8:	10020626 	beq	r2,zero,8134df4 <___vfiprintf_internal_r+0x1144>
 81345dc:	d9402217 	ldw	r5,136(sp)
 81345e0:	d8001d85 	stb	zero,118(sp)
 81345e4:	0029883a 	mov	r20,zero
 81345e8:	28800104 	addi	r2,r5,4
 81345ec:	2cc00017 	ldw	r19,0(r5)
 81345f0:	80020816 	blt	r16,zero,8134e14 <___vfiprintf_internal_r+0x1164>
 81345f4:	00ffdfc4 	movi	r3,-129
 81345f8:	d8802215 	stw	r2,136(sp)
 81345fc:	88e2703a 	and	r17,r17,r3
 8134600:	983f651e 	bne	r19,zero,8134398 <__alt_data_end+0xfc134398>
 8134604:	002b883a 	mov	r21,zero
 8134608:	8002cf26 	beq	r16,zero,8135148 <___vfiprintf_internal_r+0x1498>
 813460c:	0027883a 	mov	r19,zero
 8134610:	0029883a 	mov	r20,zero
 8134614:	003f6106 	br	813439c <__alt_data_end+0xfc13439c>
 8134618:	9cc03fcc 	andi	r19,r19,255
 813461c:	b811883a 	mov	r8,r23
 8134620:	9802e01e 	bne	r19,zero,81351a4 <___vfiprintf_internal_r+0x14f4>
 8134624:	8c400414 	ori	r17,r17,16
 8134628:	8880080c 	andi	r2,r17,32
 813462c:	1000641e 	bne	r2,zero,81347c0 <___vfiprintf_internal_r+0xb10>
 8134630:	8880040c 	andi	r2,r17,16
 8134634:	1001c81e 	bne	r2,zero,8134d58 <___vfiprintf_internal_r+0x10a8>
 8134638:	8880100c 	andi	r2,r17,64
 813463c:	d8001d85 	stb	zero,118(sp)
 8134640:	1002281e 	bne	r2,zero,8134ee4 <___vfiprintf_internal_r+0x1234>
 8134644:	d9002217 	ldw	r4,136(sp)
 8134648:	0029883a 	mov	r20,zero
 813464c:	20800104 	addi	r2,r4,4
 8134650:	24c00017 	ldw	r19,0(r4)
 8134654:	8001c60e 	bge	r16,zero,8134d70 <___vfiprintf_internal_r+0x10c0>
 8134658:	d8802215 	stw	r2,136(sp)
 813465c:	002b883a 	mov	r21,zero
 8134660:	9d04b03a 	or	r2,r19,r20
 8134664:	103f911e 	bne	r2,zero,81344ac <__alt_data_end+0xfc1344ac>
 8134668:	00800044 	movi	r2,1
 813466c:	10803fcc 	andi	r2,r2,255
 8134670:	00c00044 	movi	r3,1
 8134674:	10c05f26 	beq	r2,r3,81347f4 <___vfiprintf_internal_r+0xb44>
 8134678:	00c00084 	movi	r3,2
 813467c:	10ffe31e 	bne	r2,r3,813460c <__alt_data_end+0xfc13460c>
 8134680:	0027883a 	mov	r19,zero
 8134684:	0029883a 	mov	r20,zero
 8134688:	00015106 	br	8134bd0 <___vfiprintf_internal_r+0xf20>
 813468c:	9cc03fcc 	andi	r19,r19,255
 8134690:	b811883a 	mov	r8,r23
 8134694:	9802c01e 	bne	r19,zero,8135198 <___vfiprintf_internal_r+0x14e8>
 8134698:	01420534 	movhi	r5,2068
 813469c:	296ed304 	addi	r5,r5,-17588
 81346a0:	d9402615 	stw	r5,152(sp)
 81346a4:	8880080c 	andi	r2,r17,32
 81346a8:	103f541e 	bne	r2,zero,81343fc <__alt_data_end+0xfc1343fc>
 81346ac:	8880040c 	andi	r2,r17,16
 81346b0:	1001f226 	beq	r2,zero,8134e7c <___vfiprintf_internal_r+0x11cc>
 81346b4:	d9402217 	ldw	r5,136(sp)
 81346b8:	0029883a 	mov	r20,zero
 81346bc:	2cc00017 	ldw	r19,0(r5)
 81346c0:	29400104 	addi	r5,r5,4
 81346c4:	d9402215 	stw	r5,136(sp)
 81346c8:	003f5106 	br	8134410 <__alt_data_end+0xfc134410>
 81346cc:	d8c02217 	ldw	r3,136(sp)
 81346d0:	b811883a 	mov	r8,r23
 81346d4:	d8001d85 	stb	zero,118(sp)
 81346d8:	1dc00017 	ldw	r23,0(r3)
 81346dc:	1f000104 	addi	fp,r3,4
 81346e0:	b8025926 	beq	r23,zero,8135048 <___vfiprintf_internal_r+0x1398>
 81346e4:	80023316 	blt	r16,zero,8134fb4 <___vfiprintf_internal_r+0x1304>
 81346e8:	800d883a 	mov	r6,r16
 81346ec:	000b883a 	mov	r5,zero
 81346f0:	b809883a 	mov	r4,r23
 81346f4:	da002a15 	stw	r8,168(sp)
 81346f8:	8131df00 	call	8131df0 <memchr>
 81346fc:	da002a17 	ldw	r8,168(sp)
 8134700:	10026826 	beq	r2,zero,81350a4 <___vfiprintf_internal_r+0x13f4>
 8134704:	15e9c83a 	sub	r20,r2,r23
 8134708:	dd401d83 	ldbu	r21,118(sp)
 813470c:	df002215 	stw	fp,136(sp)
 8134710:	0021883a 	mov	r16,zero
 8134714:	003e6906 	br	81340bc <__alt_data_end+0xfc1340bc>
 8134718:	9cc03fcc 	andi	r19,r19,255
 813471c:	b811883a 	mov	r8,r23
 8134720:	983fc126 	beq	r19,zero,8134628 <__alt_data_end+0xfc134628>
 8134724:	d8c02303 	ldbu	r3,140(sp)
 8134728:	d8c01d85 	stb	r3,118(sp)
 813472c:	003fbe06 	br	8134628 <__alt_data_end+0xfc134628>
 8134730:	d9002217 	ldw	r4,136(sp)
 8134734:	d9402217 	ldw	r5,136(sp)
 8134738:	21000017 	ldw	r4,0(r4)
 813473c:	28800104 	addi	r2,r5,4
 8134740:	d9002515 	stw	r4,148(sp)
 8134744:	203e3d16 	blt	r4,zero,813403c <__alt_data_end+0xfc13403c>
 8134748:	d8802215 	stw	r2,136(sp)
 813474c:	b0c00007 	ldb	r3,0(r22)
 8134750:	003db406 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134754:	00c00ac4 	movi	r3,43
 8134758:	d8c02305 	stb	r3,140(sp)
 813475c:	04c00044 	movi	r19,1
 8134760:	b0c00007 	ldb	r3,0(r22)
 8134764:	003daf06 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134768:	b0c00007 	ldb	r3,0(r22)
 813476c:	01000a84 	movi	r4,42
 8134770:	b4000044 	addi	r16,r22,1
 8134774:	19025e26 	beq	r3,r4,81350f0 <___vfiprintf_internal_r+0x1440>
 8134778:	1f3ff404 	addi	fp,r3,-48
 813477c:	0009883a 	mov	r4,zero
 8134780:	af025236 	bltu	r21,fp,81350cc <___vfiprintf_internal_r+0x141c>
 8134784:	01400284 	movi	r5,10
 8134788:	812c2b80 	call	812c2b8 <__mulsi3>
 813478c:	80c00007 	ldb	r3,0(r16)
 8134790:	1709883a 	add	r4,r2,fp
 8134794:	85800044 	addi	r22,r16,1
 8134798:	1f3ff404 	addi	fp,r3,-48
 813479c:	b021883a 	mov	r16,r22
 81347a0:	af3ff82e 	bgeu	r21,fp,8134784 <__alt_data_end+0xfc134784>
 81347a4:	2021883a 	mov	r16,r4
 81347a8:	203d9f0e 	bge	r4,zero,8133e28 <__alt_data_end+0xfc133e28>
 81347ac:	043fffc4 	movi	r16,-1
 81347b0:	003d9d06 	br	8133e28 <__alt_data_end+0xfc133e28>
 81347b4:	8c401014 	ori	r17,r17,64
 81347b8:	b0c00007 	ldb	r3,0(r22)
 81347bc:	003d9906 	br	8133e24 <__alt_data_end+0xfc133e24>
 81347c0:	d9002217 	ldw	r4,136(sp)
 81347c4:	d8001d85 	stb	zero,118(sp)
 81347c8:	20c00204 	addi	r3,r4,8
 81347cc:	24c00017 	ldw	r19,0(r4)
 81347d0:	25000117 	ldw	r20,4(r4)
 81347d4:	8001e716 	blt	r16,zero,8134f74 <___vfiprintf_internal_r+0x12c4>
 81347d8:	013fdfc4 	movi	r4,-129
 81347dc:	9d04b03a 	or	r2,r19,r20
 81347e0:	d8c02215 	stw	r3,136(sp)
 81347e4:	8922703a 	and	r17,r17,r4
 81347e8:	002b883a 	mov	r21,zero
 81347ec:	103f2f1e 	bne	r2,zero,81344ac <__alt_data_end+0xfc1344ac>
 81347f0:	803e2f26 	beq	r16,zero,81340b0 <__alt_data_end+0xfc1340b0>
 81347f4:	0027883a 	mov	r19,zero
 81347f8:	9cc00c04 	addi	r19,r19,48
 81347fc:	dcc019c5 	stb	r19,103(sp)
 8134800:	dd002817 	ldw	r20,160(sp)
 8134804:	ddc019c4 	addi	r23,sp,103
 8134808:	003e2c06 	br	81340bc <__alt_data_end+0xfc1340bc>
 813480c:	9cc03fcc 	andi	r19,r19,255
 8134810:	b811883a 	mov	r8,r23
 8134814:	9802571e 	bne	r19,zero,8135174 <___vfiprintf_internal_r+0x14c4>
 8134818:	18005726 	beq	r3,zero,8134978 <___vfiprintf_internal_r+0xcc8>
 813481c:	04c00044 	movi	r19,1
 8134820:	d8c01005 	stb	r3,64(sp)
 8134824:	d8001d85 	stb	zero,118(sp)
 8134828:	9829883a 	mov	r20,r19
 813482c:	ddc01004 	addi	r23,sp,64
 8134830:	003f0a06 	br	813445c <__alt_data_end+0xfc13445c>
 8134834:	d9402017 	ldw	r5,128(sp)
 8134838:	d9002117 	ldw	r4,132(sp)
 813483c:	d9801a04 	addi	r6,sp,104
 8134840:	da802a15 	stw	r10,168(sp)
 8134844:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134848:	da802a17 	ldw	r10,168(sp)
 813484c:	1000501e 	bne	r2,zero,8134990 <___vfiprintf_internal_r+0xce0>
 8134850:	d9801b17 	ldw	r6,108(sp)
 8134854:	d8801c17 	ldw	r2,112(sp)
 8134858:	d811883a 	mov	r8,sp
 813485c:	31000044 	addi	r4,r6,1
 8134860:	003e3606 	br	813413c <__alt_data_end+0xfc13413c>
 8134864:	d9001b17 	ldw	r4,108(sp)
 8134868:	d8801c17 	ldw	r2,112(sp)
 813486c:	21400044 	addi	r5,r4,1
 8134870:	d9801d87 	ldb	r6,118(sp)
 8134874:	303e5226 	beq	r6,zero,81341c0 <__alt_data_end+0xfc1341c0>
 8134878:	01800044 	movi	r6,1
 813487c:	d9001d84 	addi	r4,sp,118
 8134880:	1185883a 	add	r2,r2,r6
 8134884:	41000015 	stw	r4,0(r8)
 8134888:	41800115 	stw	r6,4(r8)
 813488c:	d8801c15 	stw	r2,112(sp)
 8134890:	d9401b15 	stw	r5,108(sp)
 8134894:	010001c4 	movi	r4,7
 8134898:	2140b00e 	bge	r4,r5,8134b5c <___vfiprintf_internal_r+0xeac>
 813489c:	1000f61e 	bne	r2,zero,8134c78 <___vfiprintf_internal_r+0xfc8>
 81348a0:	3800b31e 	bne	r7,zero,8134b70 <___vfiprintf_internal_r+0xec0>
 81348a4:	0009883a 	mov	r4,zero
 81348a8:	300b883a 	mov	r5,r6
 81348ac:	d811883a 	mov	r8,sp
 81348b0:	01802004 	movi	r6,128
 81348b4:	19be5226 	beq	r3,r6,8134200 <__alt_data_end+0xfc134200>
 81348b8:	8521c83a 	sub	r16,r16,r20
 81348bc:	043e790e 	bge	zero,r16,81342a4 <__alt_data_end+0xfc1342a4>
 81348c0:	05400404 	movi	r21,16
 81348c4:	ac01b00e 	bge	r21,r16,8134f88 <___vfiprintf_internal_r+0x12d8>
 81348c8:	01420534 	movhi	r5,2068
 81348cc:	296f3904 	addi	r5,r5,-17180
 81348d0:	d9402315 	stw	r5,140(sp)
 81348d4:	070001c4 	movi	fp,7
 81348d8:	00000506 	br	81348f0 <___vfiprintf_internal_r+0xc40>
 81348dc:	21400084 	addi	r5,r4,2
 81348e0:	42000204 	addi	r8,r8,8
 81348e4:	1809883a 	mov	r4,r3
 81348e8:	843ffc04 	addi	r16,r16,-16
 81348ec:	ac000d0e 	bge	r21,r16,8134924 <___vfiprintf_internal_r+0xc74>
 81348f0:	10800404 	addi	r2,r2,16
 81348f4:	20c00044 	addi	r3,r4,1
 81348f8:	44800015 	stw	r18,0(r8)
 81348fc:	45400115 	stw	r21,4(r8)
 8134900:	d8801c15 	stw	r2,112(sp)
 8134904:	d8c01b15 	stw	r3,108(sp)
 8134908:	e0fff40e 	bge	fp,r3,81348dc <__alt_data_end+0xfc1348dc>
 813490c:	1000101e 	bne	r2,zero,8134950 <___vfiprintf_internal_r+0xca0>
 8134910:	843ffc04 	addi	r16,r16,-16
 8134914:	01400044 	movi	r5,1
 8134918:	0009883a 	mov	r4,zero
 813491c:	d811883a 	mov	r8,sp
 8134920:	ac3ff316 	blt	r21,r16,81348f0 <__alt_data_end+0xfc1348f0>
 8134924:	d8c02317 	ldw	r3,140(sp)
 8134928:	1405883a 	add	r2,r2,r16
 813492c:	44000115 	stw	r16,4(r8)
 8134930:	40c00015 	stw	r3,0(r8)
 8134934:	d8801c15 	stw	r2,112(sp)
 8134938:	d9401b15 	stw	r5,108(sp)
 813493c:	00c001c4 	movi	r3,7
 8134940:	19401916 	blt	r3,r5,81349a8 <___vfiprintf_internal_r+0xcf8>
 8134944:	42000204 	addi	r8,r8,8
 8134948:	29400044 	addi	r5,r5,1
 813494c:	003e5506 	br	81342a4 <__alt_data_end+0xfc1342a4>
 8134950:	d9402017 	ldw	r5,128(sp)
 8134954:	d9002117 	ldw	r4,132(sp)
 8134958:	d9801a04 	addi	r6,sp,104
 813495c:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134960:	10000b1e 	bne	r2,zero,8134990 <___vfiprintf_internal_r+0xce0>
 8134964:	d9001b17 	ldw	r4,108(sp)
 8134968:	d8801c17 	ldw	r2,112(sp)
 813496c:	d811883a 	mov	r8,sp
 8134970:	21400044 	addi	r5,r4,1
 8134974:	003fdc06 	br	81348e8 <__alt_data_end+0xfc1348e8>
 8134978:	d8801c17 	ldw	r2,112(sp)
 813497c:	10000426 	beq	r2,zero,8134990 <___vfiprintf_internal_r+0xce0>
 8134980:	d9402017 	ldw	r5,128(sp)
 8134984:	d9002117 	ldw	r4,132(sp)
 8134988:	d9801a04 	addi	r6,sp,104
 813498c:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134990:	d9402017 	ldw	r5,128(sp)
 8134994:	2880030b 	ldhu	r2,12(r5)
 8134998:	1080100c 	andi	r2,r2,64
 813499c:	10014d1e 	bne	r2,zero,8134ed4 <___vfiprintf_internal_r+0x1224>
 81349a0:	d8802417 	ldw	r2,144(sp)
 81349a4:	003d9706 	br	8134004 <__alt_data_end+0xfc134004>
 81349a8:	1000d21e 	bne	r2,zero,8134cf4 <___vfiprintf_internal_r+0x1044>
 81349ac:	00c00044 	movi	r3,1
 81349b0:	a005883a 	mov	r2,r20
 81349b4:	ddc00015 	stw	r23,0(sp)
 81349b8:	dd000115 	stw	r20,4(sp)
 81349bc:	dd001c15 	stw	r20,112(sp)
 81349c0:	d8c01b15 	stw	r3,108(sp)
 81349c4:	d811883a 	mov	r8,sp
 81349c8:	42000204 	addi	r8,r8,8
 81349cc:	8c40010c 	andi	r17,r17,4
 81349d0:	88004026 	beq	r17,zero,8134ad4 <___vfiprintf_internal_r+0xe24>
 81349d4:	d9002517 	ldw	r4,148(sp)
 81349d8:	24e3c83a 	sub	r17,r4,r19
 81349dc:	04403d0e 	bge	zero,r17,8134ad4 <___vfiprintf_internal_r+0xe24>
 81349e0:	04000404 	movi	r16,16
 81349e4:	8441a90e 	bge	r16,r17,813508c <___vfiprintf_internal_r+0x13dc>
 81349e8:	00c20534 	movhi	r3,2068
 81349ec:	18ef3d04 	addi	r3,r3,-17164
 81349f0:	d9001b17 	ldw	r4,108(sp)
 81349f4:	d8c02315 	stw	r3,140(sp)
 81349f8:	050001c4 	movi	r20,7
 81349fc:	dd402117 	ldw	r21,132(sp)
 8134a00:	ddc02017 	ldw	r23,128(sp)
 8134a04:	00000506 	br	8134a1c <___vfiprintf_internal_r+0xd6c>
 8134a08:	21400084 	addi	r5,r4,2
 8134a0c:	42000204 	addi	r8,r8,8
 8134a10:	1809883a 	mov	r4,r3
 8134a14:	8c7ffc04 	addi	r17,r17,-16
 8134a18:	84400f0e 	bge	r16,r17,8134a58 <___vfiprintf_internal_r+0xda8>
 8134a1c:	01420534 	movhi	r5,2068
 8134a20:	10800404 	addi	r2,r2,16
 8134a24:	20c00044 	addi	r3,r4,1
 8134a28:	296f3d04 	addi	r5,r5,-17164
 8134a2c:	41400015 	stw	r5,0(r8)
 8134a30:	44000115 	stw	r16,4(r8)
 8134a34:	d8801c15 	stw	r2,112(sp)
 8134a38:	d8c01b15 	stw	r3,108(sp)
 8134a3c:	a0fff20e 	bge	r20,r3,8134a08 <__alt_data_end+0xfc134a08>
 8134a40:	1000141e 	bne	r2,zero,8134a94 <___vfiprintf_internal_r+0xde4>
 8134a44:	8c7ffc04 	addi	r17,r17,-16
 8134a48:	01400044 	movi	r5,1
 8134a4c:	0009883a 	mov	r4,zero
 8134a50:	d811883a 	mov	r8,sp
 8134a54:	847ff116 	blt	r16,r17,8134a1c <__alt_data_end+0xfc134a1c>
 8134a58:	d8c02317 	ldw	r3,140(sp)
 8134a5c:	1445883a 	add	r2,r2,r17
 8134a60:	44400115 	stw	r17,4(r8)
 8134a64:	40c00015 	stw	r3,0(r8)
 8134a68:	d8801c15 	stw	r2,112(sp)
 8134a6c:	d9401b15 	stw	r5,108(sp)
 8134a70:	00c001c4 	movi	r3,7
 8134a74:	1940170e 	bge	r3,r5,8134ad4 <___vfiprintf_internal_r+0xe24>
 8134a78:	1000101e 	bne	r2,zero,8134abc <___vfiprintf_internal_r+0xe0c>
 8134a7c:	d8802517 	ldw	r2,148(sp)
 8134a80:	14c11616 	blt	r2,r19,8134edc <___vfiprintf_internal_r+0x122c>
 8134a84:	d9002417 	ldw	r4,144(sp)
 8134a88:	2089883a 	add	r4,r4,r2
 8134a8c:	d9002415 	stw	r4,144(sp)
 8134a90:	003e1806 	br	81342f4 <__alt_data_end+0xfc1342f4>
 8134a94:	d9801a04 	addi	r6,sp,104
 8134a98:	b80b883a 	mov	r5,r23
 8134a9c:	a809883a 	mov	r4,r21
 8134aa0:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134aa4:	103fba1e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134aa8:	d9001b17 	ldw	r4,108(sp)
 8134aac:	d8801c17 	ldw	r2,112(sp)
 8134ab0:	d811883a 	mov	r8,sp
 8134ab4:	21400044 	addi	r5,r4,1
 8134ab8:	003fd606 	br	8134a14 <__alt_data_end+0xfc134a14>
 8134abc:	d9402017 	ldw	r5,128(sp)
 8134ac0:	d9002117 	ldw	r4,132(sp)
 8134ac4:	d9801a04 	addi	r6,sp,104
 8134ac8:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134acc:	103fb01e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134ad0:	d8801c17 	ldw	r2,112(sp)
 8134ad4:	d8c02517 	ldw	r3,148(sp)
 8134ad8:	1cc0010e 	bge	r3,r19,8134ae0 <___vfiprintf_internal_r+0xe30>
 8134adc:	9807883a 	mov	r3,r19
 8134ae0:	d9002417 	ldw	r4,144(sp)
 8134ae4:	20c9883a 	add	r4,r4,r3
 8134ae8:	d9002415 	stw	r4,144(sp)
 8134aec:	103e0126 	beq	r2,zero,81342f4 <__alt_data_end+0xfc1342f4>
 8134af0:	d9402017 	ldw	r5,128(sp)
 8134af4:	d9002117 	ldw	r4,132(sp)
 8134af8:	d9801a04 	addi	r6,sp,104
 8134afc:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134b00:	103dfc26 	beq	r2,zero,81342f4 <__alt_data_end+0xfc1342f4>
 8134b04:	003fa206 	br	8134990 <__alt_data_end+0xfc134990>
 8134b08:	d9402017 	ldw	r5,128(sp)
 8134b0c:	d9002117 	ldw	r4,132(sp)
 8134b10:	d9801a04 	addi	r6,sp,104
 8134b14:	d9c02b15 	stw	r7,172(sp)
 8134b18:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134b1c:	d9c02b17 	ldw	r7,172(sp)
 8134b20:	103f9b1e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134b24:	d9001b17 	ldw	r4,108(sp)
 8134b28:	d8801c17 	ldw	r2,112(sp)
 8134b2c:	d811883a 	mov	r8,sp
 8134b30:	21800044 	addi	r6,r4,1
 8134b34:	003dbf06 	br	8134234 <__alt_data_end+0xfc134234>
 8134b38:	1000d81e 	bne	r2,zero,8134e9c <___vfiprintf_internal_r+0x11ec>
 8134b3c:	d9001d87 	ldb	r4,118(sp)
 8134b40:	20000a26 	beq	r4,zero,8134b6c <___vfiprintf_internal_r+0xebc>
 8134b44:	00800044 	movi	r2,1
 8134b48:	d9001d84 	addi	r4,sp,118
 8134b4c:	100b883a 	mov	r5,r2
 8134b50:	d9000015 	stw	r4,0(sp)
 8134b54:	d8800115 	stw	r2,4(sp)
 8134b58:	d811883a 	mov	r8,sp
 8134b5c:	2809883a 	mov	r4,r5
 8134b60:	42000204 	addi	r8,r8,8
 8134b64:	29400044 	addi	r5,r5,1
 8134b68:	003d9506 	br	81341c0 <__alt_data_end+0xfc1341c0>
 8134b6c:	3800fd26 	beq	r7,zero,8134f64 <___vfiprintf_internal_r+0x12b4>
 8134b70:	00800084 	movi	r2,2
 8134b74:	d9001d04 	addi	r4,sp,116
 8134b78:	d9000015 	stw	r4,0(sp)
 8134b7c:	d8800115 	stw	r2,4(sp)
 8134b80:	01400044 	movi	r5,1
 8134b84:	d811883a 	mov	r8,sp
 8134b88:	2809883a 	mov	r4,r5
 8134b8c:	42000204 	addi	r8,r8,8
 8134b90:	29400044 	addi	r5,r5,1
 8134b94:	003f4606 	br	81348b0 <__alt_data_end+0xfc1348b0>
 8134b98:	d8802517 	ldw	r2,148(sp)
 8134b9c:	14c0010e 	bge	r2,r19,8134ba4 <___vfiprintf_internal_r+0xef4>
 8134ba0:	9805883a 	mov	r2,r19
 8134ba4:	d9402417 	ldw	r5,144(sp)
 8134ba8:	288b883a 	add	r5,r5,r2
 8134bac:	d9402415 	stw	r5,144(sp)
 8134bb0:	003dd006 	br	81342f4 <__alt_data_end+0xfc1342f4>
 8134bb4:	d8001d85 	stb	zero,118(sp)
 8134bb8:	80005d16 	blt	r16,zero,8134d30 <___vfiprintf_internal_r+0x1080>
 8134bbc:	00ffdfc4 	movi	r3,-129
 8134bc0:	9d04b03a 	or	r2,r19,r20
 8134bc4:	88e2703a 	and	r17,r17,r3
 8134bc8:	103d3726 	beq	r2,zero,81340a8 <__alt_data_end+0xfc1340a8>
 8134bcc:	002b883a 	mov	r21,zero
 8134bd0:	d9002617 	ldw	r4,152(sp)
 8134bd4:	ddc01a04 	addi	r23,sp,104
 8134bd8:	988003cc 	andi	r2,r19,15
 8134bdc:	a006973a 	slli	r3,r20,28
 8134be0:	2085883a 	add	r2,r4,r2
 8134be4:	9826d13a 	srli	r19,r19,4
 8134be8:	10800003 	ldbu	r2,0(r2)
 8134bec:	a028d13a 	srli	r20,r20,4
 8134bf0:	bdffffc4 	addi	r23,r23,-1
 8134bf4:	1ce6b03a 	or	r19,r3,r19
 8134bf8:	b8800005 	stb	r2,0(r23)
 8134bfc:	9d04b03a 	or	r2,r19,r20
 8134c00:	103ff51e 	bne	r2,zero,8134bd8 <__alt_data_end+0xfc134bd8>
 8134c04:	d8801e17 	ldw	r2,120(sp)
 8134c08:	15e9c83a 	sub	r20,r2,r23
 8134c0c:	003d2b06 	br	81340bc <__alt_data_end+0xfc1340bc>
 8134c10:	d9402017 	ldw	r5,128(sp)
 8134c14:	d9002117 	ldw	r4,132(sp)
 8134c18:	d9801a04 	addi	r6,sp,104
 8134c1c:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134c20:	103f5b1e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134c24:	d8801c17 	ldw	r2,112(sp)
 8134c28:	d811883a 	mov	r8,sp
 8134c2c:	003f6706 	br	81349cc <__alt_data_end+0xfc1349cc>
 8134c30:	d9402017 	ldw	r5,128(sp)
 8134c34:	d9002117 	ldw	r4,132(sp)
 8134c38:	d9801a04 	addi	r6,sp,104
 8134c3c:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134c40:	103f531e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134c44:	d811883a 	mov	r8,sp
 8134c48:	003cd906 	br	8133fb0 <__alt_data_end+0xfc133fb0>
 8134c4c:	10803fcc 	andi	r2,r2,255
 8134c50:	1080201c 	xori	r2,r2,128
 8134c54:	10bfe004 	addi	r2,r2,-128
 8134c58:	00c00c04 	movi	r3,48
 8134c5c:	10ffe926 	beq	r2,r3,8134c04 <__alt_data_end+0xfc134c04>
 8134c60:	b8ffffc5 	stb	r3,-1(r23)
 8134c64:	d8c01e17 	ldw	r3,120(sp)
 8134c68:	b8bfffc4 	addi	r2,r23,-1
 8134c6c:	102f883a 	mov	r23,r2
 8134c70:	18a9c83a 	sub	r20,r3,r2
 8134c74:	003d1106 	br	81340bc <__alt_data_end+0xfc1340bc>
 8134c78:	d9402017 	ldw	r5,128(sp)
 8134c7c:	d9002117 	ldw	r4,132(sp)
 8134c80:	d9801a04 	addi	r6,sp,104
 8134c84:	d8c02a15 	stw	r3,168(sp)
 8134c88:	d9c02b15 	stw	r7,172(sp)
 8134c8c:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134c90:	d8c02a17 	ldw	r3,168(sp)
 8134c94:	d9c02b17 	ldw	r7,172(sp)
 8134c98:	103f3d1e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134c9c:	d9001b17 	ldw	r4,108(sp)
 8134ca0:	d8801c17 	ldw	r2,112(sp)
 8134ca4:	d811883a 	mov	r8,sp
 8134ca8:	21400044 	addi	r5,r4,1
 8134cac:	003d4406 	br	81341c0 <__alt_data_end+0xfc1341c0>
 8134cb0:	d9402017 	ldw	r5,128(sp)
 8134cb4:	d9002117 	ldw	r4,132(sp)
 8134cb8:	d9801a04 	addi	r6,sp,104
 8134cbc:	d8c02a15 	stw	r3,168(sp)
 8134cc0:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134cc4:	d8c02a17 	ldw	r3,168(sp)
 8134cc8:	103f311e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134ccc:	d9001b17 	ldw	r4,108(sp)
 8134cd0:	d8801c17 	ldw	r2,112(sp)
 8134cd4:	d811883a 	mov	r8,sp
 8134cd8:	21400044 	addi	r5,r4,1
 8134cdc:	003ef406 	br	81348b0 <__alt_data_end+0xfc1348b0>
 8134ce0:	1000bd1e 	bne	r2,zero,8134fd8 <___vfiprintf_internal_r+0x1328>
 8134ce4:	01400044 	movi	r5,1
 8134ce8:	0009883a 	mov	r4,zero
 8134cec:	d811883a 	mov	r8,sp
 8134cf0:	003ef106 	br	81348b8 <__alt_data_end+0xfc1348b8>
 8134cf4:	d9402017 	ldw	r5,128(sp)
 8134cf8:	d9002117 	ldw	r4,132(sp)
 8134cfc:	d9801a04 	addi	r6,sp,104
 8134d00:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134d04:	103f221e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134d08:	d9401b17 	ldw	r5,108(sp)
 8134d0c:	d8801c17 	ldw	r2,112(sp)
 8134d10:	d811883a 	mov	r8,sp
 8134d14:	29400044 	addi	r5,r5,1
 8134d18:	003d6206 	br	81342a4 <__alt_data_end+0xfc1342a4>
 8134d1c:	01420534 	movhi	r5,2068
 8134d20:	296ed804 	addi	r5,r5,-17568
 8134d24:	d9402615 	stw	r5,152(sp)
 8134d28:	d8c02215 	stw	r3,136(sp)
 8134d2c:	1023883a 	mov	r17,r2
 8134d30:	9d04b03a 	or	r2,r19,r20
 8134d34:	103fa51e 	bne	r2,zero,8134bcc <__alt_data_end+0xfc134bcc>
 8134d38:	002b883a 	mov	r21,zero
 8134d3c:	00800084 	movi	r2,2
 8134d40:	003e4a06 	br	813466c <__alt_data_end+0xfc13466c>
 8134d44:	01420534 	movhi	r5,2068
 8134d48:	296ed804 	addi	r5,r5,-17568
 8134d4c:	002b883a 	mov	r21,zero
 8134d50:	d9402615 	stw	r5,152(sp)
 8134d54:	003f9e06 	br	8134bd0 <__alt_data_end+0xfc134bd0>
 8134d58:	d9402217 	ldw	r5,136(sp)
 8134d5c:	d8001d85 	stb	zero,118(sp)
 8134d60:	0029883a 	mov	r20,zero
 8134d64:	28800104 	addi	r2,r5,4
 8134d68:	2cc00017 	ldw	r19,0(r5)
 8134d6c:	803e3a16 	blt	r16,zero,8134658 <__alt_data_end+0xfc134658>
 8134d70:	00ffdfc4 	movi	r3,-129
 8134d74:	d8802215 	stw	r2,136(sp)
 8134d78:	88e2703a 	and	r17,r17,r3
 8134d7c:	002b883a 	mov	r21,zero
 8134d80:	983e9b26 	beq	r19,zero,81347f0 <__alt_data_end+0xfc1347f0>
 8134d84:	00800244 	movi	r2,9
 8134d88:	14fdc936 	bltu	r2,r19,81344b0 <__alt_data_end+0xfc1344b0>
 8134d8c:	003e9a06 	br	81347f8 <__alt_data_end+0xfc1347f8>
 8134d90:	00800c04 	movi	r2,48
 8134d94:	d8c01d45 	stb	r3,117(sp)
 8134d98:	d8801d05 	stb	r2,116(sp)
 8134d9c:	d8001d85 	stb	zero,118(sp)
 8134da0:	88c00094 	ori	r3,r17,2
 8134da4:	80009c16 	blt	r16,zero,8135018 <___vfiprintf_internal_r+0x1368>
 8134da8:	00bfdfc4 	movi	r2,-129
 8134dac:	88a2703a 	and	r17,r17,r2
 8134db0:	8c400094 	ori	r17,r17,2
 8134db4:	002b883a 	mov	r21,zero
 8134db8:	003f8506 	br	8134bd0 <__alt_data_end+0xfc134bd0>
 8134dbc:	b029883a 	mov	r20,r22
 8134dc0:	003c0b06 	br	8133df0 <__alt_data_end+0xfc133df0>
 8134dc4:	04e7c83a 	sub	r19,zero,r19
 8134dc8:	05400b44 	movi	r21,45
 8134dcc:	9804c03a 	cmpne	r2,r19,zero
 8134dd0:	0529c83a 	sub	r20,zero,r20
 8134dd4:	dd401d85 	stb	r21,118(sp)
 8134dd8:	a0a9c83a 	sub	r20,r20,r2
 8134ddc:	80009716 	blt	r16,zero,813503c <___vfiprintf_internal_r+0x138c>
 8134de0:	00bfdfc4 	movi	r2,-129
 8134de4:	88a2703a 	and	r17,r17,r2
 8134de8:	003db006 	br	81344ac <__alt_data_end+0xfc1344ac>
 8134dec:	b0c00007 	ldb	r3,0(r22)
 8134df0:	003c0c06 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134df4:	8880100c 	andi	r2,r17,64
 8134df8:	d8001d85 	stb	zero,118(sp)
 8134dfc:	1000461e 	bne	r2,zero,8134f18 <___vfiprintf_internal_r+0x1268>
 8134e00:	d9002217 	ldw	r4,136(sp)
 8134e04:	0029883a 	mov	r20,zero
 8134e08:	20800104 	addi	r2,r4,4
 8134e0c:	24c00017 	ldw	r19,0(r4)
 8134e10:	803df80e 	bge	r16,zero,81345f4 <__alt_data_end+0xfc1345f4>
 8134e14:	9d06b03a 	or	r3,r19,r20
 8134e18:	d8802215 	stw	r2,136(sp)
 8134e1c:	183d5e1e 	bne	r3,zero,8134398 <__alt_data_end+0xfc134398>
 8134e20:	002b883a 	mov	r21,zero
 8134e24:	0005883a 	mov	r2,zero
 8134e28:	003e1006 	br	813466c <__alt_data_end+0xfc13466c>
 8134e2c:	8880040c 	andi	r2,r17,16
 8134e30:	1000321e 	bne	r2,zero,8134efc <___vfiprintf_internal_r+0x124c>
 8134e34:	8c40100c 	andi	r17,r17,64
 8134e38:	88008d26 	beq	r17,zero,8135070 <___vfiprintf_internal_r+0x13c0>
 8134e3c:	d9402217 	ldw	r5,136(sp)
 8134e40:	d8c02417 	ldw	r3,144(sp)
 8134e44:	28800017 	ldw	r2,0(r5)
 8134e48:	29400104 	addi	r5,r5,4
 8134e4c:	d9402215 	stw	r5,136(sp)
 8134e50:	10c0000d 	sth	r3,0(r2)
 8134e54:	003bca06 	br	8133d80 <__alt_data_end+0xfc133d80>
 8134e58:	8880100c 	andi	r2,r17,64
 8134e5c:	10003a26 	beq	r2,zero,8134f48 <___vfiprintf_internal_r+0x1298>
 8134e60:	d8802217 	ldw	r2,136(sp)
 8134e64:	14c0000f 	ldh	r19,0(r2)
 8134e68:	10800104 	addi	r2,r2,4
 8134e6c:	d8802215 	stw	r2,136(sp)
 8134e70:	9829d7fa 	srai	r20,r19,31
 8134e74:	a005883a 	mov	r2,r20
 8134e78:	003d8506 	br	8134490 <__alt_data_end+0xfc134490>
 8134e7c:	8880100c 	andi	r2,r17,64
 8134e80:	10002b26 	beq	r2,zero,8134f30 <___vfiprintf_internal_r+0x1280>
 8134e84:	d8802217 	ldw	r2,136(sp)
 8134e88:	0029883a 	mov	r20,zero
 8134e8c:	14c0000b 	ldhu	r19,0(r2)
 8134e90:	10800104 	addi	r2,r2,4
 8134e94:	d8802215 	stw	r2,136(sp)
 8134e98:	003d5d06 	br	8134410 <__alt_data_end+0xfc134410>
 8134e9c:	d9402017 	ldw	r5,128(sp)
 8134ea0:	d9002117 	ldw	r4,132(sp)
 8134ea4:	d9801a04 	addi	r6,sp,104
 8134ea8:	d8c02a15 	stw	r3,168(sp)
 8134eac:	d9c02b15 	stw	r7,172(sp)
 8134eb0:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134eb4:	d8c02a17 	ldw	r3,168(sp)
 8134eb8:	d9c02b17 	ldw	r7,172(sp)
 8134ebc:	103eb41e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134ec0:	d9001b17 	ldw	r4,108(sp)
 8134ec4:	d8801c17 	ldw	r2,112(sp)
 8134ec8:	d811883a 	mov	r8,sp
 8134ecc:	21400044 	addi	r5,r4,1
 8134ed0:	003e6706 	br	8134870 <__alt_data_end+0xfc134870>
 8134ed4:	00bfffc4 	movi	r2,-1
 8134ed8:	003c4a06 	br	8134004 <__alt_data_end+0xfc134004>
 8134edc:	9805883a 	mov	r2,r19
 8134ee0:	003ee806 	br	8134a84 <__alt_data_end+0xfc134a84>
 8134ee4:	d8c02217 	ldw	r3,136(sp)
 8134ee8:	0029883a 	mov	r20,zero
 8134eec:	18800104 	addi	r2,r3,4
 8134ef0:	1cc0000b 	ldhu	r19,0(r3)
 8134ef4:	803f9e0e 	bge	r16,zero,8134d70 <__alt_data_end+0xfc134d70>
 8134ef8:	003dd706 	br	8134658 <__alt_data_end+0xfc134658>
 8134efc:	d8c02217 	ldw	r3,136(sp)
 8134f00:	d9002417 	ldw	r4,144(sp)
 8134f04:	18800017 	ldw	r2,0(r3)
 8134f08:	18c00104 	addi	r3,r3,4
 8134f0c:	d8c02215 	stw	r3,136(sp)
 8134f10:	11000015 	stw	r4,0(r2)
 8134f14:	003b9a06 	br	8133d80 <__alt_data_end+0xfc133d80>
 8134f18:	d8c02217 	ldw	r3,136(sp)
 8134f1c:	0029883a 	mov	r20,zero
 8134f20:	18800104 	addi	r2,r3,4
 8134f24:	1cc0000b 	ldhu	r19,0(r3)
 8134f28:	803db20e 	bge	r16,zero,81345f4 <__alt_data_end+0xfc1345f4>
 8134f2c:	003fb906 	br	8134e14 <__alt_data_end+0xfc134e14>
 8134f30:	d9002217 	ldw	r4,136(sp)
 8134f34:	0029883a 	mov	r20,zero
 8134f38:	24c00017 	ldw	r19,0(r4)
 8134f3c:	21000104 	addi	r4,r4,4
 8134f40:	d9002215 	stw	r4,136(sp)
 8134f44:	003d3206 	br	8134410 <__alt_data_end+0xfc134410>
 8134f48:	d8c02217 	ldw	r3,136(sp)
 8134f4c:	1cc00017 	ldw	r19,0(r3)
 8134f50:	18c00104 	addi	r3,r3,4
 8134f54:	d8c02215 	stw	r3,136(sp)
 8134f58:	9829d7fa 	srai	r20,r19,31
 8134f5c:	a005883a 	mov	r2,r20
 8134f60:	003d4b06 	br	8134490 <__alt_data_end+0xfc134490>
 8134f64:	0009883a 	mov	r4,zero
 8134f68:	01400044 	movi	r5,1
 8134f6c:	d811883a 	mov	r8,sp
 8134f70:	003e4f06 	br	81348b0 <__alt_data_end+0xfc1348b0>
 8134f74:	d8c02215 	stw	r3,136(sp)
 8134f78:	002b883a 	mov	r21,zero
 8134f7c:	003db806 	br	8134660 <__alt_data_end+0xfc134660>
 8134f80:	d811883a 	mov	r8,sp
 8134f84:	003e9606 	br	81349e0 <__alt_data_end+0xfc1349e0>
 8134f88:	01020534 	movhi	r4,2068
 8134f8c:	212f3904 	addi	r4,r4,-17180
 8134f90:	d9002315 	stw	r4,140(sp)
 8134f94:	003e6306 	br	8134924 <__alt_data_end+0xfc134924>
 8134f98:	b0c00043 	ldbu	r3,1(r22)
 8134f9c:	8c400814 	ori	r17,r17,32
 8134fa0:	b5800044 	addi	r22,r22,1
 8134fa4:	18c03fcc 	andi	r3,r3,255
 8134fa8:	18c0201c 	xori	r3,r3,128
 8134fac:	18ffe004 	addi	r3,r3,-128
 8134fb0:	003b9c06 	br	8133e24 <__alt_data_end+0xfc133e24>
 8134fb4:	b809883a 	mov	r4,r23
 8134fb8:	da002a15 	stw	r8,168(sp)
 8134fbc:	812c4200 	call	812c420 <strlen>
 8134fc0:	1029883a 	mov	r20,r2
 8134fc4:	dd401d83 	ldbu	r21,118(sp)
 8134fc8:	df002215 	stw	fp,136(sp)
 8134fcc:	0021883a 	mov	r16,zero
 8134fd0:	da002a17 	ldw	r8,168(sp)
 8134fd4:	003c3906 	br	81340bc <__alt_data_end+0xfc1340bc>
 8134fd8:	d9402017 	ldw	r5,128(sp)
 8134fdc:	d9002117 	ldw	r4,132(sp)
 8134fe0:	d9801a04 	addi	r6,sp,104
 8134fe4:	8133b9c0 	call	8133b9c <__sprint_r.part.0>
 8134fe8:	103e691e 	bne	r2,zero,8134990 <__alt_data_end+0xfc134990>
 8134fec:	d9001b17 	ldw	r4,108(sp)
 8134ff0:	d8801c17 	ldw	r2,112(sp)
 8134ff4:	d811883a 	mov	r8,sp
 8134ff8:	21400044 	addi	r5,r4,1
 8134ffc:	003e2e06 	br	81348b8 <__alt_data_end+0xfc1348b8>
 8135000:	01020534 	movhi	r4,2068
 8135004:	212f3d04 	addi	r4,r4,-17164
 8135008:	d9002315 	stw	r4,140(sp)
 813500c:	d9001b17 	ldw	r4,108(sp)
 8135010:	21000044 	addi	r4,r4,1
 8135014:	003c5e06 	br	8134190 <__alt_data_end+0xfc134190>
 8135018:	002b883a 	mov	r21,zero
 813501c:	00800084 	movi	r2,2
 8135020:	10803fcc 	andi	r2,r2,255
 8135024:	01000044 	movi	r4,1
 8135028:	11002b26 	beq	r2,r4,81350d8 <___vfiprintf_internal_r+0x1428>
 813502c:	01000084 	movi	r4,2
 8135030:	11002b1e 	bne	r2,r4,81350e0 <___vfiprintf_internal_r+0x1430>
 8135034:	1823883a 	mov	r17,r3
 8135038:	003ee506 	br	8134bd0 <__alt_data_end+0xfc134bd0>
 813503c:	8807883a 	mov	r3,r17
 8135040:	00800044 	movi	r2,1
 8135044:	003ff606 	br	8135020 <__alt_data_end+0xfc135020>
 8135048:	00800184 	movi	r2,6
 813504c:	1400012e 	bgeu	r2,r16,8135054 <___vfiprintf_internal_r+0x13a4>
 8135050:	1021883a 	mov	r16,r2
 8135054:	8029883a 	mov	r20,r16
 8135058:	8027883a 	mov	r19,r16
 813505c:	80002216 	blt	r16,zero,81350e8 <___vfiprintf_internal_r+0x1438>
 8135060:	05c20534 	movhi	r23,2068
 8135064:	df002215 	stw	fp,136(sp)
 8135068:	bdeedd04 	addi	r23,r23,-17548
 813506c:	003cfb06 	br	813445c <__alt_data_end+0xfc13445c>
 8135070:	d9002217 	ldw	r4,136(sp)
 8135074:	d9402417 	ldw	r5,144(sp)
 8135078:	20800017 	ldw	r2,0(r4)
 813507c:	21000104 	addi	r4,r4,4
 8135080:	d9002215 	stw	r4,136(sp)
 8135084:	11400015 	stw	r5,0(r2)
 8135088:	003b3d06 	br	8133d80 <__alt_data_end+0xfc133d80>
 813508c:	01420534 	movhi	r5,2068
 8135090:	296f3d04 	addi	r5,r5,-17164
 8135094:	d9402315 	stw	r5,140(sp)
 8135098:	d9401b17 	ldw	r5,108(sp)
 813509c:	29400044 	addi	r5,r5,1
 81350a0:	003e6d06 	br	8134a58 <__alt_data_end+0xfc134a58>
 81350a4:	8029883a 	mov	r20,r16
 81350a8:	dd401d83 	ldbu	r21,118(sp)
 81350ac:	df002215 	stw	fp,136(sp)
 81350b0:	0021883a 	mov	r16,zero
 81350b4:	003c0106 	br	81340bc <__alt_data_end+0xfc1340bc>
 81350b8:	00c20534 	movhi	r3,2068
 81350bc:	18ef3904 	addi	r3,r3,-17180
 81350c0:	d8c02315 	stw	r3,140(sp)
 81350c4:	280d883a 	mov	r6,r5
 81350c8:	003c6906 	br	8134270 <__alt_data_end+0xfc134270>
 81350cc:	802d883a 	mov	r22,r16
 81350d0:	0021883a 	mov	r16,zero
 81350d4:	003b5406 	br	8133e28 <__alt_data_end+0xfc133e28>
 81350d8:	1823883a 	mov	r17,r3
 81350dc:	003cf306 	br	81344ac <__alt_data_end+0xfc1344ac>
 81350e0:	1823883a 	mov	r17,r3
 81350e4:	003cad06 	br	813439c <__alt_data_end+0xfc13439c>
 81350e8:	0027883a 	mov	r19,zero
 81350ec:	003fdc06 	br	8135060 <__alt_data_end+0xfc135060>
 81350f0:	d9402217 	ldw	r5,136(sp)
 81350f4:	8005883a 	mov	r2,r16
 81350f8:	b0c00043 	ldbu	r3,1(r22)
 81350fc:	2c000017 	ldw	r16,0(r5)
 8135100:	29000104 	addi	r4,r5,4
 8135104:	d9002215 	stw	r4,136(sp)
 8135108:	102d883a 	mov	r22,r2
 813510c:	803fa50e 	bge	r16,zero,8134fa4 <__alt_data_end+0xfc134fa4>
 8135110:	18c03fcc 	andi	r3,r3,255
 8135114:	18c0201c 	xori	r3,r3,128
 8135118:	043fffc4 	movi	r16,-1
 813511c:	18ffe004 	addi	r3,r3,-128
 8135120:	003b4006 	br	8133e24 <__alt_data_end+0xfc133e24>
 8135124:	d9402303 	ldbu	r5,140(sp)
 8135128:	d9401d85 	stb	r5,118(sp)
 813512c:	003cae06 	br	81343e8 <__alt_data_end+0xfc1343e8>
 8135130:	d8c02303 	ldbu	r3,140(sp)
 8135134:	d8c01d85 	stb	r3,118(sp)
 8135138:	003d1406 	br	813458c <__alt_data_end+0xfc13458c>
 813513c:	d8c02303 	ldbu	r3,140(sp)
 8135140:	d8c01d85 	stb	r3,118(sp)
 8135144:	003cca06 	br	8134470 <__alt_data_end+0xfc134470>
 8135148:	8880004c 	andi	r2,r17,1
 813514c:	002b883a 	mov	r21,zero
 8135150:	10000526 	beq	r2,zero,8135168 <___vfiprintf_internal_r+0x14b8>
 8135154:	00800c04 	movi	r2,48
 8135158:	d88019c5 	stb	r2,103(sp)
 813515c:	dd002817 	ldw	r20,160(sp)
 8135160:	ddc019c4 	addi	r23,sp,103
 8135164:	003bd506 	br	81340bc <__alt_data_end+0xfc1340bc>
 8135168:	0029883a 	mov	r20,zero
 813516c:	ddc01a04 	addi	r23,sp,104
 8135170:	003bd206 	br	81340bc <__alt_data_end+0xfc1340bc>
 8135174:	d9002303 	ldbu	r4,140(sp)
 8135178:	d9001d85 	stb	r4,118(sp)
 813517c:	003da606 	br	8134818 <__alt_data_end+0xfc134818>
 8135180:	d8c02303 	ldbu	r3,140(sp)
 8135184:	d8c01d85 	stb	r3,118(sp)
 8135188:	003c7606 	br	8134364 <__alt_data_end+0xfc134364>
 813518c:	d8c02303 	ldbu	r3,140(sp)
 8135190:	d8c01d85 	stb	r3,118(sp)
 8135194:	003c6506 	br	813432c <__alt_data_end+0xfc13432c>
 8135198:	d9002303 	ldbu	r4,140(sp)
 813519c:	d9001d85 	stb	r4,118(sp)
 81351a0:	003d3d06 	br	8134698 <__alt_data_end+0xfc134698>
 81351a4:	d8c02303 	ldbu	r3,140(sp)
 81351a8:	d8c01d85 	stb	r3,118(sp)
 81351ac:	003d1d06 	br	8134624 <__alt_data_end+0xfc134624>
 81351b0:	d8c02303 	ldbu	r3,140(sp)
 81351b4:	d8c01d85 	stb	r3,118(sp)
 81351b8:	003d0306 	br	81345c8 <__alt_data_end+0xfc1345c8>

081351bc <__vfiprintf_internal>:
 81351bc:	00820534 	movhi	r2,2068
 81351c0:	10b63c04 	addi	r2,r2,-10000
 81351c4:	300f883a 	mov	r7,r6
 81351c8:	280d883a 	mov	r6,r5
 81351cc:	200b883a 	mov	r5,r4
 81351d0:	11000017 	ldw	r4,0(r2)
 81351d4:	8133cb01 	jmpi	8133cb0 <___vfiprintf_internal_r>

081351d8 <__sbprintf>:
 81351d8:	2880030b 	ldhu	r2,12(r5)
 81351dc:	2ac01917 	ldw	r11,100(r5)
 81351e0:	2a80038b 	ldhu	r10,14(r5)
 81351e4:	2a400717 	ldw	r9,28(r5)
 81351e8:	2a000917 	ldw	r8,36(r5)
 81351ec:	defee204 	addi	sp,sp,-1144
 81351f0:	00c10004 	movi	r3,1024
 81351f4:	dc011a15 	stw	r16,1128(sp)
 81351f8:	10bfff4c 	andi	r2,r2,65533
 81351fc:	2821883a 	mov	r16,r5
 8135200:	d8cb883a 	add	r5,sp,r3
 8135204:	dc811c15 	stw	r18,1136(sp)
 8135208:	dc411b15 	stw	r17,1132(sp)
 813520c:	dfc11d15 	stw	ra,1140(sp)
 8135210:	2025883a 	mov	r18,r4
 8135214:	d881030d 	sth	r2,1036(sp)
 8135218:	dac11915 	stw	r11,1124(sp)
 813521c:	da81038d 	sth	r10,1038(sp)
 8135220:	da410715 	stw	r9,1052(sp)
 8135224:	da010915 	stw	r8,1060(sp)
 8135228:	dec10015 	stw	sp,1024(sp)
 813522c:	dec10415 	stw	sp,1040(sp)
 8135230:	d8c10215 	stw	r3,1032(sp)
 8135234:	d8c10515 	stw	r3,1044(sp)
 8135238:	d8010615 	stw	zero,1048(sp)
 813523c:	8133cb00 	call	8133cb0 <___vfiprintf_internal_r>
 8135240:	1023883a 	mov	r17,r2
 8135244:	10000416 	blt	r2,zero,8135258 <__sbprintf+0x80>
 8135248:	d9410004 	addi	r5,sp,1024
 813524c:	9009883a 	mov	r4,r18
 8135250:	813048c0 	call	813048c <_fflush_r>
 8135254:	10000d1e 	bne	r2,zero,813528c <__sbprintf+0xb4>
 8135258:	d881030b 	ldhu	r2,1036(sp)
 813525c:	1080100c 	andi	r2,r2,64
 8135260:	10000326 	beq	r2,zero,8135270 <__sbprintf+0x98>
 8135264:	8080030b 	ldhu	r2,12(r16)
 8135268:	10801014 	ori	r2,r2,64
 813526c:	8080030d 	sth	r2,12(r16)
 8135270:	8805883a 	mov	r2,r17
 8135274:	dfc11d17 	ldw	ra,1140(sp)
 8135278:	dc811c17 	ldw	r18,1136(sp)
 813527c:	dc411b17 	ldw	r17,1132(sp)
 8135280:	dc011a17 	ldw	r16,1128(sp)
 8135284:	dec11e04 	addi	sp,sp,1144
 8135288:	f800283a 	ret
 813528c:	047fffc4 	movi	r17,-1
 8135290:	003ff106 	br	8135258 <__alt_data_end+0xfc135258>

08135294 <_write_r>:
 8135294:	defffd04 	addi	sp,sp,-12
 8135298:	2805883a 	mov	r2,r5
 813529c:	dc000015 	stw	r16,0(sp)
 81352a0:	04020534 	movhi	r16,2068
 81352a4:	dc400115 	stw	r17,4(sp)
 81352a8:	300b883a 	mov	r5,r6
 81352ac:	843d0e04 	addi	r16,r16,-3016
 81352b0:	2023883a 	mov	r17,r4
 81352b4:	380d883a 	mov	r6,r7
 81352b8:	1009883a 	mov	r4,r2
 81352bc:	dfc00215 	stw	ra,8(sp)
 81352c0:	80000015 	stw	zero,0(r16)
 81352c4:	8139abc0 	call	8139abc <write>
 81352c8:	00ffffc4 	movi	r3,-1
 81352cc:	10c00526 	beq	r2,r3,81352e4 <_write_r+0x50>
 81352d0:	dfc00217 	ldw	ra,8(sp)
 81352d4:	dc400117 	ldw	r17,4(sp)
 81352d8:	dc000017 	ldw	r16,0(sp)
 81352dc:	dec00304 	addi	sp,sp,12
 81352e0:	f800283a 	ret
 81352e4:	80c00017 	ldw	r3,0(r16)
 81352e8:	183ff926 	beq	r3,zero,81352d0 <__alt_data_end+0xfc1352d0>
 81352ec:	88c00015 	stw	r3,0(r17)
 81352f0:	003ff706 	br	81352d0 <__alt_data_end+0xfc1352d0>

081352f4 <_close_r>:
 81352f4:	defffd04 	addi	sp,sp,-12
 81352f8:	dc000015 	stw	r16,0(sp)
 81352fc:	04020534 	movhi	r16,2068
 8135300:	dc400115 	stw	r17,4(sp)
 8135304:	843d0e04 	addi	r16,r16,-3016
 8135308:	2023883a 	mov	r17,r4
 813530c:	2809883a 	mov	r4,r5
 8135310:	dfc00215 	stw	ra,8(sp)
 8135314:	80000015 	stw	zero,0(r16)
 8135318:	81392340 	call	8139234 <close>
 813531c:	00ffffc4 	movi	r3,-1
 8135320:	10c00526 	beq	r2,r3,8135338 <_close_r+0x44>
 8135324:	dfc00217 	ldw	ra,8(sp)
 8135328:	dc400117 	ldw	r17,4(sp)
 813532c:	dc000017 	ldw	r16,0(sp)
 8135330:	dec00304 	addi	sp,sp,12
 8135334:	f800283a 	ret
 8135338:	80c00017 	ldw	r3,0(r16)
 813533c:	183ff926 	beq	r3,zero,8135324 <__alt_data_end+0xfc135324>
 8135340:	88c00015 	stw	r3,0(r17)
 8135344:	003ff706 	br	8135324 <__alt_data_end+0xfc135324>

08135348 <_calloc_r>:
 8135348:	defffe04 	addi	sp,sp,-8
 813534c:	2805883a 	mov	r2,r5
 8135350:	dc000015 	stw	r16,0(sp)
 8135354:	300b883a 	mov	r5,r6
 8135358:	2021883a 	mov	r16,r4
 813535c:	1009883a 	mov	r4,r2
 8135360:	dfc00115 	stw	ra,4(sp)
 8135364:	812c2b80 	call	812c2b8 <__mulsi3>
 8135368:	100b883a 	mov	r5,r2
 813536c:	8009883a 	mov	r4,r16
 8135370:	81315e40 	call	81315e4 <_malloc_r>
 8135374:	10002926 	beq	r2,zero,813541c <_calloc_r+0xd4>
 8135378:	11bfff17 	ldw	r6,-4(r2)
 813537c:	1021883a 	mov	r16,r2
 8135380:	00bfff04 	movi	r2,-4
 8135384:	308c703a 	and	r6,r6,r2
 8135388:	00c00904 	movi	r3,36
 813538c:	308d883a 	add	r6,r6,r2
 8135390:	19801636 	bltu	r3,r6,81353ec <_calloc_r+0xa4>
 8135394:	008004c4 	movi	r2,19
 8135398:	11800b2e 	bgeu	r2,r6,81353c8 <_calloc_r+0x80>
 813539c:	80000015 	stw	zero,0(r16)
 81353a0:	80000115 	stw	zero,4(r16)
 81353a4:	008006c4 	movi	r2,27
 81353a8:	11801a2e 	bgeu	r2,r6,8135414 <_calloc_r+0xcc>
 81353ac:	80000215 	stw	zero,8(r16)
 81353b0:	80000315 	stw	zero,12(r16)
 81353b4:	30c0151e 	bne	r6,r3,813540c <_calloc_r+0xc4>
 81353b8:	80000415 	stw	zero,16(r16)
 81353bc:	80800604 	addi	r2,r16,24
 81353c0:	80000515 	stw	zero,20(r16)
 81353c4:	00000106 	br	81353cc <_calloc_r+0x84>
 81353c8:	8005883a 	mov	r2,r16
 81353cc:	10000015 	stw	zero,0(r2)
 81353d0:	10000115 	stw	zero,4(r2)
 81353d4:	10000215 	stw	zero,8(r2)
 81353d8:	8005883a 	mov	r2,r16
 81353dc:	dfc00117 	ldw	ra,4(sp)
 81353e0:	dc000017 	ldw	r16,0(sp)
 81353e4:	dec00204 	addi	sp,sp,8
 81353e8:	f800283a 	ret
 81353ec:	000b883a 	mov	r5,zero
 81353f0:	8009883a 	mov	r4,r16
 81353f4:	81321780 	call	8132178 <memset>
 81353f8:	8005883a 	mov	r2,r16
 81353fc:	dfc00117 	ldw	ra,4(sp)
 8135400:	dc000017 	ldw	r16,0(sp)
 8135404:	dec00204 	addi	sp,sp,8
 8135408:	f800283a 	ret
 813540c:	80800404 	addi	r2,r16,16
 8135410:	003fee06 	br	81353cc <__alt_data_end+0xfc1353cc>
 8135414:	80800204 	addi	r2,r16,8
 8135418:	003fec06 	br	81353cc <__alt_data_end+0xfc1353cc>
 813541c:	0005883a 	mov	r2,zero
 8135420:	003fee06 	br	81353dc <__alt_data_end+0xfc1353dc>

08135424 <_fclose_r>:
 8135424:	28003926 	beq	r5,zero,813550c <_fclose_r+0xe8>
 8135428:	defffc04 	addi	sp,sp,-16
 813542c:	dc400115 	stw	r17,4(sp)
 8135430:	dc000015 	stw	r16,0(sp)
 8135434:	dfc00315 	stw	ra,12(sp)
 8135438:	dc800215 	stw	r18,8(sp)
 813543c:	2023883a 	mov	r17,r4
 8135440:	2821883a 	mov	r16,r5
 8135444:	20000226 	beq	r4,zero,8135450 <_fclose_r+0x2c>
 8135448:	20800e17 	ldw	r2,56(r4)
 813544c:	10002726 	beq	r2,zero,81354ec <_fclose_r+0xc8>
 8135450:	8080030f 	ldh	r2,12(r16)
 8135454:	1000071e 	bne	r2,zero,8135474 <_fclose_r+0x50>
 8135458:	0005883a 	mov	r2,zero
 813545c:	dfc00317 	ldw	ra,12(sp)
 8135460:	dc800217 	ldw	r18,8(sp)
 8135464:	dc400117 	ldw	r17,4(sp)
 8135468:	dc000017 	ldw	r16,0(sp)
 813546c:	dec00404 	addi	sp,sp,16
 8135470:	f800283a 	ret
 8135474:	800b883a 	mov	r5,r16
 8135478:	8809883a 	mov	r4,r17
 813547c:	81302700 	call	8130270 <__sflush_r>
 8135480:	1025883a 	mov	r18,r2
 8135484:	80800b17 	ldw	r2,44(r16)
 8135488:	10000426 	beq	r2,zero,813549c <_fclose_r+0x78>
 813548c:	81400717 	ldw	r5,28(r16)
 8135490:	8809883a 	mov	r4,r17
 8135494:	103ee83a 	callr	r2
 8135498:	10001616 	blt	r2,zero,81354f4 <_fclose_r+0xd0>
 813549c:	8080030b 	ldhu	r2,12(r16)
 81354a0:	1080200c 	andi	r2,r2,128
 81354a4:	1000151e 	bne	r2,zero,81354fc <_fclose_r+0xd8>
 81354a8:	81400c17 	ldw	r5,48(r16)
 81354ac:	28000526 	beq	r5,zero,81354c4 <_fclose_r+0xa0>
 81354b0:	80801004 	addi	r2,r16,64
 81354b4:	28800226 	beq	r5,r2,81354c0 <_fclose_r+0x9c>
 81354b8:	8809883a 	mov	r4,r17
 81354bc:	81309ec0 	call	81309ec <_free_r>
 81354c0:	80000c15 	stw	zero,48(r16)
 81354c4:	81401117 	ldw	r5,68(r16)
 81354c8:	28000326 	beq	r5,zero,81354d8 <_fclose_r+0xb4>
 81354cc:	8809883a 	mov	r4,r17
 81354d0:	81309ec0 	call	81309ec <_free_r>
 81354d4:	80001115 	stw	zero,68(r16)
 81354d8:	81308880 	call	8130888 <__sfp_lock_acquire>
 81354dc:	8000030d 	sth	zero,12(r16)
 81354e0:	813088c0 	call	813088c <__sfp_lock_release>
 81354e4:	9005883a 	mov	r2,r18
 81354e8:	003fdc06 	br	813545c <__alt_data_end+0xfc13545c>
 81354ec:	81308780 	call	8130878 <__sinit>
 81354f0:	003fd706 	br	8135450 <__alt_data_end+0xfc135450>
 81354f4:	04bfffc4 	movi	r18,-1
 81354f8:	003fe806 	br	813549c <__alt_data_end+0xfc13549c>
 81354fc:	81400417 	ldw	r5,16(r16)
 8135500:	8809883a 	mov	r4,r17
 8135504:	81309ec0 	call	81309ec <_free_r>
 8135508:	003fe706 	br	81354a8 <__alt_data_end+0xfc1354a8>
 813550c:	0005883a 	mov	r2,zero
 8135510:	f800283a 	ret

08135514 <fclose>:
 8135514:	00820534 	movhi	r2,2068
 8135518:	10b63c04 	addi	r2,r2,-10000
 813551c:	200b883a 	mov	r5,r4
 8135520:	11000017 	ldw	r4,0(r2)
 8135524:	81354241 	jmpi	8135424 <_fclose_r>

08135528 <__fputwc>:
 8135528:	defff804 	addi	sp,sp,-32
 813552c:	dcc00415 	stw	r19,16(sp)
 8135530:	dc800315 	stw	r18,12(sp)
 8135534:	dc000115 	stw	r16,4(sp)
 8135538:	dfc00715 	stw	ra,28(sp)
 813553c:	dd400615 	stw	r21,24(sp)
 8135540:	dd000515 	stw	r20,20(sp)
 8135544:	dc400215 	stw	r17,8(sp)
 8135548:	2027883a 	mov	r19,r4
 813554c:	2825883a 	mov	r18,r5
 8135550:	3021883a 	mov	r16,r6
 8135554:	81313d40 	call	81313d4 <__locale_mb_cur_max>
 8135558:	00c00044 	movi	r3,1
 813555c:	10c03e26 	beq	r2,r3,8135658 <__fputwc+0x130>
 8135560:	81c01704 	addi	r7,r16,92
 8135564:	900d883a 	mov	r6,r18
 8135568:	d80b883a 	mov	r5,sp
 813556c:	9809883a 	mov	r4,r19
 8135570:	81359f80 	call	81359f8 <_wcrtomb_r>
 8135574:	1029883a 	mov	r20,r2
 8135578:	00bfffc4 	movi	r2,-1
 813557c:	a0802026 	beq	r20,r2,8135600 <__fputwc+0xd8>
 8135580:	d9400003 	ldbu	r5,0(sp)
 8135584:	a0001c26 	beq	r20,zero,81355f8 <__fputwc+0xd0>
 8135588:	0023883a 	mov	r17,zero
 813558c:	05400284 	movi	r21,10
 8135590:	00000906 	br	81355b8 <__fputwc+0x90>
 8135594:	80800017 	ldw	r2,0(r16)
 8135598:	11400005 	stb	r5,0(r2)
 813559c:	80c00017 	ldw	r3,0(r16)
 81355a0:	18c00044 	addi	r3,r3,1
 81355a4:	80c00015 	stw	r3,0(r16)
 81355a8:	8c400044 	addi	r17,r17,1
 81355ac:	dc45883a 	add	r2,sp,r17
 81355b0:	8d00112e 	bgeu	r17,r20,81355f8 <__fputwc+0xd0>
 81355b4:	11400003 	ldbu	r5,0(r2)
 81355b8:	80c00217 	ldw	r3,8(r16)
 81355bc:	18ffffc4 	addi	r3,r3,-1
 81355c0:	80c00215 	stw	r3,8(r16)
 81355c4:	183ff30e 	bge	r3,zero,8135594 <__alt_data_end+0xfc135594>
 81355c8:	80800617 	ldw	r2,24(r16)
 81355cc:	18801916 	blt	r3,r2,8135634 <__fputwc+0x10c>
 81355d0:	80800017 	ldw	r2,0(r16)
 81355d4:	11400005 	stb	r5,0(r2)
 81355d8:	80800017 	ldw	r2,0(r16)
 81355dc:	10c00003 	ldbu	r3,0(r2)
 81355e0:	10800044 	addi	r2,r2,1
 81355e4:	1d402326 	beq	r3,r21,8135674 <__fputwc+0x14c>
 81355e8:	80800015 	stw	r2,0(r16)
 81355ec:	8c400044 	addi	r17,r17,1
 81355f0:	dc45883a 	add	r2,sp,r17
 81355f4:	8d3fef36 	bltu	r17,r20,81355b4 <__alt_data_end+0xfc1355b4>
 81355f8:	9005883a 	mov	r2,r18
 81355fc:	00000406 	br	8135610 <__fputwc+0xe8>
 8135600:	80c0030b 	ldhu	r3,12(r16)
 8135604:	a005883a 	mov	r2,r20
 8135608:	18c01014 	ori	r3,r3,64
 813560c:	80c0030d 	sth	r3,12(r16)
 8135610:	dfc00717 	ldw	ra,28(sp)
 8135614:	dd400617 	ldw	r21,24(sp)
 8135618:	dd000517 	ldw	r20,20(sp)
 813561c:	dcc00417 	ldw	r19,16(sp)
 8135620:	dc800317 	ldw	r18,12(sp)
 8135624:	dc400217 	ldw	r17,8(sp)
 8135628:	dc000117 	ldw	r16,4(sp)
 813562c:	dec00804 	addi	sp,sp,32
 8135630:	f800283a 	ret
 8135634:	800d883a 	mov	r6,r16
 8135638:	29403fcc 	andi	r5,r5,255
 813563c:	9809883a 	mov	r4,r19
 8135640:	81358a00 	call	81358a0 <__swbuf_r>
 8135644:	10bfffe0 	cmpeqi	r2,r2,-1
 8135648:	10803fcc 	andi	r2,r2,255
 813564c:	103fd626 	beq	r2,zero,81355a8 <__alt_data_end+0xfc1355a8>
 8135650:	00bfffc4 	movi	r2,-1
 8135654:	003fee06 	br	8135610 <__alt_data_end+0xfc135610>
 8135658:	90ffffc4 	addi	r3,r18,-1
 813565c:	01003f84 	movi	r4,254
 8135660:	20ffbf36 	bltu	r4,r3,8135560 <__alt_data_end+0xfc135560>
 8135664:	900b883a 	mov	r5,r18
 8135668:	dc800005 	stb	r18,0(sp)
 813566c:	1029883a 	mov	r20,r2
 8135670:	003fc506 	br	8135588 <__alt_data_end+0xfc135588>
 8135674:	800d883a 	mov	r6,r16
 8135678:	a80b883a 	mov	r5,r21
 813567c:	9809883a 	mov	r4,r19
 8135680:	81358a00 	call	81358a0 <__swbuf_r>
 8135684:	10bfffe0 	cmpeqi	r2,r2,-1
 8135688:	003fef06 	br	8135648 <__alt_data_end+0xfc135648>

0813568c <_fputwc_r>:
 813568c:	3080030b 	ldhu	r2,12(r6)
 8135690:	10c8000c 	andi	r3,r2,8192
 8135694:	1800051e 	bne	r3,zero,81356ac <_fputwc_r+0x20>
 8135698:	30c01917 	ldw	r3,100(r6)
 813569c:	10880014 	ori	r2,r2,8192
 81356a0:	3080030d 	sth	r2,12(r6)
 81356a4:	18880014 	ori	r2,r3,8192
 81356a8:	30801915 	stw	r2,100(r6)
 81356ac:	81355281 	jmpi	8135528 <__fputwc>

081356b0 <fputwc>:
 81356b0:	00820534 	movhi	r2,2068
 81356b4:	defffc04 	addi	sp,sp,-16
 81356b8:	10b63c04 	addi	r2,r2,-10000
 81356bc:	dc000115 	stw	r16,4(sp)
 81356c0:	14000017 	ldw	r16,0(r2)
 81356c4:	dc400215 	stw	r17,8(sp)
 81356c8:	dfc00315 	stw	ra,12(sp)
 81356cc:	2023883a 	mov	r17,r4
 81356d0:	80000226 	beq	r16,zero,81356dc <fputwc+0x2c>
 81356d4:	80800e17 	ldw	r2,56(r16)
 81356d8:	10001026 	beq	r2,zero,813571c <fputwc+0x6c>
 81356dc:	2880030b 	ldhu	r2,12(r5)
 81356e0:	10c8000c 	andi	r3,r2,8192
 81356e4:	1800051e 	bne	r3,zero,81356fc <fputwc+0x4c>
 81356e8:	28c01917 	ldw	r3,100(r5)
 81356ec:	10880014 	ori	r2,r2,8192
 81356f0:	2880030d 	sth	r2,12(r5)
 81356f4:	18880014 	ori	r2,r3,8192
 81356f8:	28801915 	stw	r2,100(r5)
 81356fc:	280d883a 	mov	r6,r5
 8135700:	8009883a 	mov	r4,r16
 8135704:	880b883a 	mov	r5,r17
 8135708:	dfc00317 	ldw	ra,12(sp)
 813570c:	dc400217 	ldw	r17,8(sp)
 8135710:	dc000117 	ldw	r16,4(sp)
 8135714:	dec00404 	addi	sp,sp,16
 8135718:	81355281 	jmpi	8135528 <__fputwc>
 813571c:	8009883a 	mov	r4,r16
 8135720:	d9400015 	stw	r5,0(sp)
 8135724:	81308780 	call	8130878 <__sinit>
 8135728:	d9400017 	ldw	r5,0(sp)
 813572c:	003feb06 	br	81356dc <__alt_data_end+0xfc1356dc>

08135730 <_fstat_r>:
 8135730:	defffd04 	addi	sp,sp,-12
 8135734:	2805883a 	mov	r2,r5
 8135738:	dc000015 	stw	r16,0(sp)
 813573c:	04020534 	movhi	r16,2068
 8135740:	dc400115 	stw	r17,4(sp)
 8135744:	843d0e04 	addi	r16,r16,-3016
 8135748:	2023883a 	mov	r17,r4
 813574c:	300b883a 	mov	r5,r6
 8135750:	1009883a 	mov	r4,r2
 8135754:	dfc00215 	stw	ra,8(sp)
 8135758:	80000015 	stw	zero,0(r16)
 813575c:	81393740 	call	8139374 <fstat>
 8135760:	00ffffc4 	movi	r3,-1
 8135764:	10c00526 	beq	r2,r3,813577c <_fstat_r+0x4c>
 8135768:	dfc00217 	ldw	ra,8(sp)
 813576c:	dc400117 	ldw	r17,4(sp)
 8135770:	dc000017 	ldw	r16,0(sp)
 8135774:	dec00304 	addi	sp,sp,12
 8135778:	f800283a 	ret
 813577c:	80c00017 	ldw	r3,0(r16)
 8135780:	183ff926 	beq	r3,zero,8135768 <__alt_data_end+0xfc135768>
 8135784:	88c00015 	stw	r3,0(r17)
 8135788:	003ff706 	br	8135768 <__alt_data_end+0xfc135768>

0813578c <_isatty_r>:
 813578c:	defffd04 	addi	sp,sp,-12
 8135790:	dc000015 	stw	r16,0(sp)
 8135794:	04020534 	movhi	r16,2068
 8135798:	dc400115 	stw	r17,4(sp)
 813579c:	843d0e04 	addi	r16,r16,-3016
 81357a0:	2023883a 	mov	r17,r4
 81357a4:	2809883a 	mov	r4,r5
 81357a8:	dfc00215 	stw	ra,8(sp)
 81357ac:	80000015 	stw	zero,0(r16)
 81357b0:	81394680 	call	8139468 <isatty>
 81357b4:	00ffffc4 	movi	r3,-1
 81357b8:	10c00526 	beq	r2,r3,81357d0 <_isatty_r+0x44>
 81357bc:	dfc00217 	ldw	ra,8(sp)
 81357c0:	dc400117 	ldw	r17,4(sp)
 81357c4:	dc000017 	ldw	r16,0(sp)
 81357c8:	dec00304 	addi	sp,sp,12
 81357cc:	f800283a 	ret
 81357d0:	80c00017 	ldw	r3,0(r16)
 81357d4:	183ff926 	beq	r3,zero,81357bc <__alt_data_end+0xfc1357bc>
 81357d8:	88c00015 	stw	r3,0(r17)
 81357dc:	003ff706 	br	81357bc <__alt_data_end+0xfc1357bc>

081357e0 <_lseek_r>:
 81357e0:	defffd04 	addi	sp,sp,-12
 81357e4:	2805883a 	mov	r2,r5
 81357e8:	dc000015 	stw	r16,0(sp)
 81357ec:	04020534 	movhi	r16,2068
 81357f0:	dc400115 	stw	r17,4(sp)
 81357f4:	300b883a 	mov	r5,r6
 81357f8:	843d0e04 	addi	r16,r16,-3016
 81357fc:	2023883a 	mov	r17,r4
 8135800:	380d883a 	mov	r6,r7
 8135804:	1009883a 	mov	r4,r2
 8135808:	dfc00215 	stw	ra,8(sp)
 813580c:	80000015 	stw	zero,0(r16)
 8135810:	813963c0 	call	813963c <lseek>
 8135814:	00ffffc4 	movi	r3,-1
 8135818:	10c00526 	beq	r2,r3,8135830 <_lseek_r+0x50>
 813581c:	dfc00217 	ldw	ra,8(sp)
 8135820:	dc400117 	ldw	r17,4(sp)
 8135824:	dc000017 	ldw	r16,0(sp)
 8135828:	dec00304 	addi	sp,sp,12
 813582c:	f800283a 	ret
 8135830:	80c00017 	ldw	r3,0(r16)
 8135834:	183ff926 	beq	r3,zero,813581c <__alt_data_end+0xfc13581c>
 8135838:	88c00015 	stw	r3,0(r17)
 813583c:	003ff706 	br	813581c <__alt_data_end+0xfc13581c>

08135840 <_read_r>:
 8135840:	defffd04 	addi	sp,sp,-12
 8135844:	2805883a 	mov	r2,r5
 8135848:	dc000015 	stw	r16,0(sp)
 813584c:	04020534 	movhi	r16,2068
 8135850:	dc400115 	stw	r17,4(sp)
 8135854:	300b883a 	mov	r5,r6
 8135858:	843d0e04 	addi	r16,r16,-3016
 813585c:	2023883a 	mov	r17,r4
 8135860:	380d883a 	mov	r6,r7
 8135864:	1009883a 	mov	r4,r2
 8135868:	dfc00215 	stw	ra,8(sp)
 813586c:	80000015 	stw	zero,0(r16)
 8135870:	81398180 	call	8139818 <read>
 8135874:	00ffffc4 	movi	r3,-1
 8135878:	10c00526 	beq	r2,r3,8135890 <_read_r+0x50>
 813587c:	dfc00217 	ldw	ra,8(sp)
 8135880:	dc400117 	ldw	r17,4(sp)
 8135884:	dc000017 	ldw	r16,0(sp)
 8135888:	dec00304 	addi	sp,sp,12
 813588c:	f800283a 	ret
 8135890:	80c00017 	ldw	r3,0(r16)
 8135894:	183ff926 	beq	r3,zero,813587c <__alt_data_end+0xfc13587c>
 8135898:	88c00015 	stw	r3,0(r17)
 813589c:	003ff706 	br	813587c <__alt_data_end+0xfc13587c>

081358a0 <__swbuf_r>:
 81358a0:	defffb04 	addi	sp,sp,-20
 81358a4:	dcc00315 	stw	r19,12(sp)
 81358a8:	dc800215 	stw	r18,8(sp)
 81358ac:	dc000015 	stw	r16,0(sp)
 81358b0:	dfc00415 	stw	ra,16(sp)
 81358b4:	dc400115 	stw	r17,4(sp)
 81358b8:	2025883a 	mov	r18,r4
 81358bc:	2827883a 	mov	r19,r5
 81358c0:	3021883a 	mov	r16,r6
 81358c4:	20000226 	beq	r4,zero,81358d0 <__swbuf_r+0x30>
 81358c8:	20800e17 	ldw	r2,56(r4)
 81358cc:	10004226 	beq	r2,zero,81359d8 <__swbuf_r+0x138>
 81358d0:	80800617 	ldw	r2,24(r16)
 81358d4:	8100030b 	ldhu	r4,12(r16)
 81358d8:	80800215 	stw	r2,8(r16)
 81358dc:	2080020c 	andi	r2,r4,8
 81358e0:	10003626 	beq	r2,zero,81359bc <__swbuf_r+0x11c>
 81358e4:	80c00417 	ldw	r3,16(r16)
 81358e8:	18003426 	beq	r3,zero,81359bc <__swbuf_r+0x11c>
 81358ec:	2088000c 	andi	r2,r4,8192
 81358f0:	9c403fcc 	andi	r17,r19,255
 81358f4:	10001a26 	beq	r2,zero,8135960 <__swbuf_r+0xc0>
 81358f8:	80800017 	ldw	r2,0(r16)
 81358fc:	81000517 	ldw	r4,20(r16)
 8135900:	10c7c83a 	sub	r3,r2,r3
 8135904:	1900200e 	bge	r3,r4,8135988 <__swbuf_r+0xe8>
 8135908:	18c00044 	addi	r3,r3,1
 813590c:	81000217 	ldw	r4,8(r16)
 8135910:	11400044 	addi	r5,r2,1
 8135914:	81400015 	stw	r5,0(r16)
 8135918:	213fffc4 	addi	r4,r4,-1
 813591c:	81000215 	stw	r4,8(r16)
 8135920:	14c00005 	stb	r19,0(r2)
 8135924:	80800517 	ldw	r2,20(r16)
 8135928:	10c01e26 	beq	r2,r3,81359a4 <__swbuf_r+0x104>
 813592c:	8080030b 	ldhu	r2,12(r16)
 8135930:	1080004c 	andi	r2,r2,1
 8135934:	10000226 	beq	r2,zero,8135940 <__swbuf_r+0xa0>
 8135938:	00800284 	movi	r2,10
 813593c:	88801926 	beq	r17,r2,81359a4 <__swbuf_r+0x104>
 8135940:	8805883a 	mov	r2,r17
 8135944:	dfc00417 	ldw	ra,16(sp)
 8135948:	dcc00317 	ldw	r19,12(sp)
 813594c:	dc800217 	ldw	r18,8(sp)
 8135950:	dc400117 	ldw	r17,4(sp)
 8135954:	dc000017 	ldw	r16,0(sp)
 8135958:	dec00504 	addi	sp,sp,20
 813595c:	f800283a 	ret
 8135960:	81401917 	ldw	r5,100(r16)
 8135964:	00b7ffc4 	movi	r2,-8193
 8135968:	21080014 	ori	r4,r4,8192
 813596c:	2884703a 	and	r2,r5,r2
 8135970:	80801915 	stw	r2,100(r16)
 8135974:	80800017 	ldw	r2,0(r16)
 8135978:	8100030d 	sth	r4,12(r16)
 813597c:	81000517 	ldw	r4,20(r16)
 8135980:	10c7c83a 	sub	r3,r2,r3
 8135984:	193fe016 	blt	r3,r4,8135908 <__alt_data_end+0xfc135908>
 8135988:	800b883a 	mov	r5,r16
 813598c:	9009883a 	mov	r4,r18
 8135990:	813048c0 	call	813048c <_fflush_r>
 8135994:	1000071e 	bne	r2,zero,81359b4 <__swbuf_r+0x114>
 8135998:	80800017 	ldw	r2,0(r16)
 813599c:	00c00044 	movi	r3,1
 81359a0:	003fda06 	br	813590c <__alt_data_end+0xfc13590c>
 81359a4:	800b883a 	mov	r5,r16
 81359a8:	9009883a 	mov	r4,r18
 81359ac:	813048c0 	call	813048c <_fflush_r>
 81359b0:	103fe326 	beq	r2,zero,8135940 <__alt_data_end+0xfc135940>
 81359b4:	00bfffc4 	movi	r2,-1
 81359b8:	003fe206 	br	8135944 <__alt_data_end+0xfc135944>
 81359bc:	800b883a 	mov	r5,r16
 81359c0:	9009883a 	mov	r4,r18
 81359c4:	812e86c0 	call	812e86c <__swsetup_r>
 81359c8:	103ffa1e 	bne	r2,zero,81359b4 <__alt_data_end+0xfc1359b4>
 81359cc:	8100030b 	ldhu	r4,12(r16)
 81359d0:	80c00417 	ldw	r3,16(r16)
 81359d4:	003fc506 	br	81358ec <__alt_data_end+0xfc1358ec>
 81359d8:	81308780 	call	8130878 <__sinit>
 81359dc:	003fbc06 	br	81358d0 <__alt_data_end+0xfc1358d0>

081359e0 <__swbuf>:
 81359e0:	00820534 	movhi	r2,2068
 81359e4:	10b63c04 	addi	r2,r2,-10000
 81359e8:	280d883a 	mov	r6,r5
 81359ec:	200b883a 	mov	r5,r4
 81359f0:	11000017 	ldw	r4,0(r2)
 81359f4:	81358a01 	jmpi	81358a0 <__swbuf_r>

081359f8 <_wcrtomb_r>:
 81359f8:	defff604 	addi	sp,sp,-40
 81359fc:	00820534 	movhi	r2,2068
 8135a00:	dc800815 	stw	r18,32(sp)
 8135a04:	dc400715 	stw	r17,28(sp)
 8135a08:	dc000615 	stw	r16,24(sp)
 8135a0c:	10b64004 	addi	r2,r2,-9984
 8135a10:	dfc00915 	stw	ra,36(sp)
 8135a14:	2021883a 	mov	r16,r4
 8135a18:	3823883a 	mov	r17,r7
 8135a1c:	14800017 	ldw	r18,0(r2)
 8135a20:	28001426 	beq	r5,zero,8135a74 <_wcrtomb_r+0x7c>
 8135a24:	d9400415 	stw	r5,16(sp)
 8135a28:	d9800515 	stw	r6,20(sp)
 8135a2c:	81313c80 	call	81313c8 <__locale_charset>
 8135a30:	d9800517 	ldw	r6,20(sp)
 8135a34:	d9400417 	ldw	r5,16(sp)
 8135a38:	100f883a 	mov	r7,r2
 8135a3c:	dc400015 	stw	r17,0(sp)
 8135a40:	8009883a 	mov	r4,r16
 8135a44:	903ee83a 	callr	r18
 8135a48:	00ffffc4 	movi	r3,-1
 8135a4c:	10c0031e 	bne	r2,r3,8135a5c <_wcrtomb_r+0x64>
 8135a50:	88000015 	stw	zero,0(r17)
 8135a54:	00c02284 	movi	r3,138
 8135a58:	80c00015 	stw	r3,0(r16)
 8135a5c:	dfc00917 	ldw	ra,36(sp)
 8135a60:	dc800817 	ldw	r18,32(sp)
 8135a64:	dc400717 	ldw	r17,28(sp)
 8135a68:	dc000617 	ldw	r16,24(sp)
 8135a6c:	dec00a04 	addi	sp,sp,40
 8135a70:	f800283a 	ret
 8135a74:	81313c80 	call	81313c8 <__locale_charset>
 8135a78:	100f883a 	mov	r7,r2
 8135a7c:	dc400015 	stw	r17,0(sp)
 8135a80:	000d883a 	mov	r6,zero
 8135a84:	d9400104 	addi	r5,sp,4
 8135a88:	8009883a 	mov	r4,r16
 8135a8c:	903ee83a 	callr	r18
 8135a90:	003fed06 	br	8135a48 <__alt_data_end+0xfc135a48>

08135a94 <wcrtomb>:
 8135a94:	defff604 	addi	sp,sp,-40
 8135a98:	00820534 	movhi	r2,2068
 8135a9c:	dc800615 	stw	r18,24(sp)
 8135aa0:	dc400515 	stw	r17,20(sp)
 8135aa4:	10b63c04 	addi	r2,r2,-10000
 8135aa8:	dfc00915 	stw	ra,36(sp)
 8135aac:	dd000815 	stw	r20,32(sp)
 8135ab0:	dcc00715 	stw	r19,28(sp)
 8135ab4:	dc000415 	stw	r16,16(sp)
 8135ab8:	3025883a 	mov	r18,r6
 8135abc:	14400017 	ldw	r17,0(r2)
 8135ac0:	20001926 	beq	r4,zero,8135b28 <wcrtomb+0x94>
 8135ac4:	00820534 	movhi	r2,2068
 8135ac8:	10b64004 	addi	r2,r2,-9984
 8135acc:	15000017 	ldw	r20,0(r2)
 8135ad0:	2021883a 	mov	r16,r4
 8135ad4:	2827883a 	mov	r19,r5
 8135ad8:	81313c80 	call	81313c8 <__locale_charset>
 8135adc:	100f883a 	mov	r7,r2
 8135ae0:	dc800015 	stw	r18,0(sp)
 8135ae4:	980d883a 	mov	r6,r19
 8135ae8:	800b883a 	mov	r5,r16
 8135aec:	8809883a 	mov	r4,r17
 8135af0:	a03ee83a 	callr	r20
 8135af4:	00ffffc4 	movi	r3,-1
 8135af8:	10c0031e 	bne	r2,r3,8135b08 <wcrtomb+0x74>
 8135afc:	90000015 	stw	zero,0(r18)
 8135b00:	00c02284 	movi	r3,138
 8135b04:	88c00015 	stw	r3,0(r17)
 8135b08:	dfc00917 	ldw	ra,36(sp)
 8135b0c:	dd000817 	ldw	r20,32(sp)
 8135b10:	dcc00717 	ldw	r19,28(sp)
 8135b14:	dc800617 	ldw	r18,24(sp)
 8135b18:	dc400517 	ldw	r17,20(sp)
 8135b1c:	dc000417 	ldw	r16,16(sp)
 8135b20:	dec00a04 	addi	sp,sp,40
 8135b24:	f800283a 	ret
 8135b28:	00820534 	movhi	r2,2068
 8135b2c:	10b64004 	addi	r2,r2,-9984
 8135b30:	14000017 	ldw	r16,0(r2)
 8135b34:	81313c80 	call	81313c8 <__locale_charset>
 8135b38:	100f883a 	mov	r7,r2
 8135b3c:	dc800015 	stw	r18,0(sp)
 8135b40:	000d883a 	mov	r6,zero
 8135b44:	d9400104 	addi	r5,sp,4
 8135b48:	8809883a 	mov	r4,r17
 8135b4c:	803ee83a 	callr	r16
 8135b50:	003fe806 	br	8135af4 <__alt_data_end+0xfc135af4>

08135b54 <__ascii_wctomb>:
 8135b54:	28000526 	beq	r5,zero,8135b6c <__ascii_wctomb+0x18>
 8135b58:	00803fc4 	movi	r2,255
 8135b5c:	11800536 	bltu	r2,r6,8135b74 <__ascii_wctomb+0x20>
 8135b60:	29800005 	stb	r6,0(r5)
 8135b64:	00800044 	movi	r2,1
 8135b68:	f800283a 	ret
 8135b6c:	0005883a 	mov	r2,zero
 8135b70:	f800283a 	ret
 8135b74:	00802284 	movi	r2,138
 8135b78:	20800015 	stw	r2,0(r4)
 8135b7c:	00bfffc4 	movi	r2,-1
 8135b80:	f800283a 	ret

08135b84 <_wctomb_r>:
 8135b84:	00820534 	movhi	r2,2068
 8135b88:	defff904 	addi	sp,sp,-28
 8135b8c:	10b64004 	addi	r2,r2,-9984
 8135b90:	dfc00615 	stw	ra,24(sp)
 8135b94:	dc400515 	stw	r17,20(sp)
 8135b98:	dc000415 	stw	r16,16(sp)
 8135b9c:	3823883a 	mov	r17,r7
 8135ba0:	14000017 	ldw	r16,0(r2)
 8135ba4:	d9000115 	stw	r4,4(sp)
 8135ba8:	d9400215 	stw	r5,8(sp)
 8135bac:	d9800315 	stw	r6,12(sp)
 8135bb0:	81313c80 	call	81313c8 <__locale_charset>
 8135bb4:	d9800317 	ldw	r6,12(sp)
 8135bb8:	d9400217 	ldw	r5,8(sp)
 8135bbc:	d9000117 	ldw	r4,4(sp)
 8135bc0:	100f883a 	mov	r7,r2
 8135bc4:	dc400015 	stw	r17,0(sp)
 8135bc8:	803ee83a 	callr	r16
 8135bcc:	dfc00617 	ldw	ra,24(sp)
 8135bd0:	dc400517 	ldw	r17,20(sp)
 8135bd4:	dc000417 	ldw	r16,16(sp)
 8135bd8:	dec00704 	addi	sp,sp,28
 8135bdc:	f800283a 	ret

08135be0 <__udivdi3>:
 8135be0:	defff404 	addi	sp,sp,-48
 8135be4:	dcc00515 	stw	r19,20(sp)
 8135be8:	dc000215 	stw	r16,8(sp)
 8135bec:	dfc00b15 	stw	ra,44(sp)
 8135bf0:	df000a15 	stw	fp,40(sp)
 8135bf4:	ddc00915 	stw	r23,36(sp)
 8135bf8:	dd800815 	stw	r22,32(sp)
 8135bfc:	dd400715 	stw	r21,28(sp)
 8135c00:	dd000615 	stw	r20,24(sp)
 8135c04:	dc800415 	stw	r18,16(sp)
 8135c08:	dc400315 	stw	r17,12(sp)
 8135c0c:	2027883a 	mov	r19,r4
 8135c10:	2821883a 	mov	r16,r5
 8135c14:	3800461e 	bne	r7,zero,8135d30 <__udivdi3+0x150>
 8135c18:	3023883a 	mov	r17,r6
 8135c1c:	2025883a 	mov	r18,r4
 8135c20:	2980572e 	bgeu	r5,r6,8135d80 <__udivdi3+0x1a0>
 8135c24:	00bfffd4 	movui	r2,65535
 8135c28:	282d883a 	mov	r22,r5
 8135c2c:	1180b236 	bltu	r2,r6,8135ef8 <__udivdi3+0x318>
 8135c30:	00803fc4 	movi	r2,255
 8135c34:	1185803a 	cmpltu	r2,r2,r6
 8135c38:	100490fa 	slli	r2,r2,3
 8135c3c:	3086d83a 	srl	r3,r6,r2
 8135c40:	01020534 	movhi	r4,2068
 8135c44:	212f4104 	addi	r4,r4,-17148
 8135c48:	20c7883a 	add	r3,r4,r3
 8135c4c:	18c00003 	ldbu	r3,0(r3)
 8135c50:	1885883a 	add	r2,r3,r2
 8135c54:	00c00804 	movi	r3,32
 8135c58:	1887c83a 	sub	r3,r3,r2
 8135c5c:	18000526 	beq	r3,zero,8135c74 <__udivdi3+0x94>
 8135c60:	80e0983a 	sll	r16,r16,r3
 8135c64:	9884d83a 	srl	r2,r19,r2
 8135c68:	30e2983a 	sll	r17,r6,r3
 8135c6c:	98e4983a 	sll	r18,r19,r3
 8135c70:	142cb03a 	or	r22,r2,r16
 8135c74:	882ad43a 	srli	r21,r17,16
 8135c78:	b009883a 	mov	r4,r22
 8135c7c:	8d3fffcc 	andi	r20,r17,65535
 8135c80:	a80b883a 	mov	r5,r21
 8135c84:	81368fc0 	call	81368fc <__umodsi3>
 8135c88:	b009883a 	mov	r4,r22
 8135c8c:	a80b883a 	mov	r5,r21
 8135c90:	1027883a 	mov	r19,r2
 8135c94:	81368980 	call	8136898 <__udivsi3>
 8135c98:	100b883a 	mov	r5,r2
 8135c9c:	a009883a 	mov	r4,r20
 8135ca0:	102d883a 	mov	r22,r2
 8135ca4:	812c2b80 	call	812c2b8 <__mulsi3>
 8135ca8:	9826943a 	slli	r19,r19,16
 8135cac:	9006d43a 	srli	r3,r18,16
 8135cb0:	1cc6b03a 	or	r3,r3,r19
 8135cb4:	1880052e 	bgeu	r3,r2,8135ccc <__udivdi3+0xec>
 8135cb8:	1c47883a 	add	r3,r3,r17
 8135cbc:	b13fffc4 	addi	r4,r22,-1
 8135cc0:	1c400136 	bltu	r3,r17,8135cc8 <__udivdi3+0xe8>
 8135cc4:	18814236 	bltu	r3,r2,81361d0 <__udivdi3+0x5f0>
 8135cc8:	202d883a 	mov	r22,r4
 8135ccc:	18a1c83a 	sub	r16,r3,r2
 8135cd0:	8009883a 	mov	r4,r16
 8135cd4:	a80b883a 	mov	r5,r21
 8135cd8:	81368fc0 	call	81368fc <__umodsi3>
 8135cdc:	1027883a 	mov	r19,r2
 8135ce0:	8009883a 	mov	r4,r16
 8135ce4:	a80b883a 	mov	r5,r21
 8135ce8:	9826943a 	slli	r19,r19,16
 8135cec:	81368980 	call	8136898 <__udivsi3>
 8135cf0:	100b883a 	mov	r5,r2
 8135cf4:	a009883a 	mov	r4,r20
 8135cf8:	94bfffcc 	andi	r18,r18,65535
 8135cfc:	1021883a 	mov	r16,r2
 8135d00:	94e4b03a 	or	r18,r18,r19
 8135d04:	812c2b80 	call	812c2b8 <__mulsi3>
 8135d08:	9080052e 	bgeu	r18,r2,8135d20 <__udivdi3+0x140>
 8135d0c:	8ca5883a 	add	r18,r17,r18
 8135d10:	80ffffc4 	addi	r3,r16,-1
 8135d14:	94410c36 	bltu	r18,r17,8136148 <__udivdi3+0x568>
 8135d18:	90810b2e 	bgeu	r18,r2,8136148 <__udivdi3+0x568>
 8135d1c:	843fff84 	addi	r16,r16,-2
 8135d20:	b004943a 	slli	r2,r22,16
 8135d24:	0007883a 	mov	r3,zero
 8135d28:	1404b03a 	or	r2,r2,r16
 8135d2c:	00005e06 	br	8135ea8 <__udivdi3+0x2c8>
 8135d30:	29c05b36 	bltu	r5,r7,8135ea0 <__udivdi3+0x2c0>
 8135d34:	00bfffd4 	movui	r2,65535
 8135d38:	11c0672e 	bgeu	r2,r7,8135ed8 <__udivdi3+0x2f8>
 8135d3c:	00804034 	movhi	r2,256
 8135d40:	10bfffc4 	addi	r2,r2,-1
 8135d44:	11c10a36 	bltu	r2,r7,8136170 <__udivdi3+0x590>
 8135d48:	00800404 	movi	r2,16
 8135d4c:	3886d83a 	srl	r3,r7,r2
 8135d50:	01020534 	movhi	r4,2068
 8135d54:	212f4104 	addi	r4,r4,-17148
 8135d58:	20c7883a 	add	r3,r4,r3
 8135d5c:	18c00003 	ldbu	r3,0(r3)
 8135d60:	05c00804 	movi	r23,32
 8135d64:	1885883a 	add	r2,r3,r2
 8135d68:	b8afc83a 	sub	r23,r23,r2
 8135d6c:	b800671e 	bne	r23,zero,8135f0c <__udivdi3+0x32c>
 8135d70:	3c010536 	bltu	r7,r16,8136188 <__udivdi3+0x5a8>
 8135d74:	9985403a 	cmpgeu	r2,r19,r6
 8135d78:	0007883a 	mov	r3,zero
 8135d7c:	00004a06 	br	8135ea8 <__udivdi3+0x2c8>
 8135d80:	3000041e 	bne	r6,zero,8135d94 <__udivdi3+0x1b4>
 8135d84:	000b883a 	mov	r5,zero
 8135d88:	01000044 	movi	r4,1
 8135d8c:	81368980 	call	8136898 <__udivsi3>
 8135d90:	1023883a 	mov	r17,r2
 8135d94:	00bfffd4 	movui	r2,65535
 8135d98:	1440532e 	bgeu	r2,r17,8135ee8 <__udivdi3+0x308>
 8135d9c:	00804034 	movhi	r2,256
 8135da0:	10bfffc4 	addi	r2,r2,-1
 8135da4:	1440f436 	bltu	r2,r17,8136178 <__udivdi3+0x598>
 8135da8:	00800404 	movi	r2,16
 8135dac:	8886d83a 	srl	r3,r17,r2
 8135db0:	01020534 	movhi	r4,2068
 8135db4:	212f4104 	addi	r4,r4,-17148
 8135db8:	20c7883a 	add	r3,r4,r3
 8135dbc:	18c00003 	ldbu	r3,0(r3)
 8135dc0:	1885883a 	add	r2,r3,r2
 8135dc4:	00c00804 	movi	r3,32
 8135dc8:	1887c83a 	sub	r3,r3,r2
 8135dcc:	1800a51e 	bne	r3,zero,8136064 <__udivdi3+0x484>
 8135dd0:	882ad43a 	srli	r21,r17,16
 8135dd4:	8461c83a 	sub	r16,r16,r17
 8135dd8:	8d3fffcc 	andi	r20,r17,65535
 8135ddc:	00c00044 	movi	r3,1
 8135de0:	a80b883a 	mov	r5,r21
 8135de4:	8009883a 	mov	r4,r16
 8135de8:	d8c00115 	stw	r3,4(sp)
 8135dec:	81368fc0 	call	81368fc <__umodsi3>
 8135df0:	a80b883a 	mov	r5,r21
 8135df4:	8009883a 	mov	r4,r16
 8135df8:	1027883a 	mov	r19,r2
 8135dfc:	81368980 	call	8136898 <__udivsi3>
 8135e00:	a00b883a 	mov	r5,r20
 8135e04:	1009883a 	mov	r4,r2
 8135e08:	102d883a 	mov	r22,r2
 8135e0c:	812c2b80 	call	812c2b8 <__mulsi3>
 8135e10:	9826943a 	slli	r19,r19,16
 8135e14:	900ed43a 	srli	r7,r18,16
 8135e18:	d8c00117 	ldw	r3,4(sp)
 8135e1c:	3cceb03a 	or	r7,r7,r19
 8135e20:	3880052e 	bgeu	r7,r2,8135e38 <__udivdi3+0x258>
 8135e24:	3c4f883a 	add	r7,r7,r17
 8135e28:	b13fffc4 	addi	r4,r22,-1
 8135e2c:	3c400136 	bltu	r7,r17,8135e34 <__udivdi3+0x254>
 8135e30:	3880e436 	bltu	r7,r2,81361c4 <__udivdi3+0x5e4>
 8135e34:	202d883a 	mov	r22,r4
 8135e38:	38a1c83a 	sub	r16,r7,r2
 8135e3c:	8009883a 	mov	r4,r16
 8135e40:	a80b883a 	mov	r5,r21
 8135e44:	d8c00115 	stw	r3,4(sp)
 8135e48:	81368fc0 	call	81368fc <__umodsi3>
 8135e4c:	1027883a 	mov	r19,r2
 8135e50:	8009883a 	mov	r4,r16
 8135e54:	a80b883a 	mov	r5,r21
 8135e58:	9826943a 	slli	r19,r19,16
 8135e5c:	81368980 	call	8136898 <__udivsi3>
 8135e60:	a00b883a 	mov	r5,r20
 8135e64:	1009883a 	mov	r4,r2
 8135e68:	94bfffcc 	andi	r18,r18,65535
 8135e6c:	1021883a 	mov	r16,r2
 8135e70:	94e4b03a 	or	r18,r18,r19
 8135e74:	812c2b80 	call	812c2b8 <__mulsi3>
 8135e78:	d8c00117 	ldw	r3,4(sp)
 8135e7c:	9080052e 	bgeu	r18,r2,8135e94 <__udivdi3+0x2b4>
 8135e80:	8ca5883a 	add	r18,r17,r18
 8135e84:	813fffc4 	addi	r4,r16,-1
 8135e88:	9440ad36 	bltu	r18,r17,8136140 <__udivdi3+0x560>
 8135e8c:	9080ac2e 	bgeu	r18,r2,8136140 <__udivdi3+0x560>
 8135e90:	843fff84 	addi	r16,r16,-2
 8135e94:	b004943a 	slli	r2,r22,16
 8135e98:	1404b03a 	or	r2,r2,r16
 8135e9c:	00000206 	br	8135ea8 <__udivdi3+0x2c8>
 8135ea0:	0007883a 	mov	r3,zero
 8135ea4:	0005883a 	mov	r2,zero
 8135ea8:	dfc00b17 	ldw	ra,44(sp)
 8135eac:	df000a17 	ldw	fp,40(sp)
 8135eb0:	ddc00917 	ldw	r23,36(sp)
 8135eb4:	dd800817 	ldw	r22,32(sp)
 8135eb8:	dd400717 	ldw	r21,28(sp)
 8135ebc:	dd000617 	ldw	r20,24(sp)
 8135ec0:	dcc00517 	ldw	r19,20(sp)
 8135ec4:	dc800417 	ldw	r18,16(sp)
 8135ec8:	dc400317 	ldw	r17,12(sp)
 8135ecc:	dc000217 	ldw	r16,8(sp)
 8135ed0:	dec00c04 	addi	sp,sp,48
 8135ed4:	f800283a 	ret
 8135ed8:	00803fc4 	movi	r2,255
 8135edc:	11c5803a 	cmpltu	r2,r2,r7
 8135ee0:	100490fa 	slli	r2,r2,3
 8135ee4:	003f9906 	br	8135d4c <__alt_data_end+0xfc135d4c>
 8135ee8:	00803fc4 	movi	r2,255
 8135eec:	1445803a 	cmpltu	r2,r2,r17
 8135ef0:	100490fa 	slli	r2,r2,3
 8135ef4:	003fad06 	br	8135dac <__alt_data_end+0xfc135dac>
 8135ef8:	00804034 	movhi	r2,256
 8135efc:	10bfffc4 	addi	r2,r2,-1
 8135f00:	11809f36 	bltu	r2,r6,8136180 <__udivdi3+0x5a0>
 8135f04:	00800404 	movi	r2,16
 8135f08:	003f4c06 	br	8135c3c <__alt_data_end+0xfc135c3c>
 8135f0c:	3dce983a 	sll	r7,r7,r23
 8135f10:	30b8d83a 	srl	fp,r6,r2
 8135f14:	80a2d83a 	srl	r17,r16,r2
 8135f18:	35cc983a 	sll	r6,r6,r23
 8135f1c:	3f38b03a 	or	fp,r7,fp
 8135f20:	e024d43a 	srli	r18,fp,16
 8135f24:	9884d83a 	srl	r2,r19,r2
 8135f28:	85e0983a 	sll	r16,r16,r23
 8135f2c:	8809883a 	mov	r4,r17
 8135f30:	900b883a 	mov	r5,r18
 8135f34:	d9800015 	stw	r6,0(sp)
 8135f38:	1420b03a 	or	r16,r2,r16
 8135f3c:	81368fc0 	call	81368fc <__umodsi3>
 8135f40:	900b883a 	mov	r5,r18
 8135f44:	8809883a 	mov	r4,r17
 8135f48:	1029883a 	mov	r20,r2
 8135f4c:	e5bfffcc 	andi	r22,fp,65535
 8135f50:	81368980 	call	8136898 <__udivsi3>
 8135f54:	100b883a 	mov	r5,r2
 8135f58:	b009883a 	mov	r4,r22
 8135f5c:	102b883a 	mov	r21,r2
 8135f60:	812c2b80 	call	812c2b8 <__mulsi3>
 8135f64:	a028943a 	slli	r20,r20,16
 8135f68:	8006d43a 	srli	r3,r16,16
 8135f6c:	1d06b03a 	or	r3,r3,r20
 8135f70:	1880042e 	bgeu	r3,r2,8135f84 <__udivdi3+0x3a4>
 8135f74:	1f07883a 	add	r3,r3,fp
 8135f78:	a93fffc4 	addi	r4,r21,-1
 8135f7c:	1f00892e 	bgeu	r3,fp,81361a4 <__udivdi3+0x5c4>
 8135f80:	202b883a 	mov	r21,r4
 8135f84:	18a3c83a 	sub	r17,r3,r2
 8135f88:	8809883a 	mov	r4,r17
 8135f8c:	900b883a 	mov	r5,r18
 8135f90:	81368fc0 	call	81368fc <__umodsi3>
 8135f94:	1029883a 	mov	r20,r2
 8135f98:	8809883a 	mov	r4,r17
 8135f9c:	900b883a 	mov	r5,r18
 8135fa0:	a028943a 	slli	r20,r20,16
 8135fa4:	81368980 	call	8136898 <__udivsi3>
 8135fa8:	100b883a 	mov	r5,r2
 8135fac:	b009883a 	mov	r4,r22
 8135fb0:	843fffcc 	andi	r16,r16,65535
 8135fb4:	1023883a 	mov	r17,r2
 8135fb8:	8520b03a 	or	r16,r16,r20
 8135fbc:	812c2b80 	call	812c2b8 <__mulsi3>
 8135fc0:	8080042e 	bgeu	r16,r2,8135fd4 <__udivdi3+0x3f4>
 8135fc4:	8721883a 	add	r16,r16,fp
 8135fc8:	88ffffc4 	addi	r3,r17,-1
 8135fcc:	8700712e 	bgeu	r16,fp,8136194 <__udivdi3+0x5b4>
 8135fd0:	1823883a 	mov	r17,r3
 8135fd4:	a80e943a 	slli	r7,r21,16
 8135fd8:	d8c00017 	ldw	r3,0(sp)
 8135fdc:	80a1c83a 	sub	r16,r16,r2
 8135fe0:	3c64b03a 	or	r18,r7,r17
 8135fe4:	1d3fffcc 	andi	r20,r3,65535
 8135fe8:	9022d43a 	srli	r17,r18,16
 8135fec:	95bfffcc 	andi	r22,r18,65535
 8135ff0:	a00b883a 	mov	r5,r20
 8135ff4:	b009883a 	mov	r4,r22
 8135ff8:	182ad43a 	srli	r21,r3,16
 8135ffc:	812c2b80 	call	812c2b8 <__mulsi3>
 8136000:	a00b883a 	mov	r5,r20
 8136004:	8809883a 	mov	r4,r17
 8136008:	1039883a 	mov	fp,r2
 813600c:	812c2b80 	call	812c2b8 <__mulsi3>
 8136010:	8809883a 	mov	r4,r17
 8136014:	a80b883a 	mov	r5,r21
 8136018:	1029883a 	mov	r20,r2
 813601c:	812c2b80 	call	812c2b8 <__mulsi3>
 8136020:	a80b883a 	mov	r5,r21
 8136024:	b009883a 	mov	r4,r22
 8136028:	1023883a 	mov	r17,r2
 813602c:	812c2b80 	call	812c2b8 <__mulsi3>
 8136030:	e006d43a 	srli	r3,fp,16
 8136034:	1505883a 	add	r2,r2,r20
 8136038:	1887883a 	add	r3,r3,r2
 813603c:	1d00022e 	bgeu	r3,r20,8136048 <__udivdi3+0x468>
 8136040:	00800074 	movhi	r2,1
 8136044:	88a3883a 	add	r17,r17,r2
 8136048:	1804d43a 	srli	r2,r3,16
 813604c:	1463883a 	add	r17,r2,r17
 8136050:	84404436 	bltu	r16,r17,8136164 <__udivdi3+0x584>
 8136054:	84403e26 	beq	r16,r17,8136150 <__udivdi3+0x570>
 8136058:	9005883a 	mov	r2,r18
 813605c:	0007883a 	mov	r3,zero
 8136060:	003f9106 	br	8135ea8 <__alt_data_end+0xfc135ea8>
 8136064:	88e2983a 	sll	r17,r17,r3
 8136068:	80aed83a 	srl	r23,r16,r2
 813606c:	80e0983a 	sll	r16,r16,r3
 8136070:	882ad43a 	srli	r21,r17,16
 8136074:	9884d83a 	srl	r2,r19,r2
 8136078:	b809883a 	mov	r4,r23
 813607c:	a80b883a 	mov	r5,r21
 8136080:	98e4983a 	sll	r18,r19,r3
 8136084:	142cb03a 	or	r22,r2,r16
 8136088:	81368fc0 	call	81368fc <__umodsi3>
 813608c:	b809883a 	mov	r4,r23
 8136090:	a80b883a 	mov	r5,r21
 8136094:	1027883a 	mov	r19,r2
 8136098:	8d3fffcc 	andi	r20,r17,65535
 813609c:	81368980 	call	8136898 <__udivsi3>
 81360a0:	a009883a 	mov	r4,r20
 81360a4:	100b883a 	mov	r5,r2
 81360a8:	102f883a 	mov	r23,r2
 81360ac:	812c2b80 	call	812c2b8 <__mulsi3>
 81360b0:	9826943a 	slli	r19,r19,16
 81360b4:	b008d43a 	srli	r4,r22,16
 81360b8:	24c8b03a 	or	r4,r4,r19
 81360bc:	2080062e 	bgeu	r4,r2,81360d8 <__udivdi3+0x4f8>
 81360c0:	2449883a 	add	r4,r4,r17
 81360c4:	b8ffffc4 	addi	r3,r23,-1
 81360c8:	24403c36 	bltu	r4,r17,81361bc <__udivdi3+0x5dc>
 81360cc:	20803b2e 	bgeu	r4,r2,81361bc <__udivdi3+0x5dc>
 81360d0:	bdffff84 	addi	r23,r23,-2
 81360d4:	2449883a 	add	r4,r4,r17
 81360d8:	20a1c83a 	sub	r16,r4,r2
 81360dc:	a80b883a 	mov	r5,r21
 81360e0:	8009883a 	mov	r4,r16
 81360e4:	81368fc0 	call	81368fc <__umodsi3>
 81360e8:	a80b883a 	mov	r5,r21
 81360ec:	8009883a 	mov	r4,r16
 81360f0:	1027883a 	mov	r19,r2
 81360f4:	81368980 	call	8136898 <__udivsi3>
 81360f8:	a009883a 	mov	r4,r20
 81360fc:	100b883a 	mov	r5,r2
 8136100:	9826943a 	slli	r19,r19,16
 8136104:	1039883a 	mov	fp,r2
 8136108:	812c2b80 	call	812c2b8 <__mulsi3>
 813610c:	b13fffcc 	andi	r4,r22,65535
 8136110:	24c8b03a 	or	r4,r4,r19
 8136114:	2080062e 	bgeu	r4,r2,8136130 <__udivdi3+0x550>
 8136118:	2449883a 	add	r4,r4,r17
 813611c:	e0ffffc4 	addi	r3,fp,-1
 8136120:	24402436 	bltu	r4,r17,81361b4 <__udivdi3+0x5d4>
 8136124:	2080232e 	bgeu	r4,r2,81361b4 <__udivdi3+0x5d4>
 8136128:	e73fff84 	addi	fp,fp,-2
 813612c:	2449883a 	add	r4,r4,r17
 8136130:	b82e943a 	slli	r23,r23,16
 8136134:	20a1c83a 	sub	r16,r4,r2
 8136138:	bf06b03a 	or	r3,r23,fp
 813613c:	003f2806 	br	8135de0 <__alt_data_end+0xfc135de0>
 8136140:	2021883a 	mov	r16,r4
 8136144:	003f5306 	br	8135e94 <__alt_data_end+0xfc135e94>
 8136148:	1821883a 	mov	r16,r3
 813614c:	003ef406 	br	8135d20 <__alt_data_end+0xfc135d20>
 8136150:	1806943a 	slli	r3,r3,16
 8136154:	9de6983a 	sll	r19,r19,r23
 8136158:	e73fffcc 	andi	fp,fp,65535
 813615c:	1f07883a 	add	r3,r3,fp
 8136160:	98ffbd2e 	bgeu	r19,r3,8136058 <__alt_data_end+0xfc136058>
 8136164:	90bfffc4 	addi	r2,r18,-1
 8136168:	0007883a 	mov	r3,zero
 813616c:	003f4e06 	br	8135ea8 <__alt_data_end+0xfc135ea8>
 8136170:	00800604 	movi	r2,24
 8136174:	003ef506 	br	8135d4c <__alt_data_end+0xfc135d4c>
 8136178:	00800604 	movi	r2,24
 813617c:	003f0b06 	br	8135dac <__alt_data_end+0xfc135dac>
 8136180:	00800604 	movi	r2,24
 8136184:	003ead06 	br	8135c3c <__alt_data_end+0xfc135c3c>
 8136188:	0007883a 	mov	r3,zero
 813618c:	00800044 	movi	r2,1
 8136190:	003f4506 	br	8135ea8 <__alt_data_end+0xfc135ea8>
 8136194:	80bf8e2e 	bgeu	r16,r2,8135fd0 <__alt_data_end+0xfc135fd0>
 8136198:	8c7fff84 	addi	r17,r17,-2
 813619c:	8721883a 	add	r16,r16,fp
 81361a0:	003f8c06 	br	8135fd4 <__alt_data_end+0xfc135fd4>
 81361a4:	18bf762e 	bgeu	r3,r2,8135f80 <__alt_data_end+0xfc135f80>
 81361a8:	ad7fff84 	addi	r21,r21,-2
 81361ac:	1f07883a 	add	r3,r3,fp
 81361b0:	003f7406 	br	8135f84 <__alt_data_end+0xfc135f84>
 81361b4:	1839883a 	mov	fp,r3
 81361b8:	003fdd06 	br	8136130 <__alt_data_end+0xfc136130>
 81361bc:	182f883a 	mov	r23,r3
 81361c0:	003fc506 	br	81360d8 <__alt_data_end+0xfc1360d8>
 81361c4:	b5bfff84 	addi	r22,r22,-2
 81361c8:	3c4f883a 	add	r7,r7,r17
 81361cc:	003f1a06 	br	8135e38 <__alt_data_end+0xfc135e38>
 81361d0:	b5bfff84 	addi	r22,r22,-2
 81361d4:	1c47883a 	add	r3,r3,r17
 81361d8:	003ebc06 	br	8135ccc <__alt_data_end+0xfc135ccc>

081361dc <__umoddi3>:
 81361dc:	defff304 	addi	sp,sp,-52
 81361e0:	df000b15 	stw	fp,44(sp)
 81361e4:	dc400415 	stw	r17,16(sp)
 81361e8:	dc000315 	stw	r16,12(sp)
 81361ec:	dfc00c15 	stw	ra,48(sp)
 81361f0:	ddc00a15 	stw	r23,40(sp)
 81361f4:	dd800915 	stw	r22,36(sp)
 81361f8:	dd400815 	stw	r21,32(sp)
 81361fc:	dd000715 	stw	r20,28(sp)
 8136200:	dcc00615 	stw	r19,24(sp)
 8136204:	dc800515 	stw	r18,20(sp)
 8136208:	2021883a 	mov	r16,r4
 813620c:	2823883a 	mov	r17,r5
 8136210:	2839883a 	mov	fp,r5
 8136214:	3800401e 	bne	r7,zero,8136318 <__umoddi3+0x13c>
 8136218:	3027883a 	mov	r19,r6
 813621c:	2029883a 	mov	r20,r4
 8136220:	2980552e 	bgeu	r5,r6,8136378 <__umoddi3+0x19c>
 8136224:	00bfffd4 	movui	r2,65535
 8136228:	1180a236 	bltu	r2,r6,81364b4 <__umoddi3+0x2d8>
 813622c:	01003fc4 	movi	r4,255
 8136230:	2189803a 	cmpltu	r4,r4,r6
 8136234:	200890fa 	slli	r4,r4,3
 8136238:	3104d83a 	srl	r2,r6,r4
 813623c:	00c20534 	movhi	r3,2068
 8136240:	18ef4104 	addi	r3,r3,-17148
 8136244:	1885883a 	add	r2,r3,r2
 8136248:	10c00003 	ldbu	r3,0(r2)
 813624c:	00800804 	movi	r2,32
 8136250:	1909883a 	add	r4,r3,r4
 8136254:	1125c83a 	sub	r18,r2,r4
 8136258:	90000526 	beq	r18,zero,8136270 <__umoddi3+0x94>
 813625c:	8ca2983a 	sll	r17,r17,r18
 8136260:	8108d83a 	srl	r4,r16,r4
 8136264:	34a6983a 	sll	r19,r6,r18
 8136268:	84a8983a 	sll	r20,r16,r18
 813626c:	2478b03a 	or	fp,r4,r17
 8136270:	982cd43a 	srli	r22,r19,16
 8136274:	e009883a 	mov	r4,fp
 8136278:	9dffffcc 	andi	r23,r19,65535
 813627c:	b00b883a 	mov	r5,r22
 8136280:	81368fc0 	call	81368fc <__umodsi3>
 8136284:	b00b883a 	mov	r5,r22
 8136288:	e009883a 	mov	r4,fp
 813628c:	102b883a 	mov	r21,r2
 8136290:	81368980 	call	8136898 <__udivsi3>
 8136294:	100b883a 	mov	r5,r2
 8136298:	b809883a 	mov	r4,r23
 813629c:	812c2b80 	call	812c2b8 <__mulsi3>
 81362a0:	a82a943a 	slli	r21,r21,16
 81362a4:	a006d43a 	srli	r3,r20,16
 81362a8:	1d46b03a 	or	r3,r3,r21
 81362ac:	1880032e 	bgeu	r3,r2,81362bc <__umoddi3+0xe0>
 81362b0:	1cc7883a 	add	r3,r3,r19
 81362b4:	1cc00136 	bltu	r3,r19,81362bc <__umoddi3+0xe0>
 81362b8:	18813136 	bltu	r3,r2,8136780 <__umoddi3+0x5a4>
 81362bc:	18a1c83a 	sub	r16,r3,r2
 81362c0:	b00b883a 	mov	r5,r22
 81362c4:	8009883a 	mov	r4,r16
 81362c8:	81368fc0 	call	81368fc <__umodsi3>
 81362cc:	b00b883a 	mov	r5,r22
 81362d0:	8009883a 	mov	r4,r16
 81362d4:	1023883a 	mov	r17,r2
 81362d8:	81368980 	call	8136898 <__udivsi3>
 81362dc:	100b883a 	mov	r5,r2
 81362e0:	b809883a 	mov	r4,r23
 81362e4:	8822943a 	slli	r17,r17,16
 81362e8:	812c2b80 	call	812c2b8 <__mulsi3>
 81362ec:	a0ffffcc 	andi	r3,r20,65535
 81362f0:	1c46b03a 	or	r3,r3,r17
 81362f4:	1880042e 	bgeu	r3,r2,8136308 <__umoddi3+0x12c>
 81362f8:	1cc7883a 	add	r3,r3,r19
 81362fc:	1cc00236 	bltu	r3,r19,8136308 <__umoddi3+0x12c>
 8136300:	1880012e 	bgeu	r3,r2,8136308 <__umoddi3+0x12c>
 8136304:	1cc7883a 	add	r3,r3,r19
 8136308:	1885c83a 	sub	r2,r3,r2
 813630c:	1484d83a 	srl	r2,r2,r18
 8136310:	0007883a 	mov	r3,zero
 8136314:	00005306 	br	8136464 <__umoddi3+0x288>
 8136318:	29c05036 	bltu	r5,r7,813645c <__umoddi3+0x280>
 813631c:	00bfffd4 	movui	r2,65535
 8136320:	11c05c2e 	bgeu	r2,r7,8136494 <__umoddi3+0x2b8>
 8136324:	00804034 	movhi	r2,256
 8136328:	10bfffc4 	addi	r2,r2,-1
 813632c:	11c10636 	bltu	r2,r7,8136748 <__umoddi3+0x56c>
 8136330:	01000404 	movi	r4,16
 8136334:	3904d83a 	srl	r2,r7,r4
 8136338:	00c20534 	movhi	r3,2068
 813633c:	18ef4104 	addi	r3,r3,-17148
 8136340:	1885883a 	add	r2,r3,r2
 8136344:	14c00003 	ldbu	r19,0(r2)
 8136348:	00c00804 	movi	r3,32
 813634c:	9927883a 	add	r19,r19,r4
 8136350:	1ce9c83a 	sub	r20,r3,r19
 8136354:	a0005c1e 	bne	r20,zero,81364c8 <__umoddi3+0x2ec>
 8136358:	3c400136 	bltu	r7,r17,8136360 <__umoddi3+0x184>
 813635c:	81810a36 	bltu	r16,r6,8136788 <__umoddi3+0x5ac>
 8136360:	8185c83a 	sub	r2,r16,r6
 8136364:	89e3c83a 	sub	r17,r17,r7
 8136368:	8089803a 	cmpltu	r4,r16,r2
 813636c:	8939c83a 	sub	fp,r17,r4
 8136370:	e007883a 	mov	r3,fp
 8136374:	00003b06 	br	8136464 <__umoddi3+0x288>
 8136378:	3000041e 	bne	r6,zero,813638c <__umoddi3+0x1b0>
 813637c:	000b883a 	mov	r5,zero
 8136380:	01000044 	movi	r4,1
 8136384:	81368980 	call	8136898 <__udivsi3>
 8136388:	1027883a 	mov	r19,r2
 813638c:	00bfffd4 	movui	r2,65535
 8136390:	14c0442e 	bgeu	r2,r19,81364a4 <__umoddi3+0x2c8>
 8136394:	00804034 	movhi	r2,256
 8136398:	10bfffc4 	addi	r2,r2,-1
 813639c:	14c0ec36 	bltu	r2,r19,8136750 <__umoddi3+0x574>
 81363a0:	00800404 	movi	r2,16
 81363a4:	9886d83a 	srl	r3,r19,r2
 81363a8:	01020534 	movhi	r4,2068
 81363ac:	212f4104 	addi	r4,r4,-17148
 81363b0:	20c7883a 	add	r3,r4,r3
 81363b4:	18c00003 	ldbu	r3,0(r3)
 81363b8:	1887883a 	add	r3,r3,r2
 81363bc:	00800804 	movi	r2,32
 81363c0:	10e5c83a 	sub	r18,r2,r3
 81363c4:	9000ab1e 	bne	r18,zero,8136674 <__umoddi3+0x498>
 81363c8:	982cd43a 	srli	r22,r19,16
 81363cc:	8ce3c83a 	sub	r17,r17,r19
 81363d0:	9dffffcc 	andi	r23,r19,65535
 81363d4:	b00b883a 	mov	r5,r22
 81363d8:	8809883a 	mov	r4,r17
 81363dc:	81368fc0 	call	81368fc <__umodsi3>
 81363e0:	b00b883a 	mov	r5,r22
 81363e4:	8809883a 	mov	r4,r17
 81363e8:	102b883a 	mov	r21,r2
 81363ec:	81368980 	call	8136898 <__udivsi3>
 81363f0:	b80b883a 	mov	r5,r23
 81363f4:	1009883a 	mov	r4,r2
 81363f8:	812c2b80 	call	812c2b8 <__mulsi3>
 81363fc:	a82a943a 	slli	r21,r21,16
 8136400:	a006d43a 	srli	r3,r20,16
 8136404:	1d46b03a 	or	r3,r3,r21
 8136408:	1880042e 	bgeu	r3,r2,813641c <__umoddi3+0x240>
 813640c:	1cc7883a 	add	r3,r3,r19
 8136410:	1cc00236 	bltu	r3,r19,813641c <__umoddi3+0x240>
 8136414:	1880012e 	bgeu	r3,r2,813641c <__umoddi3+0x240>
 8136418:	1cc7883a 	add	r3,r3,r19
 813641c:	18a1c83a 	sub	r16,r3,r2
 8136420:	b00b883a 	mov	r5,r22
 8136424:	8009883a 	mov	r4,r16
 8136428:	81368fc0 	call	81368fc <__umodsi3>
 813642c:	1023883a 	mov	r17,r2
 8136430:	b00b883a 	mov	r5,r22
 8136434:	8009883a 	mov	r4,r16
 8136438:	81368980 	call	8136898 <__udivsi3>
 813643c:	8822943a 	slli	r17,r17,16
 8136440:	b80b883a 	mov	r5,r23
 8136444:	1009883a 	mov	r4,r2
 8136448:	812c2b80 	call	812c2b8 <__mulsi3>
 813644c:	a53fffcc 	andi	r20,r20,65535
 8136450:	a446b03a 	or	r3,r20,r17
 8136454:	18bfac2e 	bgeu	r3,r2,8136308 <__alt_data_end+0xfc136308>
 8136458:	003fa706 	br	81362f8 <__alt_data_end+0xfc1362f8>
 813645c:	2005883a 	mov	r2,r4
 8136460:	2807883a 	mov	r3,r5
 8136464:	dfc00c17 	ldw	ra,48(sp)
 8136468:	df000b17 	ldw	fp,44(sp)
 813646c:	ddc00a17 	ldw	r23,40(sp)
 8136470:	dd800917 	ldw	r22,36(sp)
 8136474:	dd400817 	ldw	r21,32(sp)
 8136478:	dd000717 	ldw	r20,28(sp)
 813647c:	dcc00617 	ldw	r19,24(sp)
 8136480:	dc800517 	ldw	r18,20(sp)
 8136484:	dc400417 	ldw	r17,16(sp)
 8136488:	dc000317 	ldw	r16,12(sp)
 813648c:	dec00d04 	addi	sp,sp,52
 8136490:	f800283a 	ret
 8136494:	04c03fc4 	movi	r19,255
 8136498:	99c9803a 	cmpltu	r4,r19,r7
 813649c:	200890fa 	slli	r4,r4,3
 81364a0:	003fa406 	br	8136334 <__alt_data_end+0xfc136334>
 81364a4:	00803fc4 	movi	r2,255
 81364a8:	14c5803a 	cmpltu	r2,r2,r19
 81364ac:	100490fa 	slli	r2,r2,3
 81364b0:	003fbc06 	br	81363a4 <__alt_data_end+0xfc1363a4>
 81364b4:	00804034 	movhi	r2,256
 81364b8:	10bfffc4 	addi	r2,r2,-1
 81364bc:	1180a636 	bltu	r2,r6,8136758 <__umoddi3+0x57c>
 81364c0:	01000404 	movi	r4,16
 81364c4:	003f5c06 	br	8136238 <__alt_data_end+0xfc136238>
 81364c8:	3d0e983a 	sll	r7,r7,r20
 81364cc:	34ead83a 	srl	r21,r6,r19
 81364d0:	8cc6d83a 	srl	r3,r17,r19
 81364d4:	8d10983a 	sll	r8,r17,r20
 81364d8:	3d6ab03a 	or	r21,r7,r21
 81364dc:	a82cd43a 	srli	r22,r21,16
 81364e0:	84e2d83a 	srl	r17,r16,r19
 81364e4:	1809883a 	mov	r4,r3
 81364e8:	b00b883a 	mov	r5,r22
 81364ec:	8a22b03a 	or	r17,r17,r8
 81364f0:	3524983a 	sll	r18,r6,r20
 81364f4:	dc400015 	stw	r17,0(sp)
 81364f8:	d8c00115 	stw	r3,4(sp)
 81364fc:	81368fc0 	call	81368fc <__umodsi3>
 8136500:	d8c00117 	ldw	r3,4(sp)
 8136504:	b00b883a 	mov	r5,r22
 8136508:	1039883a 	mov	fp,r2
 813650c:	1809883a 	mov	r4,r3
 8136510:	81368980 	call	8136898 <__udivsi3>
 8136514:	adffffcc 	andi	r23,r21,65535
 8136518:	100b883a 	mov	r5,r2
 813651c:	b809883a 	mov	r4,r23
 8136520:	1023883a 	mov	r17,r2
 8136524:	812c2b80 	call	812c2b8 <__mulsi3>
 8136528:	d9400017 	ldw	r5,0(sp)
 813652c:	e008943a 	slli	r4,fp,16
 8136530:	8520983a 	sll	r16,r16,r20
 8136534:	2806d43a 	srli	r3,r5,16
 8136538:	1906b03a 	or	r3,r3,r4
 813653c:	1880042e 	bgeu	r3,r2,8136550 <__umoddi3+0x374>
 8136540:	1d47883a 	add	r3,r3,r21
 8136544:	893fffc4 	addi	r4,r17,-1
 8136548:	1d40892e 	bgeu	r3,r21,8136770 <__umoddi3+0x594>
 813654c:	2023883a 	mov	r17,r4
 8136550:	18b9c83a 	sub	fp,r3,r2
 8136554:	b00b883a 	mov	r5,r22
 8136558:	e009883a 	mov	r4,fp
 813655c:	81368fc0 	call	81368fc <__umodsi3>
 8136560:	b00b883a 	mov	r5,r22
 8136564:	e009883a 	mov	r4,fp
 8136568:	d8800215 	stw	r2,8(sp)
 813656c:	81368980 	call	8136898 <__udivsi3>
 8136570:	100b883a 	mov	r5,r2
 8136574:	b809883a 	mov	r4,r23
 8136578:	102d883a 	mov	r22,r2
 813657c:	812c2b80 	call	812c2b8 <__mulsi3>
 8136580:	d9800217 	ldw	r6,8(sp)
 8136584:	d8c00017 	ldw	r3,0(sp)
 8136588:	300c943a 	slli	r6,r6,16
 813658c:	1a3fffcc 	andi	r8,r3,65535
 8136590:	4190b03a 	or	r8,r8,r6
 8136594:	4080042e 	bgeu	r8,r2,81365a8 <__umoddi3+0x3cc>
 8136598:	4551883a 	add	r8,r8,r21
 813659c:	b0ffffc4 	addi	r3,r22,-1
 81365a0:	45406f2e 	bgeu	r8,r21,8136760 <__umoddi3+0x584>
 81365a4:	182d883a 	mov	r22,r3
 81365a8:	880e943a 	slli	r7,r17,16
 81365ac:	9006d43a 	srli	r3,r18,16
 81365b0:	91bfffcc 	andi	r6,r18,65535
 81365b4:	3dacb03a 	or	r22,r7,r22
 81365b8:	b02ed43a 	srli	r23,r22,16
 81365bc:	b5bfffcc 	andi	r22,r22,65535
 81365c0:	300b883a 	mov	r5,r6
 81365c4:	b009883a 	mov	r4,r22
 81365c8:	40a3c83a 	sub	r17,r8,r2
 81365cc:	d8c00115 	stw	r3,4(sp)
 81365d0:	d9800215 	stw	r6,8(sp)
 81365d4:	812c2b80 	call	812c2b8 <__mulsi3>
 81365d8:	d9800217 	ldw	r6,8(sp)
 81365dc:	b809883a 	mov	r4,r23
 81365e0:	1039883a 	mov	fp,r2
 81365e4:	300b883a 	mov	r5,r6
 81365e8:	812c2b80 	call	812c2b8 <__mulsi3>
 81365ec:	d8c00117 	ldw	r3,4(sp)
 81365f0:	b809883a 	mov	r4,r23
 81365f4:	d8800215 	stw	r2,8(sp)
 81365f8:	180b883a 	mov	r5,r3
 81365fc:	812c2b80 	call	812c2b8 <__mulsi3>
 8136600:	d8c00117 	ldw	r3,4(sp)
 8136604:	b009883a 	mov	r4,r22
 8136608:	102f883a 	mov	r23,r2
 813660c:	180b883a 	mov	r5,r3
 8136610:	812c2b80 	call	812c2b8 <__mulsi3>
 8136614:	d9800217 	ldw	r6,8(sp)
 8136618:	e006d43a 	srli	r3,fp,16
 813661c:	1185883a 	add	r2,r2,r6
 8136620:	1885883a 	add	r2,r3,r2
 8136624:	1180022e 	bgeu	r2,r6,8136630 <__umoddi3+0x454>
 8136628:	00c00074 	movhi	r3,1
 813662c:	b8ef883a 	add	r23,r23,r3
 8136630:	1006d43a 	srli	r3,r2,16
 8136634:	1004943a 	slli	r2,r2,16
 8136638:	e73fffcc 	andi	fp,fp,65535
 813663c:	1dc7883a 	add	r3,r3,r23
 8136640:	1739883a 	add	fp,r2,fp
 8136644:	88c03a36 	bltu	r17,r3,8136730 <__umoddi3+0x554>
 8136648:	88c05126 	beq	r17,r3,8136790 <__umoddi3+0x5b4>
 813664c:	88c9c83a 	sub	r4,r17,r3
 8136650:	e00f883a 	mov	r7,fp
 8136654:	81cfc83a 	sub	r7,r16,r7
 8136658:	81c7803a 	cmpltu	r3,r16,r7
 813665c:	20c7c83a 	sub	r3,r4,r3
 8136660:	1cc4983a 	sll	r2,r3,r19
 8136664:	3d0ed83a 	srl	r7,r7,r20
 8136668:	1d06d83a 	srl	r3,r3,r20
 813666c:	11c4b03a 	or	r2,r2,r7
 8136670:	003f7c06 	br	8136464 <__alt_data_end+0xfc136464>
 8136674:	9ca6983a 	sll	r19,r19,r18
 8136678:	88f8d83a 	srl	fp,r17,r3
 813667c:	80c4d83a 	srl	r2,r16,r3
 8136680:	982cd43a 	srli	r22,r19,16
 8136684:	8ca2983a 	sll	r17,r17,r18
 8136688:	e009883a 	mov	r4,fp
 813668c:	b00b883a 	mov	r5,r22
 8136690:	146ab03a 	or	r21,r2,r17
 8136694:	81368fc0 	call	81368fc <__umodsi3>
 8136698:	b00b883a 	mov	r5,r22
 813669c:	e009883a 	mov	r4,fp
 81366a0:	1029883a 	mov	r20,r2
 81366a4:	9dffffcc 	andi	r23,r19,65535
 81366a8:	81368980 	call	8136898 <__udivsi3>
 81366ac:	b809883a 	mov	r4,r23
 81366b0:	100b883a 	mov	r5,r2
 81366b4:	812c2b80 	call	812c2b8 <__mulsi3>
 81366b8:	a008943a 	slli	r4,r20,16
 81366bc:	a806d43a 	srli	r3,r21,16
 81366c0:	84a8983a 	sll	r20,r16,r18
 81366c4:	1906b03a 	or	r3,r3,r4
 81366c8:	1880042e 	bgeu	r3,r2,81366dc <__umoddi3+0x500>
 81366cc:	1cc7883a 	add	r3,r3,r19
 81366d0:	1cc00236 	bltu	r3,r19,81366dc <__umoddi3+0x500>
 81366d4:	1880012e 	bgeu	r3,r2,81366dc <__umoddi3+0x500>
 81366d8:	1cc7883a 	add	r3,r3,r19
 81366dc:	18a3c83a 	sub	r17,r3,r2
 81366e0:	b00b883a 	mov	r5,r22
 81366e4:	8809883a 	mov	r4,r17
 81366e8:	81368fc0 	call	81368fc <__umodsi3>
 81366ec:	b00b883a 	mov	r5,r22
 81366f0:	8809883a 	mov	r4,r17
 81366f4:	1021883a 	mov	r16,r2
 81366f8:	81368980 	call	8136898 <__udivsi3>
 81366fc:	100b883a 	mov	r5,r2
 8136700:	b809883a 	mov	r4,r23
 8136704:	8020943a 	slli	r16,r16,16
 8136708:	812c2b80 	call	812c2b8 <__mulsi3>
 813670c:	a8ffffcc 	andi	r3,r21,65535
 8136710:	1c06b03a 	or	r3,r3,r16
 8136714:	1880042e 	bgeu	r3,r2,8136728 <__umoddi3+0x54c>
 8136718:	1cc7883a 	add	r3,r3,r19
 813671c:	1cc00236 	bltu	r3,r19,8136728 <__umoddi3+0x54c>
 8136720:	1880012e 	bgeu	r3,r2,8136728 <__umoddi3+0x54c>
 8136724:	1cc7883a 	add	r3,r3,r19
 8136728:	18a3c83a 	sub	r17,r3,r2
 813672c:	003f2906 	br	81363d4 <__alt_data_end+0xfc1363d4>
 8136730:	e48fc83a 	sub	r7,fp,r18
 8136734:	1d49c83a 	sub	r4,r3,r21
 8136738:	e1f9803a 	cmpltu	fp,fp,r7
 813673c:	2739c83a 	sub	fp,r4,fp
 8136740:	8f09c83a 	sub	r4,r17,fp
 8136744:	003fc306 	br	8136654 <__alt_data_end+0xfc136654>
 8136748:	01000604 	movi	r4,24
 813674c:	003ef906 	br	8136334 <__alt_data_end+0xfc136334>
 8136750:	00800604 	movi	r2,24
 8136754:	003f1306 	br	81363a4 <__alt_data_end+0xfc1363a4>
 8136758:	01000604 	movi	r4,24
 813675c:	003eb606 	br	8136238 <__alt_data_end+0xfc136238>
 8136760:	40bf902e 	bgeu	r8,r2,81365a4 <__alt_data_end+0xfc1365a4>
 8136764:	b5bfff84 	addi	r22,r22,-2
 8136768:	4551883a 	add	r8,r8,r21
 813676c:	003f8e06 	br	81365a8 <__alt_data_end+0xfc1365a8>
 8136770:	18bf762e 	bgeu	r3,r2,813654c <__alt_data_end+0xfc13654c>
 8136774:	8c7fff84 	addi	r17,r17,-2
 8136778:	1d47883a 	add	r3,r3,r21
 813677c:	003f7406 	br	8136550 <__alt_data_end+0xfc136550>
 8136780:	1cc7883a 	add	r3,r3,r19
 8136784:	003ecd06 	br	81362bc <__alt_data_end+0xfc1362bc>
 8136788:	8005883a 	mov	r2,r16
 813678c:	003ef806 	br	8136370 <__alt_data_end+0xfc136370>
 8136790:	873fe736 	bltu	r16,fp,8136730 <__alt_data_end+0xfc136730>
 8136794:	e00f883a 	mov	r7,fp
 8136798:	0009883a 	mov	r4,zero
 813679c:	003fad06 	br	8136654 <__alt_data_end+0xfc136654>

081367a0 <__divsi3>:
 81367a0:	20001b16 	blt	r4,zero,8136810 <__divsi3+0x70>
 81367a4:	000f883a 	mov	r7,zero
 81367a8:	28001616 	blt	r5,zero,8136804 <__divsi3+0x64>
 81367ac:	200d883a 	mov	r6,r4
 81367b0:	29001a2e 	bgeu	r5,r4,813681c <__divsi3+0x7c>
 81367b4:	00800804 	movi	r2,32
 81367b8:	00c00044 	movi	r3,1
 81367bc:	00000106 	br	81367c4 <__divsi3+0x24>
 81367c0:	10000d26 	beq	r2,zero,81367f8 <__divsi3+0x58>
 81367c4:	294b883a 	add	r5,r5,r5
 81367c8:	10bfffc4 	addi	r2,r2,-1
 81367cc:	18c7883a 	add	r3,r3,r3
 81367d0:	293ffb36 	bltu	r5,r4,81367c0 <__alt_data_end+0xfc1367c0>
 81367d4:	0005883a 	mov	r2,zero
 81367d8:	18000726 	beq	r3,zero,81367f8 <__divsi3+0x58>
 81367dc:	0005883a 	mov	r2,zero
 81367e0:	31400236 	bltu	r6,r5,81367ec <__divsi3+0x4c>
 81367e4:	314dc83a 	sub	r6,r6,r5
 81367e8:	10c4b03a 	or	r2,r2,r3
 81367ec:	1806d07a 	srli	r3,r3,1
 81367f0:	280ad07a 	srli	r5,r5,1
 81367f4:	183ffa1e 	bne	r3,zero,81367e0 <__alt_data_end+0xfc1367e0>
 81367f8:	38000126 	beq	r7,zero,8136800 <__divsi3+0x60>
 81367fc:	0085c83a 	sub	r2,zero,r2
 8136800:	f800283a 	ret
 8136804:	014bc83a 	sub	r5,zero,r5
 8136808:	39c0005c 	xori	r7,r7,1
 813680c:	003fe706 	br	81367ac <__alt_data_end+0xfc1367ac>
 8136810:	0109c83a 	sub	r4,zero,r4
 8136814:	01c00044 	movi	r7,1
 8136818:	003fe306 	br	81367a8 <__alt_data_end+0xfc1367a8>
 813681c:	00c00044 	movi	r3,1
 8136820:	003fee06 	br	81367dc <__alt_data_end+0xfc1367dc>

08136824 <__modsi3>:
 8136824:	20001716 	blt	r4,zero,8136884 <__modsi3+0x60>
 8136828:	000f883a 	mov	r7,zero
 813682c:	2005883a 	mov	r2,r4
 8136830:	28001216 	blt	r5,zero,813687c <__modsi3+0x58>
 8136834:	2900162e 	bgeu	r5,r4,8136890 <__modsi3+0x6c>
 8136838:	01800804 	movi	r6,32
 813683c:	00c00044 	movi	r3,1
 8136840:	00000106 	br	8136848 <__modsi3+0x24>
 8136844:	30000a26 	beq	r6,zero,8136870 <__modsi3+0x4c>
 8136848:	294b883a 	add	r5,r5,r5
 813684c:	31bfffc4 	addi	r6,r6,-1
 8136850:	18c7883a 	add	r3,r3,r3
 8136854:	293ffb36 	bltu	r5,r4,8136844 <__alt_data_end+0xfc136844>
 8136858:	18000526 	beq	r3,zero,8136870 <__modsi3+0x4c>
 813685c:	1806d07a 	srli	r3,r3,1
 8136860:	11400136 	bltu	r2,r5,8136868 <__modsi3+0x44>
 8136864:	1145c83a 	sub	r2,r2,r5
 8136868:	280ad07a 	srli	r5,r5,1
 813686c:	183ffb1e 	bne	r3,zero,813685c <__alt_data_end+0xfc13685c>
 8136870:	38000126 	beq	r7,zero,8136878 <__modsi3+0x54>
 8136874:	0085c83a 	sub	r2,zero,r2
 8136878:	f800283a 	ret
 813687c:	014bc83a 	sub	r5,zero,r5
 8136880:	003fec06 	br	8136834 <__alt_data_end+0xfc136834>
 8136884:	0109c83a 	sub	r4,zero,r4
 8136888:	01c00044 	movi	r7,1
 813688c:	003fe706 	br	813682c <__alt_data_end+0xfc13682c>
 8136890:	00c00044 	movi	r3,1
 8136894:	003ff106 	br	813685c <__alt_data_end+0xfc13685c>

08136898 <__udivsi3>:
 8136898:	200d883a 	mov	r6,r4
 813689c:	2900152e 	bgeu	r5,r4,81368f4 <__udivsi3+0x5c>
 81368a0:	28001416 	blt	r5,zero,81368f4 <__udivsi3+0x5c>
 81368a4:	00800804 	movi	r2,32
 81368a8:	00c00044 	movi	r3,1
 81368ac:	00000206 	br	81368b8 <__udivsi3+0x20>
 81368b0:	10000e26 	beq	r2,zero,81368ec <__udivsi3+0x54>
 81368b4:	28000516 	blt	r5,zero,81368cc <__udivsi3+0x34>
 81368b8:	294b883a 	add	r5,r5,r5
 81368bc:	10bfffc4 	addi	r2,r2,-1
 81368c0:	18c7883a 	add	r3,r3,r3
 81368c4:	293ffa36 	bltu	r5,r4,81368b0 <__alt_data_end+0xfc1368b0>
 81368c8:	18000826 	beq	r3,zero,81368ec <__udivsi3+0x54>
 81368cc:	0005883a 	mov	r2,zero
 81368d0:	31400236 	bltu	r6,r5,81368dc <__udivsi3+0x44>
 81368d4:	314dc83a 	sub	r6,r6,r5
 81368d8:	10c4b03a 	or	r2,r2,r3
 81368dc:	1806d07a 	srli	r3,r3,1
 81368e0:	280ad07a 	srli	r5,r5,1
 81368e4:	183ffa1e 	bne	r3,zero,81368d0 <__alt_data_end+0xfc1368d0>
 81368e8:	f800283a 	ret
 81368ec:	0005883a 	mov	r2,zero
 81368f0:	f800283a 	ret
 81368f4:	00c00044 	movi	r3,1
 81368f8:	003ff406 	br	81368cc <__alt_data_end+0xfc1368cc>

081368fc <__umodsi3>:
 81368fc:	2005883a 	mov	r2,r4
 8136900:	2900122e 	bgeu	r5,r4,813694c <__umodsi3+0x50>
 8136904:	28001116 	blt	r5,zero,813694c <__umodsi3+0x50>
 8136908:	01800804 	movi	r6,32
 813690c:	00c00044 	movi	r3,1
 8136910:	00000206 	br	813691c <__umodsi3+0x20>
 8136914:	30000c26 	beq	r6,zero,8136948 <__umodsi3+0x4c>
 8136918:	28000516 	blt	r5,zero,8136930 <__umodsi3+0x34>
 813691c:	294b883a 	add	r5,r5,r5
 8136920:	31bfffc4 	addi	r6,r6,-1
 8136924:	18c7883a 	add	r3,r3,r3
 8136928:	293ffa36 	bltu	r5,r4,8136914 <__alt_data_end+0xfc136914>
 813692c:	18000626 	beq	r3,zero,8136948 <__umodsi3+0x4c>
 8136930:	1806d07a 	srli	r3,r3,1
 8136934:	11400136 	bltu	r2,r5,813693c <__umodsi3+0x40>
 8136938:	1145c83a 	sub	r2,r2,r5
 813693c:	280ad07a 	srli	r5,r5,1
 8136940:	183ffb1e 	bne	r3,zero,8136930 <__alt_data_end+0xfc136930>
 8136944:	f800283a 	ret
 8136948:	f800283a 	ret
 813694c:	00c00044 	movi	r3,1
 8136950:	003ff706 	br	8136930 <__alt_data_end+0xfc136930>

08136954 <__adddf3>:
 8136954:	02c00434 	movhi	r11,16
 8136958:	5affffc4 	addi	r11,r11,-1
 813695c:	2806d7fa 	srli	r3,r5,31
 8136960:	2ad4703a 	and	r10,r5,r11
 8136964:	3ad2703a 	and	r9,r7,r11
 8136968:	3804d53a 	srli	r2,r7,20
 813696c:	3018d77a 	srli	r12,r6,29
 8136970:	280ad53a 	srli	r5,r5,20
 8136974:	501490fa 	slli	r10,r10,3
 8136978:	2010d77a 	srli	r8,r4,29
 813697c:	481290fa 	slli	r9,r9,3
 8136980:	380ed7fa 	srli	r7,r7,31
 8136984:	defffb04 	addi	sp,sp,-20
 8136988:	dc800215 	stw	r18,8(sp)
 813698c:	dc400115 	stw	r17,4(sp)
 8136990:	dc000015 	stw	r16,0(sp)
 8136994:	dfc00415 	stw	ra,16(sp)
 8136998:	dcc00315 	stw	r19,12(sp)
 813699c:	1c803fcc 	andi	r18,r3,255
 81369a0:	2c01ffcc 	andi	r16,r5,2047
 81369a4:	5210b03a 	or	r8,r10,r8
 81369a8:	202290fa 	slli	r17,r4,3
 81369ac:	1081ffcc 	andi	r2,r2,2047
 81369b0:	4b12b03a 	or	r9,r9,r12
 81369b4:	300c90fa 	slli	r6,r6,3
 81369b8:	91c07526 	beq	r18,r7,8136b90 <__adddf3+0x23c>
 81369bc:	8087c83a 	sub	r3,r16,r2
 81369c0:	00c0ab0e 	bge	zero,r3,8136c70 <__adddf3+0x31c>
 81369c4:	10002a1e 	bne	r2,zero,8136a70 <__adddf3+0x11c>
 81369c8:	4984b03a 	or	r2,r9,r6
 81369cc:	1000961e 	bne	r2,zero,8136c28 <__adddf3+0x2d4>
 81369d0:	888001cc 	andi	r2,r17,7
 81369d4:	10000726 	beq	r2,zero,81369f4 <__adddf3+0xa0>
 81369d8:	888003cc 	andi	r2,r17,15
 81369dc:	00c00104 	movi	r3,4
 81369e0:	10c00426 	beq	r2,r3,81369f4 <__adddf3+0xa0>
 81369e4:	88c7883a 	add	r3,r17,r3
 81369e8:	1c63803a 	cmpltu	r17,r3,r17
 81369ec:	4451883a 	add	r8,r8,r17
 81369f0:	1823883a 	mov	r17,r3
 81369f4:	4080202c 	andhi	r2,r8,128
 81369f8:	10005926 	beq	r2,zero,8136b60 <__adddf3+0x20c>
 81369fc:	84000044 	addi	r16,r16,1
 8136a00:	0081ffc4 	movi	r2,2047
 8136a04:	8080ba26 	beq	r16,r2,8136cf0 <__adddf3+0x39c>
 8136a08:	00bfe034 	movhi	r2,65408
 8136a0c:	10bfffc4 	addi	r2,r2,-1
 8136a10:	4090703a 	and	r8,r8,r2
 8136a14:	4004977a 	slli	r2,r8,29
 8136a18:	4010927a 	slli	r8,r8,9
 8136a1c:	8822d0fa 	srli	r17,r17,3
 8136a20:	8401ffcc 	andi	r16,r16,2047
 8136a24:	4010d33a 	srli	r8,r8,12
 8136a28:	9007883a 	mov	r3,r18
 8136a2c:	1444b03a 	or	r2,r2,r17
 8136a30:	8401ffcc 	andi	r16,r16,2047
 8136a34:	8020953a 	slli	r16,r16,20
 8136a38:	18c03fcc 	andi	r3,r3,255
 8136a3c:	01000434 	movhi	r4,16
 8136a40:	213fffc4 	addi	r4,r4,-1
 8136a44:	180697fa 	slli	r3,r3,31
 8136a48:	4110703a 	and	r8,r8,r4
 8136a4c:	4410b03a 	or	r8,r8,r16
 8136a50:	40c6b03a 	or	r3,r8,r3
 8136a54:	dfc00417 	ldw	ra,16(sp)
 8136a58:	dcc00317 	ldw	r19,12(sp)
 8136a5c:	dc800217 	ldw	r18,8(sp)
 8136a60:	dc400117 	ldw	r17,4(sp)
 8136a64:	dc000017 	ldw	r16,0(sp)
 8136a68:	dec00504 	addi	sp,sp,20
 8136a6c:	f800283a 	ret
 8136a70:	0081ffc4 	movi	r2,2047
 8136a74:	80bfd626 	beq	r16,r2,81369d0 <__alt_data_end+0xfc1369d0>
 8136a78:	4a402034 	orhi	r9,r9,128
 8136a7c:	00800e04 	movi	r2,56
 8136a80:	10c09f16 	blt	r2,r3,8136d00 <__adddf3+0x3ac>
 8136a84:	008007c4 	movi	r2,31
 8136a88:	10c0c216 	blt	r2,r3,8136d94 <__adddf3+0x440>
 8136a8c:	00800804 	movi	r2,32
 8136a90:	10c5c83a 	sub	r2,r2,r3
 8136a94:	488a983a 	sll	r5,r9,r2
 8136a98:	30c8d83a 	srl	r4,r6,r3
 8136a9c:	3084983a 	sll	r2,r6,r2
 8136aa0:	48c6d83a 	srl	r3,r9,r3
 8136aa4:	290cb03a 	or	r6,r5,r4
 8136aa8:	1004c03a 	cmpne	r2,r2,zero
 8136aac:	308cb03a 	or	r6,r6,r2
 8136ab0:	898dc83a 	sub	r6,r17,r6
 8136ab4:	89a3803a 	cmpltu	r17,r17,r6
 8136ab8:	40d1c83a 	sub	r8,r8,r3
 8136abc:	4451c83a 	sub	r8,r8,r17
 8136ac0:	3023883a 	mov	r17,r6
 8136ac4:	4080202c 	andhi	r2,r8,128
 8136ac8:	10002326 	beq	r2,zero,8136b58 <__adddf3+0x204>
 8136acc:	04c02034 	movhi	r19,128
 8136ad0:	9cffffc4 	addi	r19,r19,-1
 8136ad4:	44e6703a 	and	r19,r8,r19
 8136ad8:	98007626 	beq	r19,zero,8136cb4 <__adddf3+0x360>
 8136adc:	9809883a 	mov	r4,r19
 8136ae0:	81391940 	call	8139194 <__clzsi2>
 8136ae4:	10fffe04 	addi	r3,r2,-8
 8136ae8:	010007c4 	movi	r4,31
 8136aec:	20c07716 	blt	r4,r3,8136ccc <__adddf3+0x378>
 8136af0:	00800804 	movi	r2,32
 8136af4:	10c5c83a 	sub	r2,r2,r3
 8136af8:	8884d83a 	srl	r2,r17,r2
 8136afc:	98d0983a 	sll	r8,r19,r3
 8136b00:	88e2983a 	sll	r17,r17,r3
 8136b04:	1204b03a 	or	r2,r2,r8
 8136b08:	1c007416 	blt	r3,r16,8136cdc <__adddf3+0x388>
 8136b0c:	1c21c83a 	sub	r16,r3,r16
 8136b10:	82000044 	addi	r8,r16,1
 8136b14:	00c007c4 	movi	r3,31
 8136b18:	1a009116 	blt	r3,r8,8136d60 <__adddf3+0x40c>
 8136b1c:	00c00804 	movi	r3,32
 8136b20:	1a07c83a 	sub	r3,r3,r8
 8136b24:	8a08d83a 	srl	r4,r17,r8
 8136b28:	88e2983a 	sll	r17,r17,r3
 8136b2c:	10c6983a 	sll	r3,r2,r3
 8136b30:	1210d83a 	srl	r8,r2,r8
 8136b34:	8804c03a 	cmpne	r2,r17,zero
 8136b38:	1906b03a 	or	r3,r3,r4
 8136b3c:	18a2b03a 	or	r17,r3,r2
 8136b40:	0021883a 	mov	r16,zero
 8136b44:	003fa206 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136b48:	1890b03a 	or	r8,r3,r2
 8136b4c:	40017d26 	beq	r8,zero,8137144 <__adddf3+0x7f0>
 8136b50:	1011883a 	mov	r8,r2
 8136b54:	1823883a 	mov	r17,r3
 8136b58:	888001cc 	andi	r2,r17,7
 8136b5c:	103f9e1e 	bne	r2,zero,81369d8 <__alt_data_end+0xfc1369d8>
 8136b60:	4004977a 	slli	r2,r8,29
 8136b64:	8822d0fa 	srli	r17,r17,3
 8136b68:	4010d0fa 	srli	r8,r8,3
 8136b6c:	9007883a 	mov	r3,r18
 8136b70:	1444b03a 	or	r2,r2,r17
 8136b74:	0101ffc4 	movi	r4,2047
 8136b78:	81002426 	beq	r16,r4,8136c0c <__adddf3+0x2b8>
 8136b7c:	8120703a 	and	r16,r16,r4
 8136b80:	01000434 	movhi	r4,16
 8136b84:	213fffc4 	addi	r4,r4,-1
 8136b88:	4110703a 	and	r8,r8,r4
 8136b8c:	003fa806 	br	8136a30 <__alt_data_end+0xfc136a30>
 8136b90:	8089c83a 	sub	r4,r16,r2
 8136b94:	01005e0e 	bge	zero,r4,8136d10 <__adddf3+0x3bc>
 8136b98:	10002b26 	beq	r2,zero,8136c48 <__adddf3+0x2f4>
 8136b9c:	0081ffc4 	movi	r2,2047
 8136ba0:	80bf8b26 	beq	r16,r2,81369d0 <__alt_data_end+0xfc1369d0>
 8136ba4:	4a402034 	orhi	r9,r9,128
 8136ba8:	00800e04 	movi	r2,56
 8136bac:	1100a40e 	bge	r2,r4,8136e40 <__adddf3+0x4ec>
 8136bb0:	498cb03a 	or	r6,r9,r6
 8136bb4:	300ac03a 	cmpne	r5,r6,zero
 8136bb8:	0013883a 	mov	r9,zero
 8136bbc:	2c4b883a 	add	r5,r5,r17
 8136bc0:	2c63803a 	cmpltu	r17,r5,r17
 8136bc4:	4a11883a 	add	r8,r9,r8
 8136bc8:	8a11883a 	add	r8,r17,r8
 8136bcc:	2823883a 	mov	r17,r5
 8136bd0:	4080202c 	andhi	r2,r8,128
 8136bd4:	103fe026 	beq	r2,zero,8136b58 <__alt_data_end+0xfc136b58>
 8136bd8:	84000044 	addi	r16,r16,1
 8136bdc:	0081ffc4 	movi	r2,2047
 8136be0:	8080d226 	beq	r16,r2,8136f2c <__adddf3+0x5d8>
 8136be4:	00bfe034 	movhi	r2,65408
 8136be8:	10bfffc4 	addi	r2,r2,-1
 8136bec:	4090703a 	and	r8,r8,r2
 8136bf0:	880ad07a 	srli	r5,r17,1
 8136bf4:	400897fa 	slli	r4,r8,31
 8136bf8:	88c0004c 	andi	r3,r17,1
 8136bfc:	28e2b03a 	or	r17,r5,r3
 8136c00:	4010d07a 	srli	r8,r8,1
 8136c04:	2462b03a 	or	r17,r4,r17
 8136c08:	003f7106 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136c0c:	4088b03a 	or	r4,r8,r2
 8136c10:	20014526 	beq	r4,zero,8137128 <__adddf3+0x7d4>
 8136c14:	01000434 	movhi	r4,16
 8136c18:	42000234 	orhi	r8,r8,8
 8136c1c:	213fffc4 	addi	r4,r4,-1
 8136c20:	4110703a 	and	r8,r8,r4
 8136c24:	003f8206 	br	8136a30 <__alt_data_end+0xfc136a30>
 8136c28:	18ffffc4 	addi	r3,r3,-1
 8136c2c:	1800491e 	bne	r3,zero,8136d54 <__adddf3+0x400>
 8136c30:	898bc83a 	sub	r5,r17,r6
 8136c34:	8963803a 	cmpltu	r17,r17,r5
 8136c38:	4251c83a 	sub	r8,r8,r9
 8136c3c:	4451c83a 	sub	r8,r8,r17
 8136c40:	2823883a 	mov	r17,r5
 8136c44:	003f9f06 	br	8136ac4 <__alt_data_end+0xfc136ac4>
 8136c48:	4984b03a 	or	r2,r9,r6
 8136c4c:	103f6026 	beq	r2,zero,81369d0 <__alt_data_end+0xfc1369d0>
 8136c50:	213fffc4 	addi	r4,r4,-1
 8136c54:	2000931e 	bne	r4,zero,8136ea4 <__adddf3+0x550>
 8136c58:	898d883a 	add	r6,r17,r6
 8136c5c:	3463803a 	cmpltu	r17,r6,r17
 8136c60:	4251883a 	add	r8,r8,r9
 8136c64:	8a11883a 	add	r8,r17,r8
 8136c68:	3023883a 	mov	r17,r6
 8136c6c:	003fd806 	br	8136bd0 <__alt_data_end+0xfc136bd0>
 8136c70:	1800541e 	bne	r3,zero,8136dc4 <__adddf3+0x470>
 8136c74:	80800044 	addi	r2,r16,1
 8136c78:	1081ffcc 	andi	r2,r2,2047
 8136c7c:	00c00044 	movi	r3,1
 8136c80:	1880a00e 	bge	r3,r2,8136f04 <__adddf3+0x5b0>
 8136c84:	8989c83a 	sub	r4,r17,r6
 8136c88:	8905803a 	cmpltu	r2,r17,r4
 8136c8c:	4267c83a 	sub	r19,r8,r9
 8136c90:	98a7c83a 	sub	r19,r19,r2
 8136c94:	9880202c 	andhi	r2,r19,128
 8136c98:	10006326 	beq	r2,zero,8136e28 <__adddf3+0x4d4>
 8136c9c:	3463c83a 	sub	r17,r6,r17
 8136ca0:	4a07c83a 	sub	r3,r9,r8
 8136ca4:	344d803a 	cmpltu	r6,r6,r17
 8136ca8:	19a7c83a 	sub	r19,r3,r6
 8136cac:	3825883a 	mov	r18,r7
 8136cb0:	983f8a1e 	bne	r19,zero,8136adc <__alt_data_end+0xfc136adc>
 8136cb4:	8809883a 	mov	r4,r17
 8136cb8:	81391940 	call	8139194 <__clzsi2>
 8136cbc:	10800804 	addi	r2,r2,32
 8136cc0:	10fffe04 	addi	r3,r2,-8
 8136cc4:	010007c4 	movi	r4,31
 8136cc8:	20ff890e 	bge	r4,r3,8136af0 <__alt_data_end+0xfc136af0>
 8136ccc:	10bff604 	addi	r2,r2,-40
 8136cd0:	8884983a 	sll	r2,r17,r2
 8136cd4:	0023883a 	mov	r17,zero
 8136cd8:	1c3f8c0e 	bge	r3,r16,8136b0c <__alt_data_end+0xfc136b0c>
 8136cdc:	023fe034 	movhi	r8,65408
 8136ce0:	423fffc4 	addi	r8,r8,-1
 8136ce4:	80e1c83a 	sub	r16,r16,r3
 8136ce8:	1210703a 	and	r8,r2,r8
 8136cec:	003f3806 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136cf0:	9007883a 	mov	r3,r18
 8136cf4:	0011883a 	mov	r8,zero
 8136cf8:	0005883a 	mov	r2,zero
 8136cfc:	003f4c06 	br	8136a30 <__alt_data_end+0xfc136a30>
 8136d00:	498cb03a 	or	r6,r9,r6
 8136d04:	300cc03a 	cmpne	r6,r6,zero
 8136d08:	0007883a 	mov	r3,zero
 8136d0c:	003f6806 	br	8136ab0 <__alt_data_end+0xfc136ab0>
 8136d10:	20009c1e 	bne	r4,zero,8136f84 <__adddf3+0x630>
 8136d14:	80800044 	addi	r2,r16,1
 8136d18:	1141ffcc 	andi	r5,r2,2047
 8136d1c:	01000044 	movi	r4,1
 8136d20:	2140670e 	bge	r4,r5,8136ec0 <__adddf3+0x56c>
 8136d24:	0101ffc4 	movi	r4,2047
 8136d28:	11007f26 	beq	r2,r4,8136f28 <__adddf3+0x5d4>
 8136d2c:	898d883a 	add	r6,r17,r6
 8136d30:	4247883a 	add	r3,r8,r9
 8136d34:	3451803a 	cmpltu	r8,r6,r17
 8136d38:	40d1883a 	add	r8,r8,r3
 8136d3c:	402297fa 	slli	r17,r8,31
 8136d40:	300cd07a 	srli	r6,r6,1
 8136d44:	4010d07a 	srli	r8,r8,1
 8136d48:	1021883a 	mov	r16,r2
 8136d4c:	89a2b03a 	or	r17,r17,r6
 8136d50:	003f1f06 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136d54:	0081ffc4 	movi	r2,2047
 8136d58:	80bf481e 	bne	r16,r2,8136a7c <__alt_data_end+0xfc136a7c>
 8136d5c:	003f1c06 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136d60:	843ff844 	addi	r16,r16,-31
 8136d64:	01000804 	movi	r4,32
 8136d68:	1406d83a 	srl	r3,r2,r16
 8136d6c:	41005026 	beq	r8,r4,8136eb0 <__adddf3+0x55c>
 8136d70:	01001004 	movi	r4,64
 8136d74:	2211c83a 	sub	r8,r4,r8
 8136d78:	1204983a 	sll	r2,r2,r8
 8136d7c:	88a2b03a 	or	r17,r17,r2
 8136d80:	8822c03a 	cmpne	r17,r17,zero
 8136d84:	1c62b03a 	or	r17,r3,r17
 8136d88:	0011883a 	mov	r8,zero
 8136d8c:	0021883a 	mov	r16,zero
 8136d90:	003f7106 	br	8136b58 <__alt_data_end+0xfc136b58>
 8136d94:	193ff804 	addi	r4,r3,-32
 8136d98:	00800804 	movi	r2,32
 8136d9c:	4908d83a 	srl	r4,r9,r4
 8136da0:	18804526 	beq	r3,r2,8136eb8 <__adddf3+0x564>
 8136da4:	00801004 	movi	r2,64
 8136da8:	10c5c83a 	sub	r2,r2,r3
 8136dac:	4886983a 	sll	r3,r9,r2
 8136db0:	198cb03a 	or	r6,r3,r6
 8136db4:	300cc03a 	cmpne	r6,r6,zero
 8136db8:	218cb03a 	or	r6,r4,r6
 8136dbc:	0007883a 	mov	r3,zero
 8136dc0:	003f3b06 	br	8136ab0 <__alt_data_end+0xfc136ab0>
 8136dc4:	80002a26 	beq	r16,zero,8136e70 <__adddf3+0x51c>
 8136dc8:	0101ffc4 	movi	r4,2047
 8136dcc:	11006826 	beq	r2,r4,8136f70 <__adddf3+0x61c>
 8136dd0:	00c7c83a 	sub	r3,zero,r3
 8136dd4:	42002034 	orhi	r8,r8,128
 8136dd8:	01000e04 	movi	r4,56
 8136ddc:	20c07c16 	blt	r4,r3,8136fd0 <__adddf3+0x67c>
 8136de0:	010007c4 	movi	r4,31
 8136de4:	20c0da16 	blt	r4,r3,8137150 <__adddf3+0x7fc>
 8136de8:	01000804 	movi	r4,32
 8136dec:	20c9c83a 	sub	r4,r4,r3
 8136df0:	4114983a 	sll	r10,r8,r4
 8136df4:	88cad83a 	srl	r5,r17,r3
 8136df8:	8908983a 	sll	r4,r17,r4
 8136dfc:	40c6d83a 	srl	r3,r8,r3
 8136e00:	5162b03a 	or	r17,r10,r5
 8136e04:	2008c03a 	cmpne	r4,r4,zero
 8136e08:	8922b03a 	or	r17,r17,r4
 8136e0c:	3463c83a 	sub	r17,r6,r17
 8136e10:	48c7c83a 	sub	r3,r9,r3
 8136e14:	344d803a 	cmpltu	r6,r6,r17
 8136e18:	1991c83a 	sub	r8,r3,r6
 8136e1c:	1021883a 	mov	r16,r2
 8136e20:	3825883a 	mov	r18,r7
 8136e24:	003f2706 	br	8136ac4 <__alt_data_end+0xfc136ac4>
 8136e28:	24d0b03a 	or	r8,r4,r19
 8136e2c:	40001b1e 	bne	r8,zero,8136e9c <__adddf3+0x548>
 8136e30:	0005883a 	mov	r2,zero
 8136e34:	0007883a 	mov	r3,zero
 8136e38:	0021883a 	mov	r16,zero
 8136e3c:	003f4d06 	br	8136b74 <__alt_data_end+0xfc136b74>
 8136e40:	008007c4 	movi	r2,31
 8136e44:	11003c16 	blt	r2,r4,8136f38 <__adddf3+0x5e4>
 8136e48:	00800804 	movi	r2,32
 8136e4c:	1105c83a 	sub	r2,r2,r4
 8136e50:	488e983a 	sll	r7,r9,r2
 8136e54:	310ad83a 	srl	r5,r6,r4
 8136e58:	3084983a 	sll	r2,r6,r2
 8136e5c:	4912d83a 	srl	r9,r9,r4
 8136e60:	394ab03a 	or	r5,r7,r5
 8136e64:	1004c03a 	cmpne	r2,r2,zero
 8136e68:	288ab03a 	or	r5,r5,r2
 8136e6c:	003f5306 	br	8136bbc <__alt_data_end+0xfc136bbc>
 8136e70:	4448b03a 	or	r4,r8,r17
 8136e74:	20003e26 	beq	r4,zero,8136f70 <__adddf3+0x61c>
 8136e78:	00c6303a 	nor	r3,zero,r3
 8136e7c:	18003a1e 	bne	r3,zero,8136f68 <__adddf3+0x614>
 8136e80:	3463c83a 	sub	r17,r6,r17
 8136e84:	4a07c83a 	sub	r3,r9,r8
 8136e88:	344d803a 	cmpltu	r6,r6,r17
 8136e8c:	1991c83a 	sub	r8,r3,r6
 8136e90:	1021883a 	mov	r16,r2
 8136e94:	3825883a 	mov	r18,r7
 8136e98:	003f0a06 	br	8136ac4 <__alt_data_end+0xfc136ac4>
 8136e9c:	2023883a 	mov	r17,r4
 8136ea0:	003f0d06 	br	8136ad8 <__alt_data_end+0xfc136ad8>
 8136ea4:	0081ffc4 	movi	r2,2047
 8136ea8:	80bf3f1e 	bne	r16,r2,8136ba8 <__alt_data_end+0xfc136ba8>
 8136eac:	003ec806 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136eb0:	0005883a 	mov	r2,zero
 8136eb4:	003fb106 	br	8136d7c <__alt_data_end+0xfc136d7c>
 8136eb8:	0007883a 	mov	r3,zero
 8136ebc:	003fbc06 	br	8136db0 <__alt_data_end+0xfc136db0>
 8136ec0:	4444b03a 	or	r2,r8,r17
 8136ec4:	8000871e 	bne	r16,zero,81370e4 <__adddf3+0x790>
 8136ec8:	1000ba26 	beq	r2,zero,81371b4 <__adddf3+0x860>
 8136ecc:	4984b03a 	or	r2,r9,r6
 8136ed0:	103ebf26 	beq	r2,zero,81369d0 <__alt_data_end+0xfc1369d0>
 8136ed4:	8985883a 	add	r2,r17,r6
 8136ed8:	4247883a 	add	r3,r8,r9
 8136edc:	1451803a 	cmpltu	r8,r2,r17
 8136ee0:	40d1883a 	add	r8,r8,r3
 8136ee4:	40c0202c 	andhi	r3,r8,128
 8136ee8:	1023883a 	mov	r17,r2
 8136eec:	183f1a26 	beq	r3,zero,8136b58 <__alt_data_end+0xfc136b58>
 8136ef0:	00bfe034 	movhi	r2,65408
 8136ef4:	10bfffc4 	addi	r2,r2,-1
 8136ef8:	2021883a 	mov	r16,r4
 8136efc:	4090703a 	and	r8,r8,r2
 8136f00:	003eb306 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136f04:	4444b03a 	or	r2,r8,r17
 8136f08:	8000291e 	bne	r16,zero,8136fb0 <__adddf3+0x65c>
 8136f0c:	10004b1e 	bne	r2,zero,813703c <__adddf3+0x6e8>
 8136f10:	4990b03a 	or	r8,r9,r6
 8136f14:	40008b26 	beq	r8,zero,8137144 <__adddf3+0x7f0>
 8136f18:	4811883a 	mov	r8,r9
 8136f1c:	3023883a 	mov	r17,r6
 8136f20:	3825883a 	mov	r18,r7
 8136f24:	003eaa06 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136f28:	1021883a 	mov	r16,r2
 8136f2c:	0011883a 	mov	r8,zero
 8136f30:	0005883a 	mov	r2,zero
 8136f34:	003f0f06 	br	8136b74 <__alt_data_end+0xfc136b74>
 8136f38:	217ff804 	addi	r5,r4,-32
 8136f3c:	00800804 	movi	r2,32
 8136f40:	494ad83a 	srl	r5,r9,r5
 8136f44:	20807d26 	beq	r4,r2,813713c <__adddf3+0x7e8>
 8136f48:	00801004 	movi	r2,64
 8136f4c:	1109c83a 	sub	r4,r2,r4
 8136f50:	4912983a 	sll	r9,r9,r4
 8136f54:	498cb03a 	or	r6,r9,r6
 8136f58:	300cc03a 	cmpne	r6,r6,zero
 8136f5c:	298ab03a 	or	r5,r5,r6
 8136f60:	0013883a 	mov	r9,zero
 8136f64:	003f1506 	br	8136bbc <__alt_data_end+0xfc136bbc>
 8136f68:	0101ffc4 	movi	r4,2047
 8136f6c:	113f9a1e 	bne	r2,r4,8136dd8 <__alt_data_end+0xfc136dd8>
 8136f70:	4811883a 	mov	r8,r9
 8136f74:	3023883a 	mov	r17,r6
 8136f78:	1021883a 	mov	r16,r2
 8136f7c:	3825883a 	mov	r18,r7
 8136f80:	003e9306 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136f84:	8000161e 	bne	r16,zero,8136fe0 <__adddf3+0x68c>
 8136f88:	444ab03a 	or	r5,r8,r17
 8136f8c:	28005126 	beq	r5,zero,81370d4 <__adddf3+0x780>
 8136f90:	0108303a 	nor	r4,zero,r4
 8136f94:	20004d1e 	bne	r4,zero,81370cc <__adddf3+0x778>
 8136f98:	89a3883a 	add	r17,r17,r6
 8136f9c:	4253883a 	add	r9,r8,r9
 8136fa0:	898d803a 	cmpltu	r6,r17,r6
 8136fa4:	3251883a 	add	r8,r6,r9
 8136fa8:	1021883a 	mov	r16,r2
 8136fac:	003f0806 	br	8136bd0 <__alt_data_end+0xfc136bd0>
 8136fb0:	1000301e 	bne	r2,zero,8137074 <__adddf3+0x720>
 8136fb4:	4984b03a 	or	r2,r9,r6
 8136fb8:	10007126 	beq	r2,zero,8137180 <__adddf3+0x82c>
 8136fbc:	4811883a 	mov	r8,r9
 8136fc0:	3023883a 	mov	r17,r6
 8136fc4:	3825883a 	mov	r18,r7
 8136fc8:	0401ffc4 	movi	r16,2047
 8136fcc:	003e8006 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8136fd0:	4462b03a 	or	r17,r8,r17
 8136fd4:	8822c03a 	cmpne	r17,r17,zero
 8136fd8:	0007883a 	mov	r3,zero
 8136fdc:	003f8b06 	br	8136e0c <__alt_data_end+0xfc136e0c>
 8136fe0:	0141ffc4 	movi	r5,2047
 8136fe4:	11403b26 	beq	r2,r5,81370d4 <__adddf3+0x780>
 8136fe8:	0109c83a 	sub	r4,zero,r4
 8136fec:	42002034 	orhi	r8,r8,128
 8136ff0:	01400e04 	movi	r5,56
 8136ff4:	29006716 	blt	r5,r4,8137194 <__adddf3+0x840>
 8136ff8:	014007c4 	movi	r5,31
 8136ffc:	29007016 	blt	r5,r4,81371c0 <__adddf3+0x86c>
 8137000:	01400804 	movi	r5,32
 8137004:	290bc83a 	sub	r5,r5,r4
 8137008:	4154983a 	sll	r10,r8,r5
 813700c:	890ed83a 	srl	r7,r17,r4
 8137010:	894a983a 	sll	r5,r17,r5
 8137014:	4108d83a 	srl	r4,r8,r4
 8137018:	51e2b03a 	or	r17,r10,r7
 813701c:	280ac03a 	cmpne	r5,r5,zero
 8137020:	8962b03a 	or	r17,r17,r5
 8137024:	89a3883a 	add	r17,r17,r6
 8137028:	2253883a 	add	r9,r4,r9
 813702c:	898d803a 	cmpltu	r6,r17,r6
 8137030:	3251883a 	add	r8,r6,r9
 8137034:	1021883a 	mov	r16,r2
 8137038:	003ee506 	br	8136bd0 <__alt_data_end+0xfc136bd0>
 813703c:	4984b03a 	or	r2,r9,r6
 8137040:	103e6326 	beq	r2,zero,81369d0 <__alt_data_end+0xfc1369d0>
 8137044:	8987c83a 	sub	r3,r17,r6
 8137048:	88c9803a 	cmpltu	r4,r17,r3
 813704c:	4245c83a 	sub	r2,r8,r9
 8137050:	1105c83a 	sub	r2,r2,r4
 8137054:	1100202c 	andhi	r4,r2,128
 8137058:	203ebb26 	beq	r4,zero,8136b48 <__alt_data_end+0xfc136b48>
 813705c:	3463c83a 	sub	r17,r6,r17
 8137060:	4a07c83a 	sub	r3,r9,r8
 8137064:	344d803a 	cmpltu	r6,r6,r17
 8137068:	1991c83a 	sub	r8,r3,r6
 813706c:	3825883a 	mov	r18,r7
 8137070:	003e5706 	br	81369d0 <__alt_data_end+0xfc1369d0>
 8137074:	4984b03a 	or	r2,r9,r6
 8137078:	10002e26 	beq	r2,zero,8137134 <__adddf3+0x7e0>
 813707c:	4004d0fa 	srli	r2,r8,3
 8137080:	8822d0fa 	srli	r17,r17,3
 8137084:	4010977a 	slli	r8,r8,29
 8137088:	10c0022c 	andhi	r3,r2,8
 813708c:	4462b03a 	or	r17,r8,r17
 8137090:	18000826 	beq	r3,zero,81370b4 <__adddf3+0x760>
 8137094:	4808d0fa 	srli	r4,r9,3
 8137098:	20c0022c 	andhi	r3,r4,8
 813709c:	1800051e 	bne	r3,zero,81370b4 <__adddf3+0x760>
 81370a0:	300cd0fa 	srli	r6,r6,3
 81370a4:	4806977a 	slli	r3,r9,29
 81370a8:	2005883a 	mov	r2,r4
 81370ac:	3825883a 	mov	r18,r7
 81370b0:	19a2b03a 	or	r17,r3,r6
 81370b4:	8810d77a 	srli	r8,r17,29
 81370b8:	100490fa 	slli	r2,r2,3
 81370bc:	882290fa 	slli	r17,r17,3
 81370c0:	0401ffc4 	movi	r16,2047
 81370c4:	4090b03a 	or	r8,r8,r2
 81370c8:	003e4106 	br	81369d0 <__alt_data_end+0xfc1369d0>
 81370cc:	0141ffc4 	movi	r5,2047
 81370d0:	117fc71e 	bne	r2,r5,8136ff0 <__alt_data_end+0xfc136ff0>
 81370d4:	4811883a 	mov	r8,r9
 81370d8:	3023883a 	mov	r17,r6
 81370dc:	1021883a 	mov	r16,r2
 81370e0:	003e3b06 	br	81369d0 <__alt_data_end+0xfc1369d0>
 81370e4:	10002f26 	beq	r2,zero,81371a4 <__adddf3+0x850>
 81370e8:	4984b03a 	or	r2,r9,r6
 81370ec:	10001126 	beq	r2,zero,8137134 <__adddf3+0x7e0>
 81370f0:	4004d0fa 	srli	r2,r8,3
 81370f4:	8822d0fa 	srli	r17,r17,3
 81370f8:	4010977a 	slli	r8,r8,29
 81370fc:	10c0022c 	andhi	r3,r2,8
 8137100:	4462b03a 	or	r17,r8,r17
 8137104:	183feb26 	beq	r3,zero,81370b4 <__alt_data_end+0xfc1370b4>
 8137108:	4808d0fa 	srli	r4,r9,3
 813710c:	20c0022c 	andhi	r3,r4,8
 8137110:	183fe81e 	bne	r3,zero,81370b4 <__alt_data_end+0xfc1370b4>
 8137114:	300cd0fa 	srli	r6,r6,3
 8137118:	4806977a 	slli	r3,r9,29
 813711c:	2005883a 	mov	r2,r4
 8137120:	19a2b03a 	or	r17,r3,r6
 8137124:	003fe306 	br	81370b4 <__alt_data_end+0xfc1370b4>
 8137128:	0011883a 	mov	r8,zero
 813712c:	0005883a 	mov	r2,zero
 8137130:	003e3f06 	br	8136a30 <__alt_data_end+0xfc136a30>
 8137134:	0401ffc4 	movi	r16,2047
 8137138:	003e2506 	br	81369d0 <__alt_data_end+0xfc1369d0>
 813713c:	0013883a 	mov	r9,zero
 8137140:	003f8406 	br	8136f54 <__alt_data_end+0xfc136f54>
 8137144:	0005883a 	mov	r2,zero
 8137148:	0007883a 	mov	r3,zero
 813714c:	003e8906 	br	8136b74 <__alt_data_end+0xfc136b74>
 8137150:	197ff804 	addi	r5,r3,-32
 8137154:	01000804 	movi	r4,32
 8137158:	414ad83a 	srl	r5,r8,r5
 813715c:	19002426 	beq	r3,r4,81371f0 <__adddf3+0x89c>
 8137160:	01001004 	movi	r4,64
 8137164:	20c7c83a 	sub	r3,r4,r3
 8137168:	40c6983a 	sll	r3,r8,r3
 813716c:	1c46b03a 	or	r3,r3,r17
 8137170:	1806c03a 	cmpne	r3,r3,zero
 8137174:	28e2b03a 	or	r17,r5,r3
 8137178:	0007883a 	mov	r3,zero
 813717c:	003f2306 	br	8136e0c <__alt_data_end+0xfc136e0c>
 8137180:	0007883a 	mov	r3,zero
 8137184:	5811883a 	mov	r8,r11
 8137188:	00bfffc4 	movi	r2,-1
 813718c:	0401ffc4 	movi	r16,2047
 8137190:	003e7806 	br	8136b74 <__alt_data_end+0xfc136b74>
 8137194:	4462b03a 	or	r17,r8,r17
 8137198:	8822c03a 	cmpne	r17,r17,zero
 813719c:	0009883a 	mov	r4,zero
 81371a0:	003fa006 	br	8137024 <__alt_data_end+0xfc137024>
 81371a4:	4811883a 	mov	r8,r9
 81371a8:	3023883a 	mov	r17,r6
 81371ac:	0401ffc4 	movi	r16,2047
 81371b0:	003e0706 	br	81369d0 <__alt_data_end+0xfc1369d0>
 81371b4:	4811883a 	mov	r8,r9
 81371b8:	3023883a 	mov	r17,r6
 81371bc:	003e0406 	br	81369d0 <__alt_data_end+0xfc1369d0>
 81371c0:	21fff804 	addi	r7,r4,-32
 81371c4:	01400804 	movi	r5,32
 81371c8:	41ced83a 	srl	r7,r8,r7
 81371cc:	21400a26 	beq	r4,r5,81371f8 <__adddf3+0x8a4>
 81371d0:	01401004 	movi	r5,64
 81371d4:	2909c83a 	sub	r4,r5,r4
 81371d8:	4108983a 	sll	r4,r8,r4
 81371dc:	2448b03a 	or	r4,r4,r17
 81371e0:	2008c03a 	cmpne	r4,r4,zero
 81371e4:	3922b03a 	or	r17,r7,r4
 81371e8:	0009883a 	mov	r4,zero
 81371ec:	003f8d06 	br	8137024 <__alt_data_end+0xfc137024>
 81371f0:	0007883a 	mov	r3,zero
 81371f4:	003fdd06 	br	813716c <__alt_data_end+0xfc13716c>
 81371f8:	0009883a 	mov	r4,zero
 81371fc:	003ff706 	br	81371dc <__alt_data_end+0xfc1371dc>

08137200 <__divdf3>:
 8137200:	defff004 	addi	sp,sp,-64
 8137204:	dc800815 	stw	r18,32(sp)
 8137208:	2824d53a 	srli	r18,r5,20
 813720c:	dd800c15 	stw	r22,48(sp)
 8137210:	282cd7fa 	srli	r22,r5,31
 8137214:	dc000615 	stw	r16,24(sp)
 8137218:	04000434 	movhi	r16,16
 813721c:	843fffc4 	addi	r16,r16,-1
 8137220:	dfc00f15 	stw	ra,60(sp)
 8137224:	df000e15 	stw	fp,56(sp)
 8137228:	ddc00d15 	stw	r23,52(sp)
 813722c:	dd400b15 	stw	r21,44(sp)
 8137230:	dd000a15 	stw	r20,40(sp)
 8137234:	dcc00915 	stw	r19,36(sp)
 8137238:	dc400715 	stw	r17,28(sp)
 813723c:	9481ffcc 	andi	r18,r18,2047
 8137240:	2c20703a 	and	r16,r5,r16
 8137244:	b2003fcc 	andi	r8,r22,255
 8137248:	90006126 	beq	r18,zero,81373d0 <__divdf3+0x1d0>
 813724c:	0081ffc4 	movi	r2,2047
 8137250:	202b883a 	mov	r21,r4
 8137254:	90803726 	beq	r18,r2,8137334 <__divdf3+0x134>
 8137258:	80800434 	orhi	r2,r16,16
 813725c:	100490fa 	slli	r2,r2,3
 8137260:	2020d77a 	srli	r16,r4,29
 8137264:	202a90fa 	slli	r21,r4,3
 8137268:	94bf0044 	addi	r18,r18,-1023
 813726c:	80a0b03a 	or	r16,r16,r2
 8137270:	0013883a 	mov	r9,zero
 8137274:	000b883a 	mov	r5,zero
 8137278:	3806d53a 	srli	r3,r7,20
 813727c:	382ed7fa 	srli	r23,r7,31
 8137280:	04400434 	movhi	r17,16
 8137284:	8c7fffc4 	addi	r17,r17,-1
 8137288:	18c1ffcc 	andi	r3,r3,2047
 813728c:	3029883a 	mov	r20,r6
 8137290:	3c62703a 	and	r17,r7,r17
 8137294:	bf003fcc 	andi	fp,r23,255
 8137298:	18006e26 	beq	r3,zero,8137454 <__divdf3+0x254>
 813729c:	0081ffc4 	movi	r2,2047
 81372a0:	18806626 	beq	r3,r2,813743c <__divdf3+0x23c>
 81372a4:	88800434 	orhi	r2,r17,16
 81372a8:	100490fa 	slli	r2,r2,3
 81372ac:	3022d77a 	srli	r17,r6,29
 81372b0:	302890fa 	slli	r20,r6,3
 81372b4:	18ff0044 	addi	r3,r3,-1023
 81372b8:	88a2b03a 	or	r17,r17,r2
 81372bc:	000f883a 	mov	r7,zero
 81372c0:	b5e6f03a 	xor	r19,r22,r23
 81372c4:	3a4cb03a 	or	r6,r7,r9
 81372c8:	008003c4 	movi	r2,15
 81372cc:	9809883a 	mov	r4,r19
 81372d0:	90c7c83a 	sub	r3,r18,r3
 81372d4:	9cc03fcc 	andi	r19,r19,255
 81372d8:	11809636 	bltu	r2,r6,8137534 <__divdf3+0x334>
 81372dc:	300c90ba 	slli	r6,r6,2
 81372e0:	008204f4 	movhi	r2,2067
 81372e4:	109cbd04 	addi	r2,r2,29428
 81372e8:	308d883a 	add	r6,r6,r2
 81372ec:	30800017 	ldw	r2,0(r6)
 81372f0:	1000683a 	jmp	r2
 81372f4:	08137534 	orhi	zero,at,19924
 81372f8:	0813736c 	andhi	zero,at,19917
 81372fc:	08137524 	muli	zero,at,19924
 8137300:	08137360 	cmpeqi	zero,at,19917
 8137304:	08137524 	muli	zero,at,19924
 8137308:	081374f8 	rdprs	zero,at,19923
 813730c:	08137524 	muli	zero,at,19924
 8137310:	08137360 	cmpeqi	zero,at,19917
 8137314:	0813736c 	andhi	zero,at,19917
 8137318:	0813736c 	andhi	zero,at,19917
 813731c:	081374f8 	rdprs	zero,at,19923
 8137320:	08137360 	cmpeqi	zero,at,19917
 8137324:	08137350 	cmplti	zero,at,19917
 8137328:	08137350 	cmplti	zero,at,19917
 813732c:	08137350 	cmplti	zero,at,19917
 8137330:	081378bc 	xorhi	zero,at,19938
 8137334:	2404b03a 	or	r2,r4,r16
 8137338:	10006c1e 	bne	r2,zero,81374ec <__divdf3+0x2ec>
 813733c:	02400204 	movi	r9,8
 8137340:	0021883a 	mov	r16,zero
 8137344:	002b883a 	mov	r21,zero
 8137348:	01400084 	movi	r5,2
 813734c:	003fca06 	br	8137278 <__alt_data_end+0xfc137278>
 8137350:	8023883a 	mov	r17,r16
 8137354:	a829883a 	mov	r20,r21
 8137358:	4039883a 	mov	fp,r8
 813735c:	280f883a 	mov	r7,r5
 8137360:	00800084 	movi	r2,2
 8137364:	3881601e 	bne	r7,r2,81378e8 <__divdf3+0x6e8>
 8137368:	e027883a 	mov	r19,fp
 813736c:	9900004c 	andi	r4,r19,1
 8137370:	0081ffc4 	movi	r2,2047
 8137374:	0021883a 	mov	r16,zero
 8137378:	002b883a 	mov	r21,zero
 813737c:	1004953a 	slli	r2,r2,20
 8137380:	20c03fcc 	andi	r3,r4,255
 8137384:	01400434 	movhi	r5,16
 8137388:	297fffc4 	addi	r5,r5,-1
 813738c:	180697fa 	slli	r3,r3,31
 8137390:	8160703a 	and	r16,r16,r5
 8137394:	80a0b03a 	or	r16,r16,r2
 8137398:	80c6b03a 	or	r3,r16,r3
 813739c:	a805883a 	mov	r2,r21
 81373a0:	dfc00f17 	ldw	ra,60(sp)
 81373a4:	df000e17 	ldw	fp,56(sp)
 81373a8:	ddc00d17 	ldw	r23,52(sp)
 81373ac:	dd800c17 	ldw	r22,48(sp)
 81373b0:	dd400b17 	ldw	r21,44(sp)
 81373b4:	dd000a17 	ldw	r20,40(sp)
 81373b8:	dcc00917 	ldw	r19,36(sp)
 81373bc:	dc800817 	ldw	r18,32(sp)
 81373c0:	dc400717 	ldw	r17,28(sp)
 81373c4:	dc000617 	ldw	r16,24(sp)
 81373c8:	dec01004 	addi	sp,sp,64
 81373cc:	f800283a 	ret
 81373d0:	2404b03a 	or	r2,r4,r16
 81373d4:	2023883a 	mov	r17,r4
 81373d8:	10003f26 	beq	r2,zero,81374d8 <__divdf3+0x2d8>
 81373dc:	80015e26 	beq	r16,zero,8137958 <__divdf3+0x758>
 81373e0:	8009883a 	mov	r4,r16
 81373e4:	d9800215 	stw	r6,8(sp)
 81373e8:	d9c00515 	stw	r7,20(sp)
 81373ec:	da000415 	stw	r8,16(sp)
 81373f0:	81391940 	call	8139194 <__clzsi2>
 81373f4:	d9800217 	ldw	r6,8(sp)
 81373f8:	d9c00517 	ldw	r7,20(sp)
 81373fc:	da000417 	ldw	r8,16(sp)
 8137400:	113ffd44 	addi	r4,r2,-11
 8137404:	00c00704 	movi	r3,28
 8137408:	19014f16 	blt	r3,r4,8137948 <__divdf3+0x748>
 813740c:	00c00744 	movi	r3,29
 8137410:	157ffe04 	addi	r21,r2,-8
 8137414:	1907c83a 	sub	r3,r3,r4
 8137418:	8560983a 	sll	r16,r16,r21
 813741c:	88c6d83a 	srl	r3,r17,r3
 8137420:	8d6a983a 	sll	r21,r17,r21
 8137424:	1c20b03a 	or	r16,r3,r16
 8137428:	1080fcc4 	addi	r2,r2,1011
 813742c:	00a5c83a 	sub	r18,zero,r2
 8137430:	0013883a 	mov	r9,zero
 8137434:	000b883a 	mov	r5,zero
 8137438:	003f8f06 	br	8137278 <__alt_data_end+0xfc137278>
 813743c:	3444b03a 	or	r2,r6,r17
 8137440:	1000231e 	bne	r2,zero,81374d0 <__divdf3+0x2d0>
 8137444:	0023883a 	mov	r17,zero
 8137448:	0029883a 	mov	r20,zero
 813744c:	01c00084 	movi	r7,2
 8137450:	003f9b06 	br	81372c0 <__alt_data_end+0xfc1372c0>
 8137454:	3444b03a 	or	r2,r6,r17
 8137458:	10001926 	beq	r2,zero,81374c0 <__divdf3+0x2c0>
 813745c:	88014b26 	beq	r17,zero,813798c <__divdf3+0x78c>
 8137460:	8809883a 	mov	r4,r17
 8137464:	d9400115 	stw	r5,4(sp)
 8137468:	d9800215 	stw	r6,8(sp)
 813746c:	da000415 	stw	r8,16(sp)
 8137470:	da400315 	stw	r9,12(sp)
 8137474:	81391940 	call	8139194 <__clzsi2>
 8137478:	d9400117 	ldw	r5,4(sp)
 813747c:	d9800217 	ldw	r6,8(sp)
 8137480:	da000417 	ldw	r8,16(sp)
 8137484:	da400317 	ldw	r9,12(sp)
 8137488:	113ffd44 	addi	r4,r2,-11
 813748c:	00c00704 	movi	r3,28
 8137490:	19013a16 	blt	r3,r4,813797c <__divdf3+0x77c>
 8137494:	00c00744 	movi	r3,29
 8137498:	153ffe04 	addi	r20,r2,-8
 813749c:	1907c83a 	sub	r3,r3,r4
 81374a0:	8d22983a 	sll	r17,r17,r20
 81374a4:	30c6d83a 	srl	r3,r6,r3
 81374a8:	3528983a 	sll	r20,r6,r20
 81374ac:	1c62b03a 	or	r17,r3,r17
 81374b0:	1080fcc4 	addi	r2,r2,1011
 81374b4:	0087c83a 	sub	r3,zero,r2
 81374b8:	000f883a 	mov	r7,zero
 81374bc:	003f8006 	br	81372c0 <__alt_data_end+0xfc1372c0>
 81374c0:	0023883a 	mov	r17,zero
 81374c4:	0029883a 	mov	r20,zero
 81374c8:	01c00044 	movi	r7,1
 81374cc:	003f7c06 	br	81372c0 <__alt_data_end+0xfc1372c0>
 81374d0:	01c000c4 	movi	r7,3
 81374d4:	003f7a06 	br	81372c0 <__alt_data_end+0xfc1372c0>
 81374d8:	02400104 	movi	r9,4
 81374dc:	0021883a 	mov	r16,zero
 81374e0:	002b883a 	mov	r21,zero
 81374e4:	01400044 	movi	r5,1
 81374e8:	003f6306 	br	8137278 <__alt_data_end+0xfc137278>
 81374ec:	02400304 	movi	r9,12
 81374f0:	014000c4 	movi	r5,3
 81374f4:	003f6006 	br	8137278 <__alt_data_end+0xfc137278>
 81374f8:	04000434 	movhi	r16,16
 81374fc:	0009883a 	mov	r4,zero
 8137500:	843fffc4 	addi	r16,r16,-1
 8137504:	057fffc4 	movi	r21,-1
 8137508:	0081ffc4 	movi	r2,2047
 813750c:	003f9b06 	br	813737c <__alt_data_end+0xfc13737c>
 8137510:	00c00044 	movi	r3,1
 8137514:	1887c83a 	sub	r3,r3,r2
 8137518:	01000e04 	movi	r4,56
 813751c:	20c1530e 	bge	r4,r3,8137a6c <__divdf3+0x86c>
 8137520:	9900004c 	andi	r4,r19,1
 8137524:	0005883a 	mov	r2,zero
 8137528:	0021883a 	mov	r16,zero
 813752c:	002b883a 	mov	r21,zero
 8137530:	003f9206 	br	813737c <__alt_data_end+0xfc13737c>
 8137534:	8c012e36 	bltu	r17,r16,81379f0 <__divdf3+0x7f0>
 8137538:	84412c26 	beq	r16,r17,81379ec <__divdf3+0x7ec>
 813753c:	a82f883a 	mov	r23,r21
 8137540:	18ffffc4 	addi	r3,r3,-1
 8137544:	002b883a 	mov	r21,zero
 8137548:	a004d63a 	srli	r2,r20,24
 813754c:	8822923a 	slli	r17,r17,8
 8137550:	a028923a 	slli	r20,r20,8
 8137554:	8009883a 	mov	r4,r16
 8137558:	88acb03a 	or	r22,r17,r2
 813755c:	dd000015 	stw	r20,0(sp)
 8137560:	b028d43a 	srli	r20,r22,16
 8137564:	d8c00215 	stw	r3,8(sp)
 8137568:	b4bfffcc 	andi	r18,r22,65535
 813756c:	a00b883a 	mov	r5,r20
 8137570:	81368980 	call	8136898 <__udivsi3>
 8137574:	100b883a 	mov	r5,r2
 8137578:	9009883a 	mov	r4,r18
 813757c:	1023883a 	mov	r17,r2
 8137580:	812c2b80 	call	812c2b8 <__mulsi3>
 8137584:	8009883a 	mov	r4,r16
 8137588:	a00b883a 	mov	r5,r20
 813758c:	1039883a 	mov	fp,r2
 8137590:	81368fc0 	call	81368fc <__umodsi3>
 8137594:	1004943a 	slli	r2,r2,16
 8137598:	b808d43a 	srli	r4,r23,16
 813759c:	d8c00217 	ldw	r3,8(sp)
 81375a0:	2084b03a 	or	r2,r4,r2
 81375a4:	1700062e 	bgeu	r2,fp,81375c0 <__divdf3+0x3c0>
 81375a8:	1585883a 	add	r2,r2,r22
 81375ac:	893fffc4 	addi	r4,r17,-1
 81375b0:	15811d36 	bltu	r2,r22,8137a28 <__divdf3+0x828>
 81375b4:	17011c2e 	bgeu	r2,fp,8137a28 <__divdf3+0x828>
 81375b8:	8c7fff84 	addi	r17,r17,-2
 81375bc:	1585883a 	add	r2,r2,r22
 81375c0:	1739c83a 	sub	fp,r2,fp
 81375c4:	a00b883a 	mov	r5,r20
 81375c8:	e009883a 	mov	r4,fp
 81375cc:	d8c00215 	stw	r3,8(sp)
 81375d0:	81368980 	call	8136898 <__udivsi3>
 81375d4:	100b883a 	mov	r5,r2
 81375d8:	9009883a 	mov	r4,r18
 81375dc:	1021883a 	mov	r16,r2
 81375e0:	812c2b80 	call	812c2b8 <__mulsi3>
 81375e4:	a00b883a 	mov	r5,r20
 81375e8:	e009883a 	mov	r4,fp
 81375ec:	d8800415 	stw	r2,16(sp)
 81375f0:	81368fc0 	call	81368fc <__umodsi3>
 81375f4:	1004943a 	slli	r2,r2,16
 81375f8:	da000417 	ldw	r8,16(sp)
 81375fc:	bdffffcc 	andi	r23,r23,65535
 8137600:	b884b03a 	or	r2,r23,r2
 8137604:	d8c00217 	ldw	r3,8(sp)
 8137608:	1200062e 	bgeu	r2,r8,8137624 <__divdf3+0x424>
 813760c:	1585883a 	add	r2,r2,r22
 8137610:	813fffc4 	addi	r4,r16,-1
 8137614:	15810236 	bltu	r2,r22,8137a20 <__divdf3+0x820>
 8137618:	1201012e 	bgeu	r2,r8,8137a20 <__divdf3+0x820>
 813761c:	843fff84 	addi	r16,r16,-2
 8137620:	1585883a 	add	r2,r2,r22
 8137624:	8822943a 	slli	r17,r17,16
 8137628:	d9800017 	ldw	r6,0(sp)
 813762c:	1211c83a 	sub	r8,r2,r8
 8137630:	8c22b03a 	or	r17,r17,r16
 8137634:	373fffcc 	andi	fp,r6,65535
 8137638:	8abfffcc 	andi	r10,r17,65535
 813763c:	8820d43a 	srli	r16,r17,16
 8137640:	5009883a 	mov	r4,r10
 8137644:	e00b883a 	mov	r5,fp
 8137648:	302ed43a 	srli	r23,r6,16
 813764c:	d8c00215 	stw	r3,8(sp)
 8137650:	da000415 	stw	r8,16(sp)
 8137654:	da800115 	stw	r10,4(sp)
 8137658:	812c2b80 	call	812c2b8 <__mulsi3>
 813765c:	800b883a 	mov	r5,r16
 8137660:	e009883a 	mov	r4,fp
 8137664:	d8800515 	stw	r2,20(sp)
 8137668:	812c2b80 	call	812c2b8 <__mulsi3>
 813766c:	8009883a 	mov	r4,r16
 8137670:	b80b883a 	mov	r5,r23
 8137674:	d8800315 	stw	r2,12(sp)
 8137678:	812c2b80 	call	812c2b8 <__mulsi3>
 813767c:	da800117 	ldw	r10,4(sp)
 8137680:	b80b883a 	mov	r5,r23
 8137684:	1021883a 	mov	r16,r2
 8137688:	5009883a 	mov	r4,r10
 813768c:	812c2b80 	call	812c2b8 <__mulsi3>
 8137690:	d9c00517 	ldw	r7,20(sp)
 8137694:	da400317 	ldw	r9,12(sp)
 8137698:	d8c00217 	ldw	r3,8(sp)
 813769c:	3808d43a 	srli	r4,r7,16
 81376a0:	1245883a 	add	r2,r2,r9
 81376a4:	da000417 	ldw	r8,16(sp)
 81376a8:	2085883a 	add	r2,r4,r2
 81376ac:	1240022e 	bgeu	r2,r9,81376b8 <__divdf3+0x4b8>
 81376b0:	01000074 	movhi	r4,1
 81376b4:	8121883a 	add	r16,r16,r4
 81376b8:	1008d43a 	srli	r4,r2,16
 81376bc:	1004943a 	slli	r2,r2,16
 81376c0:	39ffffcc 	andi	r7,r7,65535
 81376c4:	2409883a 	add	r4,r4,r16
 81376c8:	11c5883a 	add	r2,r2,r7
 81376cc:	4100bb36 	bltu	r8,r4,81379bc <__divdf3+0x7bc>
 81376d0:	4100d726 	beq	r8,r4,8137a30 <__divdf3+0x830>
 81376d4:	4109c83a 	sub	r4,r8,r4
 81376d8:	a8a1c83a 	sub	r16,r21,r2
 81376dc:	ac2b803a 	cmpltu	r21,r21,r16
 81376e0:	256bc83a 	sub	r21,r4,r21
 81376e4:	b540d926 	beq	r22,r21,8137a4c <__divdf3+0x84c>
 81376e8:	a00b883a 	mov	r5,r20
 81376ec:	a809883a 	mov	r4,r21
 81376f0:	d8c00215 	stw	r3,8(sp)
 81376f4:	81368980 	call	8136898 <__udivsi3>
 81376f8:	100b883a 	mov	r5,r2
 81376fc:	9009883a 	mov	r4,r18
 8137700:	d8800515 	stw	r2,20(sp)
 8137704:	812c2b80 	call	812c2b8 <__mulsi3>
 8137708:	a809883a 	mov	r4,r21
 813770c:	a00b883a 	mov	r5,r20
 8137710:	d8800415 	stw	r2,16(sp)
 8137714:	81368fc0 	call	81368fc <__umodsi3>
 8137718:	1004943a 	slli	r2,r2,16
 813771c:	8008d43a 	srli	r4,r16,16
 8137720:	da000417 	ldw	r8,16(sp)
 8137724:	d8c00217 	ldw	r3,8(sp)
 8137728:	2084b03a 	or	r2,r4,r2
 813772c:	d9c00517 	ldw	r7,20(sp)
 8137730:	1200062e 	bgeu	r2,r8,813774c <__divdf3+0x54c>
 8137734:	1585883a 	add	r2,r2,r22
 8137738:	393fffc4 	addi	r4,r7,-1
 813773c:	1580c536 	bltu	r2,r22,8137a54 <__divdf3+0x854>
 8137740:	1200c42e 	bgeu	r2,r8,8137a54 <__divdf3+0x854>
 8137744:	39ffff84 	addi	r7,r7,-2
 8137748:	1585883a 	add	r2,r2,r22
 813774c:	122bc83a 	sub	r21,r2,r8
 8137750:	a00b883a 	mov	r5,r20
 8137754:	a809883a 	mov	r4,r21
 8137758:	d8c00215 	stw	r3,8(sp)
 813775c:	d9c00515 	stw	r7,20(sp)
 8137760:	81368980 	call	8136898 <__udivsi3>
 8137764:	9009883a 	mov	r4,r18
 8137768:	100b883a 	mov	r5,r2
 813776c:	d8800415 	stw	r2,16(sp)
 8137770:	812c2b80 	call	812c2b8 <__mulsi3>
 8137774:	a809883a 	mov	r4,r21
 8137778:	a00b883a 	mov	r5,r20
 813777c:	1025883a 	mov	r18,r2
 8137780:	81368fc0 	call	81368fc <__umodsi3>
 8137784:	1004943a 	slli	r2,r2,16
 8137788:	813fffcc 	andi	r4,r16,65535
 813778c:	d8c00217 	ldw	r3,8(sp)
 8137790:	20a0b03a 	or	r16,r4,r2
 8137794:	d9c00517 	ldw	r7,20(sp)
 8137798:	da000417 	ldw	r8,16(sp)
 813779c:	8480062e 	bgeu	r16,r18,81377b8 <__divdf3+0x5b8>
 81377a0:	85a1883a 	add	r16,r16,r22
 81377a4:	40bfffc4 	addi	r2,r8,-1
 81377a8:	8580ac36 	bltu	r16,r22,8137a5c <__divdf3+0x85c>
 81377ac:	8480ab2e 	bgeu	r16,r18,8137a5c <__divdf3+0x85c>
 81377b0:	423fff84 	addi	r8,r8,-2
 81377b4:	85a1883a 	add	r16,r16,r22
 81377b8:	3804943a 	slli	r2,r7,16
 81377bc:	84a1c83a 	sub	r16,r16,r18
 81377c0:	e009883a 	mov	r4,fp
 81377c4:	1228b03a 	or	r20,r2,r8
 81377c8:	a1ffffcc 	andi	r7,r20,65535
 81377cc:	a024d43a 	srli	r18,r20,16
 81377d0:	380b883a 	mov	r5,r7
 81377d4:	d8c00215 	stw	r3,8(sp)
 81377d8:	d9c00515 	stw	r7,20(sp)
 81377dc:	812c2b80 	call	812c2b8 <__mulsi3>
 81377e0:	900b883a 	mov	r5,r18
 81377e4:	e009883a 	mov	r4,fp
 81377e8:	102b883a 	mov	r21,r2
 81377ec:	812c2b80 	call	812c2b8 <__mulsi3>
 81377f0:	900b883a 	mov	r5,r18
 81377f4:	b809883a 	mov	r4,r23
 81377f8:	1039883a 	mov	fp,r2
 81377fc:	812c2b80 	call	812c2b8 <__mulsi3>
 8137800:	d9c00517 	ldw	r7,20(sp)
 8137804:	b80b883a 	mov	r5,r23
 8137808:	1025883a 	mov	r18,r2
 813780c:	3809883a 	mov	r4,r7
 8137810:	812c2b80 	call	812c2b8 <__mulsi3>
 8137814:	a808d43a 	srli	r4,r21,16
 8137818:	1705883a 	add	r2,r2,fp
 813781c:	d8c00217 	ldw	r3,8(sp)
 8137820:	2085883a 	add	r2,r4,r2
 8137824:	1700022e 	bgeu	r2,fp,8137830 <__divdf3+0x630>
 8137828:	01000074 	movhi	r4,1
 813782c:	9125883a 	add	r18,r18,r4
 8137830:	1008d43a 	srli	r4,r2,16
 8137834:	1004943a 	slli	r2,r2,16
 8137838:	ad7fffcc 	andi	r21,r21,65535
 813783c:	2489883a 	add	r4,r4,r18
 8137840:	1545883a 	add	r2,r2,r21
 8137844:	81003836 	bltu	r16,r4,8137928 <__divdf3+0x728>
 8137848:	81003626 	beq	r16,r4,8137924 <__divdf3+0x724>
 813784c:	a5000054 	ori	r20,r20,1
 8137850:	1880ffc4 	addi	r2,r3,1023
 8137854:	00bf2e0e 	bge	zero,r2,8137510 <__alt_data_end+0xfc137510>
 8137858:	a10001cc 	andi	r4,r20,7
 813785c:	20000726 	beq	r4,zero,813787c <__divdf3+0x67c>
 8137860:	a10003cc 	andi	r4,r20,15
 8137864:	01400104 	movi	r5,4
 8137868:	21400426 	beq	r4,r5,813787c <__divdf3+0x67c>
 813786c:	a149883a 	add	r4,r20,r5
 8137870:	2529803a 	cmpltu	r20,r4,r20
 8137874:	8d23883a 	add	r17,r17,r20
 8137878:	2029883a 	mov	r20,r4
 813787c:	8900402c 	andhi	r4,r17,256
 8137880:	20000426 	beq	r4,zero,8137894 <__divdf3+0x694>
 8137884:	18810004 	addi	r2,r3,1024
 8137888:	00ffc034 	movhi	r3,65280
 813788c:	18ffffc4 	addi	r3,r3,-1
 8137890:	88e2703a 	and	r17,r17,r3
 8137894:	00c1ff84 	movi	r3,2046
 8137898:	18beb416 	blt	r3,r2,813736c <__alt_data_end+0xfc13736c>
 813789c:	a028d0fa 	srli	r20,r20,3
 81378a0:	882a977a 	slli	r21,r17,29
 81378a4:	8820927a 	slli	r16,r17,9
 81378a8:	1081ffcc 	andi	r2,r2,2047
 81378ac:	ad2ab03a 	or	r21,r21,r20
 81378b0:	8020d33a 	srli	r16,r16,12
 81378b4:	9900004c 	andi	r4,r19,1
 81378b8:	003eb006 	br	813737c <__alt_data_end+0xfc13737c>
 81378bc:	8080022c 	andhi	r2,r16,8
 81378c0:	10001226 	beq	r2,zero,813790c <__divdf3+0x70c>
 81378c4:	8880022c 	andhi	r2,r17,8
 81378c8:	1000101e 	bne	r2,zero,813790c <__divdf3+0x70c>
 81378cc:	00800434 	movhi	r2,16
 81378d0:	8c000234 	orhi	r16,r17,8
 81378d4:	10bfffc4 	addi	r2,r2,-1
 81378d8:	b809883a 	mov	r4,r23
 81378dc:	80a0703a 	and	r16,r16,r2
 81378e0:	a02b883a 	mov	r21,r20
 81378e4:	003f0806 	br	8137508 <__alt_data_end+0xfc137508>
 81378e8:	008000c4 	movi	r2,3
 81378ec:	3880b126 	beq	r7,r2,8137bb4 <__divdf3+0x9b4>
 81378f0:	00800044 	movi	r2,1
 81378f4:	38805b1e 	bne	r7,r2,8137a64 <__divdf3+0x864>
 81378f8:	e009883a 	mov	r4,fp
 81378fc:	0005883a 	mov	r2,zero
 8137900:	0021883a 	mov	r16,zero
 8137904:	002b883a 	mov	r21,zero
 8137908:	003e9c06 	br	813737c <__alt_data_end+0xfc13737c>
 813790c:	00800434 	movhi	r2,16
 8137910:	84000234 	orhi	r16,r16,8
 8137914:	10bfffc4 	addi	r2,r2,-1
 8137918:	b009883a 	mov	r4,r22
 813791c:	80a0703a 	and	r16,r16,r2
 8137920:	003ef906 	br	8137508 <__alt_data_end+0xfc137508>
 8137924:	103fca26 	beq	r2,zero,8137850 <__alt_data_end+0xfc137850>
 8137928:	b421883a 	add	r16,r22,r16
 813792c:	a17fffc4 	addi	r5,r20,-1
 8137930:	8580422e 	bgeu	r16,r22,8137a3c <__divdf3+0x83c>
 8137934:	2829883a 	mov	r20,r5
 8137938:	813fc41e 	bne	r16,r4,813784c <__alt_data_end+0xfc13784c>
 813793c:	d9800017 	ldw	r6,0(sp)
 8137940:	30bfc21e 	bne	r6,r2,813784c <__alt_data_end+0xfc13784c>
 8137944:	003fc206 	br	8137850 <__alt_data_end+0xfc137850>
 8137948:	143ff604 	addi	r16,r2,-40
 813794c:	8c20983a 	sll	r16,r17,r16
 8137950:	002b883a 	mov	r21,zero
 8137954:	003eb406 	br	8137428 <__alt_data_end+0xfc137428>
 8137958:	d9800215 	stw	r6,8(sp)
 813795c:	d9c00515 	stw	r7,20(sp)
 8137960:	da000415 	stw	r8,16(sp)
 8137964:	81391940 	call	8139194 <__clzsi2>
 8137968:	10800804 	addi	r2,r2,32
 813796c:	da000417 	ldw	r8,16(sp)
 8137970:	d9c00517 	ldw	r7,20(sp)
 8137974:	d9800217 	ldw	r6,8(sp)
 8137978:	003ea106 	br	8137400 <__alt_data_end+0xfc137400>
 813797c:	147ff604 	addi	r17,r2,-40
 8137980:	3462983a 	sll	r17,r6,r17
 8137984:	0029883a 	mov	r20,zero
 8137988:	003ec906 	br	81374b0 <__alt_data_end+0xfc1374b0>
 813798c:	3009883a 	mov	r4,r6
 8137990:	d9400115 	stw	r5,4(sp)
 8137994:	d9800215 	stw	r6,8(sp)
 8137998:	da000415 	stw	r8,16(sp)
 813799c:	da400315 	stw	r9,12(sp)
 81379a0:	81391940 	call	8139194 <__clzsi2>
 81379a4:	10800804 	addi	r2,r2,32
 81379a8:	da400317 	ldw	r9,12(sp)
 81379ac:	da000417 	ldw	r8,16(sp)
 81379b0:	d9800217 	ldw	r6,8(sp)
 81379b4:	d9400117 	ldw	r5,4(sp)
 81379b8:	003eb306 	br	8137488 <__alt_data_end+0xfc137488>
 81379bc:	d9800017 	ldw	r6,0(sp)
 81379c0:	a9ab883a 	add	r21,r21,r6
 81379c4:	a98b803a 	cmpltu	r5,r21,r6
 81379c8:	2d8b883a 	add	r5,r5,r22
 81379cc:	2a11883a 	add	r8,r5,r8
 81379d0:	897fffc4 	addi	r5,r17,-1
 81379d4:	b2000c2e 	bgeu	r22,r8,8137a08 <__divdf3+0x808>
 81379d8:	41003f36 	bltu	r8,r4,8137ad8 <__divdf3+0x8d8>
 81379dc:	22006c26 	beq	r4,r8,8137b90 <__divdf3+0x990>
 81379e0:	4109c83a 	sub	r4,r8,r4
 81379e4:	2823883a 	mov	r17,r5
 81379e8:	003f3b06 	br	81376d8 <__alt_data_end+0xfc1376d8>
 81379ec:	ad3ed336 	bltu	r21,r20,813753c <__alt_data_end+0xfc13753c>
 81379f0:	a804d07a 	srli	r2,r21,1
 81379f4:	802e97fa 	slli	r23,r16,31
 81379f8:	a82a97fa 	slli	r21,r21,31
 81379fc:	8020d07a 	srli	r16,r16,1
 8137a00:	b8aeb03a 	or	r23,r23,r2
 8137a04:	003ed006 	br	8137548 <__alt_data_end+0xfc137548>
 8137a08:	b23ff51e 	bne	r22,r8,81379e0 <__alt_data_end+0xfc1379e0>
 8137a0c:	d9800017 	ldw	r6,0(sp)
 8137a10:	a9bff12e 	bgeu	r21,r6,81379d8 <__alt_data_end+0xfc1379d8>
 8137a14:	b109c83a 	sub	r4,r22,r4
 8137a18:	2823883a 	mov	r17,r5
 8137a1c:	003f2e06 	br	81376d8 <__alt_data_end+0xfc1376d8>
 8137a20:	2021883a 	mov	r16,r4
 8137a24:	003eff06 	br	8137624 <__alt_data_end+0xfc137624>
 8137a28:	2023883a 	mov	r17,r4
 8137a2c:	003ee406 	br	81375c0 <__alt_data_end+0xfc1375c0>
 8137a30:	a8bfe236 	bltu	r21,r2,81379bc <__alt_data_end+0xfc1379bc>
 8137a34:	0009883a 	mov	r4,zero
 8137a38:	003f2706 	br	81376d8 <__alt_data_end+0xfc1376d8>
 8137a3c:	81002d36 	bltu	r16,r4,8137af4 <__divdf3+0x8f4>
 8137a40:	24005626 	beq	r4,r16,8137b9c <__divdf3+0x99c>
 8137a44:	2829883a 	mov	r20,r5
 8137a48:	003f8006 	br	813784c <__alt_data_end+0xfc13784c>
 8137a4c:	053fffc4 	movi	r20,-1
 8137a50:	003f7f06 	br	8137850 <__alt_data_end+0xfc137850>
 8137a54:	200f883a 	mov	r7,r4
 8137a58:	003f3c06 	br	813774c <__alt_data_end+0xfc13774c>
 8137a5c:	1011883a 	mov	r8,r2
 8137a60:	003f5506 	br	81377b8 <__alt_data_end+0xfc1377b8>
 8137a64:	e027883a 	mov	r19,fp
 8137a68:	003f7906 	br	8137850 <__alt_data_end+0xfc137850>
 8137a6c:	010007c4 	movi	r4,31
 8137a70:	20c02816 	blt	r4,r3,8137b14 <__divdf3+0x914>
 8137a74:	00800804 	movi	r2,32
 8137a78:	10c5c83a 	sub	r2,r2,r3
 8137a7c:	888a983a 	sll	r5,r17,r2
 8137a80:	a0c8d83a 	srl	r4,r20,r3
 8137a84:	a084983a 	sll	r2,r20,r2
 8137a88:	88e2d83a 	srl	r17,r17,r3
 8137a8c:	2906b03a 	or	r3,r5,r4
 8137a90:	1004c03a 	cmpne	r2,r2,zero
 8137a94:	1886b03a 	or	r3,r3,r2
 8137a98:	188001cc 	andi	r2,r3,7
 8137a9c:	10000726 	beq	r2,zero,8137abc <__divdf3+0x8bc>
 8137aa0:	188003cc 	andi	r2,r3,15
 8137aa4:	01000104 	movi	r4,4
 8137aa8:	11000426 	beq	r2,r4,8137abc <__divdf3+0x8bc>
 8137aac:	1805883a 	mov	r2,r3
 8137ab0:	10c00104 	addi	r3,r2,4
 8137ab4:	1885803a 	cmpltu	r2,r3,r2
 8137ab8:	88a3883a 	add	r17,r17,r2
 8137abc:	8880202c 	andhi	r2,r17,128
 8137ac0:	10002926 	beq	r2,zero,8137b68 <__divdf3+0x968>
 8137ac4:	9900004c 	andi	r4,r19,1
 8137ac8:	00800044 	movi	r2,1
 8137acc:	0021883a 	mov	r16,zero
 8137ad0:	002b883a 	mov	r21,zero
 8137ad4:	003e2906 	br	813737c <__alt_data_end+0xfc13737c>
 8137ad8:	d9800017 	ldw	r6,0(sp)
 8137adc:	8c7fff84 	addi	r17,r17,-2
 8137ae0:	a9ab883a 	add	r21,r21,r6
 8137ae4:	a98b803a 	cmpltu	r5,r21,r6
 8137ae8:	2d8b883a 	add	r5,r5,r22
 8137aec:	2a11883a 	add	r8,r5,r8
 8137af0:	003ef806 	br	81376d4 <__alt_data_end+0xfc1376d4>
 8137af4:	d9800017 	ldw	r6,0(sp)
 8137af8:	318f883a 	add	r7,r6,r6
 8137afc:	398b803a 	cmpltu	r5,r7,r6
 8137b00:	2d8d883a 	add	r6,r5,r22
 8137b04:	81a1883a 	add	r16,r16,r6
 8137b08:	a17fff84 	addi	r5,r20,-2
 8137b0c:	d9c00015 	stw	r7,0(sp)
 8137b10:	003f8806 	br	8137934 <__alt_data_end+0xfc137934>
 8137b14:	013ff844 	movi	r4,-31
 8137b18:	2085c83a 	sub	r2,r4,r2
 8137b1c:	8888d83a 	srl	r4,r17,r2
 8137b20:	00800804 	movi	r2,32
 8137b24:	18802126 	beq	r3,r2,8137bac <__divdf3+0x9ac>
 8137b28:	04001004 	movi	r16,64
 8137b2c:	80c7c83a 	sub	r3,r16,r3
 8137b30:	88e0983a 	sll	r16,r17,r3
 8137b34:	8504b03a 	or	r2,r16,r20
 8137b38:	1004c03a 	cmpne	r2,r2,zero
 8137b3c:	2084b03a 	or	r2,r4,r2
 8137b40:	144001cc 	andi	r17,r2,7
 8137b44:	88000d1e 	bne	r17,zero,8137b7c <__divdf3+0x97c>
 8137b48:	0021883a 	mov	r16,zero
 8137b4c:	102ad0fa 	srli	r21,r2,3
 8137b50:	9900004c 	andi	r4,r19,1
 8137b54:	0005883a 	mov	r2,zero
 8137b58:	ac6ab03a 	or	r21,r21,r17
 8137b5c:	003e0706 	br	813737c <__alt_data_end+0xfc13737c>
 8137b60:	1007883a 	mov	r3,r2
 8137b64:	0023883a 	mov	r17,zero
 8137b68:	8820927a 	slli	r16,r17,9
 8137b6c:	1805883a 	mov	r2,r3
 8137b70:	8822977a 	slli	r17,r17,29
 8137b74:	8020d33a 	srli	r16,r16,12
 8137b78:	003ff406 	br	8137b4c <__alt_data_end+0xfc137b4c>
 8137b7c:	10c003cc 	andi	r3,r2,15
 8137b80:	01000104 	movi	r4,4
 8137b84:	193ff626 	beq	r3,r4,8137b60 <__alt_data_end+0xfc137b60>
 8137b88:	0023883a 	mov	r17,zero
 8137b8c:	003fc806 	br	8137ab0 <__alt_data_end+0xfc137ab0>
 8137b90:	a8bfd136 	bltu	r21,r2,8137ad8 <__alt_data_end+0xfc137ad8>
 8137b94:	2823883a 	mov	r17,r5
 8137b98:	003fa606 	br	8137a34 <__alt_data_end+0xfc137a34>
 8137b9c:	d9800017 	ldw	r6,0(sp)
 8137ba0:	30bfd436 	bltu	r6,r2,8137af4 <__alt_data_end+0xfc137af4>
 8137ba4:	2829883a 	mov	r20,r5
 8137ba8:	003f6406 	br	813793c <__alt_data_end+0xfc13793c>
 8137bac:	0021883a 	mov	r16,zero
 8137bb0:	003fe006 	br	8137b34 <__alt_data_end+0xfc137b34>
 8137bb4:	00800434 	movhi	r2,16
 8137bb8:	8c000234 	orhi	r16,r17,8
 8137bbc:	10bfffc4 	addi	r2,r2,-1
 8137bc0:	e009883a 	mov	r4,fp
 8137bc4:	80a0703a 	and	r16,r16,r2
 8137bc8:	a02b883a 	mov	r21,r20
 8137bcc:	003e4e06 	br	8137508 <__alt_data_end+0xfc137508>

08137bd0 <__eqdf2>:
 8137bd0:	2804d53a 	srli	r2,r5,20
 8137bd4:	3806d53a 	srli	r3,r7,20
 8137bd8:	02000434 	movhi	r8,16
 8137bdc:	423fffc4 	addi	r8,r8,-1
 8137be0:	1081ffcc 	andi	r2,r2,2047
 8137be4:	0281ffc4 	movi	r10,2047
 8137be8:	2a12703a 	and	r9,r5,r8
 8137bec:	18c1ffcc 	andi	r3,r3,2047
 8137bf0:	3a10703a 	and	r8,r7,r8
 8137bf4:	280ad7fa 	srli	r5,r5,31
 8137bf8:	380ed7fa 	srli	r7,r7,31
 8137bfc:	12801026 	beq	r2,r10,8137c40 <__eqdf2+0x70>
 8137c00:	0281ffc4 	movi	r10,2047
 8137c04:	1a800a26 	beq	r3,r10,8137c30 <__eqdf2+0x60>
 8137c08:	10c00226 	beq	r2,r3,8137c14 <__eqdf2+0x44>
 8137c0c:	00800044 	movi	r2,1
 8137c10:	f800283a 	ret
 8137c14:	4a3ffd1e 	bne	r9,r8,8137c0c <__alt_data_end+0xfc137c0c>
 8137c18:	21bffc1e 	bne	r4,r6,8137c0c <__alt_data_end+0xfc137c0c>
 8137c1c:	29c00c26 	beq	r5,r7,8137c50 <__eqdf2+0x80>
 8137c20:	103ffa1e 	bne	r2,zero,8137c0c <__alt_data_end+0xfc137c0c>
 8137c24:	2244b03a 	or	r2,r4,r9
 8137c28:	1004c03a 	cmpne	r2,r2,zero
 8137c2c:	f800283a 	ret
 8137c30:	3214b03a 	or	r10,r6,r8
 8137c34:	503ff426 	beq	r10,zero,8137c08 <__alt_data_end+0xfc137c08>
 8137c38:	00800044 	movi	r2,1
 8137c3c:	f800283a 	ret
 8137c40:	2254b03a 	or	r10,r4,r9
 8137c44:	503fee26 	beq	r10,zero,8137c00 <__alt_data_end+0xfc137c00>
 8137c48:	00800044 	movi	r2,1
 8137c4c:	f800283a 	ret
 8137c50:	0005883a 	mov	r2,zero
 8137c54:	f800283a 	ret

08137c58 <__gedf2>:
 8137c58:	2804d53a 	srli	r2,r5,20
 8137c5c:	3806d53a 	srli	r3,r7,20
 8137c60:	02000434 	movhi	r8,16
 8137c64:	423fffc4 	addi	r8,r8,-1
 8137c68:	1081ffcc 	andi	r2,r2,2047
 8137c6c:	0241ffc4 	movi	r9,2047
 8137c70:	2a14703a 	and	r10,r5,r8
 8137c74:	18c1ffcc 	andi	r3,r3,2047
 8137c78:	3a10703a 	and	r8,r7,r8
 8137c7c:	280ad7fa 	srli	r5,r5,31
 8137c80:	380ed7fa 	srli	r7,r7,31
 8137c84:	12401d26 	beq	r2,r9,8137cfc <__gedf2+0xa4>
 8137c88:	0241ffc4 	movi	r9,2047
 8137c8c:	1a401226 	beq	r3,r9,8137cd8 <__gedf2+0x80>
 8137c90:	1000081e 	bne	r2,zero,8137cb4 <__gedf2+0x5c>
 8137c94:	2296b03a 	or	r11,r4,r10
 8137c98:	5813003a 	cmpeq	r9,r11,zero
 8137c9c:	1800091e 	bne	r3,zero,8137cc4 <__gedf2+0x6c>
 8137ca0:	3218b03a 	or	r12,r6,r8
 8137ca4:	6000071e 	bne	r12,zero,8137cc4 <__gedf2+0x6c>
 8137ca8:	0005883a 	mov	r2,zero
 8137cac:	5800101e 	bne	r11,zero,8137cf0 <__gedf2+0x98>
 8137cb0:	f800283a 	ret
 8137cb4:	18000c1e 	bne	r3,zero,8137ce8 <__gedf2+0x90>
 8137cb8:	3212b03a 	or	r9,r6,r8
 8137cbc:	48000c26 	beq	r9,zero,8137cf0 <__gedf2+0x98>
 8137cc0:	0013883a 	mov	r9,zero
 8137cc4:	39c03fcc 	andi	r7,r7,255
 8137cc8:	48000826 	beq	r9,zero,8137cec <__gedf2+0x94>
 8137ccc:	38000926 	beq	r7,zero,8137cf4 <__gedf2+0x9c>
 8137cd0:	00800044 	movi	r2,1
 8137cd4:	f800283a 	ret
 8137cd8:	3212b03a 	or	r9,r6,r8
 8137cdc:	483fec26 	beq	r9,zero,8137c90 <__alt_data_end+0xfc137c90>
 8137ce0:	00bfff84 	movi	r2,-2
 8137ce4:	f800283a 	ret
 8137ce8:	39c03fcc 	andi	r7,r7,255
 8137cec:	29c00626 	beq	r5,r7,8137d08 <__gedf2+0xb0>
 8137cf0:	283ff726 	beq	r5,zero,8137cd0 <__alt_data_end+0xfc137cd0>
 8137cf4:	00bfffc4 	movi	r2,-1
 8137cf8:	f800283a 	ret
 8137cfc:	2292b03a 	or	r9,r4,r10
 8137d00:	483fe126 	beq	r9,zero,8137c88 <__alt_data_end+0xfc137c88>
 8137d04:	003ff606 	br	8137ce0 <__alt_data_end+0xfc137ce0>
 8137d08:	18bff916 	blt	r3,r2,8137cf0 <__alt_data_end+0xfc137cf0>
 8137d0c:	10c00316 	blt	r2,r3,8137d1c <__gedf2+0xc4>
 8137d10:	42bff736 	bltu	r8,r10,8137cf0 <__alt_data_end+0xfc137cf0>
 8137d14:	52000326 	beq	r10,r8,8137d24 <__gedf2+0xcc>
 8137d18:	5200042e 	bgeu	r10,r8,8137d2c <__gedf2+0xd4>
 8137d1c:	283fec1e 	bne	r5,zero,8137cd0 <__alt_data_end+0xfc137cd0>
 8137d20:	003ff406 	br	8137cf4 <__alt_data_end+0xfc137cf4>
 8137d24:	313ff236 	bltu	r6,r4,8137cf0 <__alt_data_end+0xfc137cf0>
 8137d28:	21bffc36 	bltu	r4,r6,8137d1c <__alt_data_end+0xfc137d1c>
 8137d2c:	0005883a 	mov	r2,zero
 8137d30:	f800283a 	ret

08137d34 <__ledf2>:
 8137d34:	2804d53a 	srli	r2,r5,20
 8137d38:	3810d53a 	srli	r8,r7,20
 8137d3c:	00c00434 	movhi	r3,16
 8137d40:	18ffffc4 	addi	r3,r3,-1
 8137d44:	1081ffcc 	andi	r2,r2,2047
 8137d48:	0241ffc4 	movi	r9,2047
 8137d4c:	28d4703a 	and	r10,r5,r3
 8137d50:	4201ffcc 	andi	r8,r8,2047
 8137d54:	38c6703a 	and	r3,r7,r3
 8137d58:	280ad7fa 	srli	r5,r5,31
 8137d5c:	380ed7fa 	srli	r7,r7,31
 8137d60:	12401f26 	beq	r2,r9,8137de0 <__ledf2+0xac>
 8137d64:	0241ffc4 	movi	r9,2047
 8137d68:	42401426 	beq	r8,r9,8137dbc <__ledf2+0x88>
 8137d6c:	1000091e 	bne	r2,zero,8137d94 <__ledf2+0x60>
 8137d70:	2296b03a 	or	r11,r4,r10
 8137d74:	5813003a 	cmpeq	r9,r11,zero
 8137d78:	29403fcc 	andi	r5,r5,255
 8137d7c:	40000a1e 	bne	r8,zero,8137da8 <__ledf2+0x74>
 8137d80:	30d8b03a 	or	r12,r6,r3
 8137d84:	6000081e 	bne	r12,zero,8137da8 <__ledf2+0x74>
 8137d88:	0005883a 	mov	r2,zero
 8137d8c:	5800111e 	bne	r11,zero,8137dd4 <__ledf2+0xa0>
 8137d90:	f800283a 	ret
 8137d94:	29403fcc 	andi	r5,r5,255
 8137d98:	40000c1e 	bne	r8,zero,8137dcc <__ledf2+0x98>
 8137d9c:	30d2b03a 	or	r9,r6,r3
 8137da0:	48000c26 	beq	r9,zero,8137dd4 <__ledf2+0xa0>
 8137da4:	0013883a 	mov	r9,zero
 8137da8:	39c03fcc 	andi	r7,r7,255
 8137dac:	48000826 	beq	r9,zero,8137dd0 <__ledf2+0x9c>
 8137db0:	38001126 	beq	r7,zero,8137df8 <__ledf2+0xc4>
 8137db4:	00800044 	movi	r2,1
 8137db8:	f800283a 	ret
 8137dbc:	30d2b03a 	or	r9,r6,r3
 8137dc0:	483fea26 	beq	r9,zero,8137d6c <__alt_data_end+0xfc137d6c>
 8137dc4:	00800084 	movi	r2,2
 8137dc8:	f800283a 	ret
 8137dcc:	39c03fcc 	andi	r7,r7,255
 8137dd0:	39400726 	beq	r7,r5,8137df0 <__ledf2+0xbc>
 8137dd4:	2800081e 	bne	r5,zero,8137df8 <__ledf2+0xc4>
 8137dd8:	00800044 	movi	r2,1
 8137ddc:	f800283a 	ret
 8137de0:	2292b03a 	or	r9,r4,r10
 8137de4:	483fdf26 	beq	r9,zero,8137d64 <__alt_data_end+0xfc137d64>
 8137de8:	00800084 	movi	r2,2
 8137dec:	f800283a 	ret
 8137df0:	4080030e 	bge	r8,r2,8137e00 <__ledf2+0xcc>
 8137df4:	383fef26 	beq	r7,zero,8137db4 <__alt_data_end+0xfc137db4>
 8137df8:	00bfffc4 	movi	r2,-1
 8137dfc:	f800283a 	ret
 8137e00:	123feb16 	blt	r2,r8,8137db0 <__alt_data_end+0xfc137db0>
 8137e04:	1abff336 	bltu	r3,r10,8137dd4 <__alt_data_end+0xfc137dd4>
 8137e08:	50c00326 	beq	r10,r3,8137e18 <__ledf2+0xe4>
 8137e0c:	50c0042e 	bgeu	r10,r3,8137e20 <__ledf2+0xec>
 8137e10:	283fe81e 	bne	r5,zero,8137db4 <__alt_data_end+0xfc137db4>
 8137e14:	003ff806 	br	8137df8 <__alt_data_end+0xfc137df8>
 8137e18:	313fee36 	bltu	r6,r4,8137dd4 <__alt_data_end+0xfc137dd4>
 8137e1c:	21bffc36 	bltu	r4,r6,8137e10 <__alt_data_end+0xfc137e10>
 8137e20:	0005883a 	mov	r2,zero
 8137e24:	f800283a 	ret

08137e28 <__muldf3>:
 8137e28:	deffee04 	addi	sp,sp,-72
 8137e2c:	dd000c15 	stw	r20,48(sp)
 8137e30:	2828d53a 	srli	r20,r5,20
 8137e34:	ddc00f15 	stw	r23,60(sp)
 8137e38:	282ed7fa 	srli	r23,r5,31
 8137e3c:	dc000815 	stw	r16,32(sp)
 8137e40:	04000434 	movhi	r16,16
 8137e44:	dcc00b15 	stw	r19,44(sp)
 8137e48:	843fffc4 	addi	r16,r16,-1
 8137e4c:	dfc01115 	stw	ra,68(sp)
 8137e50:	df001015 	stw	fp,64(sp)
 8137e54:	dd800e15 	stw	r22,56(sp)
 8137e58:	dd400d15 	stw	r21,52(sp)
 8137e5c:	dc800a15 	stw	r18,40(sp)
 8137e60:	dc400915 	stw	r17,36(sp)
 8137e64:	a501ffcc 	andi	r20,r20,2047
 8137e68:	2c20703a 	and	r16,r5,r16
 8137e6c:	b827883a 	mov	r19,r23
 8137e70:	ba403fcc 	andi	r9,r23,255
 8137e74:	a0006026 	beq	r20,zero,8137ff8 <__muldf3+0x1d0>
 8137e78:	0081ffc4 	movi	r2,2047
 8137e7c:	202d883a 	mov	r22,r4
 8137e80:	a0803626 	beq	r20,r2,8137f5c <__muldf3+0x134>
 8137e84:	84000434 	orhi	r16,r16,16
 8137e88:	200ad77a 	srli	r5,r4,29
 8137e8c:	800490fa 	slli	r2,r16,3
 8137e90:	202c90fa 	slli	r22,r4,3
 8137e94:	a53f0044 	addi	r20,r20,-1023
 8137e98:	28a0b03a 	or	r16,r5,r2
 8137e9c:	002b883a 	mov	r21,zero
 8137ea0:	000b883a 	mov	r5,zero
 8137ea4:	3804d53a 	srli	r2,r7,20
 8137ea8:	3838d7fa 	srli	fp,r7,31
 8137eac:	04400434 	movhi	r17,16
 8137eb0:	8c7fffc4 	addi	r17,r17,-1
 8137eb4:	1081ffcc 	andi	r2,r2,2047
 8137eb8:	3025883a 	mov	r18,r6
 8137ebc:	3c62703a 	and	r17,r7,r17
 8137ec0:	e2803fcc 	andi	r10,fp,255
 8137ec4:	10006d26 	beq	r2,zero,813807c <__muldf3+0x254>
 8137ec8:	00c1ffc4 	movi	r3,2047
 8137ecc:	10c06526 	beq	r2,r3,8138064 <__muldf3+0x23c>
 8137ed0:	8c400434 	orhi	r17,r17,16
 8137ed4:	300ed77a 	srli	r7,r6,29
 8137ed8:	880690fa 	slli	r3,r17,3
 8137edc:	302490fa 	slli	r18,r6,3
 8137ee0:	10bf0044 	addi	r2,r2,-1023
 8137ee4:	38e2b03a 	or	r17,r7,r3
 8137ee8:	000f883a 	mov	r7,zero
 8137eec:	a087883a 	add	r3,r20,r2
 8137ef0:	010003c4 	movi	r4,15
 8137ef4:	3d44b03a 	or	r2,r7,r21
 8137ef8:	e5ccf03a 	xor	r6,fp,r23
 8137efc:	1a000044 	addi	r8,r3,1
 8137f00:	20809b36 	bltu	r4,r2,8138170 <__muldf3+0x348>
 8137f04:	100490ba 	slli	r2,r2,2
 8137f08:	010204f4 	movhi	r4,2067
 8137f0c:	211fc704 	addi	r4,r4,32540
 8137f10:	1105883a 	add	r2,r2,r4
 8137f14:	10800017 	ldw	r2,0(r2)
 8137f18:	1000683a 	jmp	r2
 8137f1c:	08138170 	cmpltui	zero,at,19973
 8137f20:	08137f7c 	xorhi	zero,at,19965
 8137f24:	08137f7c 	xorhi	zero,at,19965
 8137f28:	08137f78 	rdprs	zero,at,19965
 8137f2c:	0813814c 	andi	zero,at,19973
 8137f30:	0813814c 	andi	zero,at,19973
 8137f34:	08138134 	orhi	zero,at,19972
 8137f38:	08137f78 	rdprs	zero,at,19965
 8137f3c:	0813814c 	andi	zero,at,19973
 8137f40:	08138134 	orhi	zero,at,19972
 8137f44:	0813814c 	andi	zero,at,19973
 8137f48:	08137f78 	rdprs	zero,at,19965
 8137f4c:	0813815c 	xori	zero,at,19973
 8137f50:	0813815c 	xori	zero,at,19973
 8137f54:	0813815c 	xori	zero,at,19973
 8137f58:	081384bc 	xorhi	zero,at,19986
 8137f5c:	2404b03a 	or	r2,r4,r16
 8137f60:	1000711e 	bne	r2,zero,8138128 <__muldf3+0x300>
 8137f64:	05400204 	movi	r21,8
 8137f68:	0021883a 	mov	r16,zero
 8137f6c:	002d883a 	mov	r22,zero
 8137f70:	01400084 	movi	r5,2
 8137f74:	003fcb06 	br	8137ea4 <__alt_data_end+0xfc137ea4>
 8137f78:	500d883a 	mov	r6,r10
 8137f7c:	00800084 	movi	r2,2
 8137f80:	38805926 	beq	r7,r2,81380e8 <__muldf3+0x2c0>
 8137f84:	008000c4 	movi	r2,3
 8137f88:	3881bb26 	beq	r7,r2,8138678 <__muldf3+0x850>
 8137f8c:	00800044 	movi	r2,1
 8137f90:	3881961e 	bne	r7,r2,81385ec <__muldf3+0x7c4>
 8137f94:	3027883a 	mov	r19,r6
 8137f98:	0005883a 	mov	r2,zero
 8137f9c:	0021883a 	mov	r16,zero
 8137fa0:	002d883a 	mov	r22,zero
 8137fa4:	1004953a 	slli	r2,r2,20
 8137fa8:	98c03fcc 	andi	r3,r19,255
 8137fac:	04400434 	movhi	r17,16
 8137fb0:	8c7fffc4 	addi	r17,r17,-1
 8137fb4:	180697fa 	slli	r3,r3,31
 8137fb8:	8460703a 	and	r16,r16,r17
 8137fbc:	80a0b03a 	or	r16,r16,r2
 8137fc0:	80c6b03a 	or	r3,r16,r3
 8137fc4:	b005883a 	mov	r2,r22
 8137fc8:	dfc01117 	ldw	ra,68(sp)
 8137fcc:	df001017 	ldw	fp,64(sp)
 8137fd0:	ddc00f17 	ldw	r23,60(sp)
 8137fd4:	dd800e17 	ldw	r22,56(sp)
 8137fd8:	dd400d17 	ldw	r21,52(sp)
 8137fdc:	dd000c17 	ldw	r20,48(sp)
 8137fe0:	dcc00b17 	ldw	r19,44(sp)
 8137fe4:	dc800a17 	ldw	r18,40(sp)
 8137fe8:	dc400917 	ldw	r17,36(sp)
 8137fec:	dc000817 	ldw	r16,32(sp)
 8137ff0:	dec01204 	addi	sp,sp,72
 8137ff4:	f800283a 	ret
 8137ff8:	2404b03a 	or	r2,r4,r16
 8137ffc:	202b883a 	mov	r21,r4
 8138000:	10004426 	beq	r2,zero,8138114 <__muldf3+0x2ec>
 8138004:	80015126 	beq	r16,zero,813854c <__muldf3+0x724>
 8138008:	8009883a 	mov	r4,r16
 813800c:	d9800715 	stw	r6,28(sp)
 8138010:	d9c00215 	stw	r7,8(sp)
 8138014:	da400415 	stw	r9,16(sp)
 8138018:	81391940 	call	8139194 <__clzsi2>
 813801c:	d9800717 	ldw	r6,28(sp)
 8138020:	d9c00217 	ldw	r7,8(sp)
 8138024:	da400417 	ldw	r9,16(sp)
 8138028:	113ffd44 	addi	r4,r2,-11
 813802c:	00c00704 	movi	r3,28
 8138030:	19014216 	blt	r3,r4,813853c <__muldf3+0x714>
 8138034:	00c00744 	movi	r3,29
 8138038:	15bffe04 	addi	r22,r2,-8
 813803c:	1907c83a 	sub	r3,r3,r4
 8138040:	85a0983a 	sll	r16,r16,r22
 8138044:	a8c6d83a 	srl	r3,r21,r3
 8138048:	adac983a 	sll	r22,r21,r22
 813804c:	1c20b03a 	or	r16,r3,r16
 8138050:	1080fcc4 	addi	r2,r2,1011
 8138054:	00a9c83a 	sub	r20,zero,r2
 8138058:	002b883a 	mov	r21,zero
 813805c:	000b883a 	mov	r5,zero
 8138060:	003f9006 	br	8137ea4 <__alt_data_end+0xfc137ea4>
 8138064:	3446b03a 	or	r3,r6,r17
 8138068:	1800281e 	bne	r3,zero,813810c <__muldf3+0x2e4>
 813806c:	0023883a 	mov	r17,zero
 8138070:	0025883a 	mov	r18,zero
 8138074:	01c00084 	movi	r7,2
 8138078:	003f9c06 	br	8137eec <__alt_data_end+0xfc137eec>
 813807c:	3446b03a 	or	r3,r6,r17
 8138080:	18001e26 	beq	r3,zero,81380fc <__muldf3+0x2d4>
 8138084:	88012126 	beq	r17,zero,813850c <__muldf3+0x6e4>
 8138088:	8809883a 	mov	r4,r17
 813808c:	d9400215 	stw	r5,8(sp)
 8138090:	d9800715 	stw	r6,28(sp)
 8138094:	da400415 	stw	r9,16(sp)
 8138098:	da800315 	stw	r10,12(sp)
 813809c:	81391940 	call	8139194 <__clzsi2>
 81380a0:	d9400217 	ldw	r5,8(sp)
 81380a4:	d9800717 	ldw	r6,28(sp)
 81380a8:	da400417 	ldw	r9,16(sp)
 81380ac:	da800317 	ldw	r10,12(sp)
 81380b0:	113ffd44 	addi	r4,r2,-11
 81380b4:	00c00704 	movi	r3,28
 81380b8:	19011016 	blt	r3,r4,81384fc <__muldf3+0x6d4>
 81380bc:	00c00744 	movi	r3,29
 81380c0:	14bffe04 	addi	r18,r2,-8
 81380c4:	1907c83a 	sub	r3,r3,r4
 81380c8:	8ca2983a 	sll	r17,r17,r18
 81380cc:	30c6d83a 	srl	r3,r6,r3
 81380d0:	34a4983a 	sll	r18,r6,r18
 81380d4:	1c62b03a 	or	r17,r3,r17
 81380d8:	1080fcc4 	addi	r2,r2,1011
 81380dc:	0085c83a 	sub	r2,zero,r2
 81380e0:	000f883a 	mov	r7,zero
 81380e4:	003f8106 	br	8137eec <__alt_data_end+0xfc137eec>
 81380e8:	3027883a 	mov	r19,r6
 81380ec:	0081ffc4 	movi	r2,2047
 81380f0:	0021883a 	mov	r16,zero
 81380f4:	002d883a 	mov	r22,zero
 81380f8:	003faa06 	br	8137fa4 <__alt_data_end+0xfc137fa4>
 81380fc:	0023883a 	mov	r17,zero
 8138100:	0025883a 	mov	r18,zero
 8138104:	01c00044 	movi	r7,1
 8138108:	003f7806 	br	8137eec <__alt_data_end+0xfc137eec>
 813810c:	01c000c4 	movi	r7,3
 8138110:	003f7606 	br	8137eec <__alt_data_end+0xfc137eec>
 8138114:	05400104 	movi	r21,4
 8138118:	0021883a 	mov	r16,zero
 813811c:	002d883a 	mov	r22,zero
 8138120:	01400044 	movi	r5,1
 8138124:	003f5f06 	br	8137ea4 <__alt_data_end+0xfc137ea4>
 8138128:	05400304 	movi	r21,12
 813812c:	014000c4 	movi	r5,3
 8138130:	003f5c06 	br	8137ea4 <__alt_data_end+0xfc137ea4>
 8138134:	04000434 	movhi	r16,16
 8138138:	0027883a 	mov	r19,zero
 813813c:	843fffc4 	addi	r16,r16,-1
 8138140:	05bfffc4 	movi	r22,-1
 8138144:	0081ffc4 	movi	r2,2047
 8138148:	003f9606 	br	8137fa4 <__alt_data_end+0xfc137fa4>
 813814c:	8023883a 	mov	r17,r16
 8138150:	b025883a 	mov	r18,r22
 8138154:	280f883a 	mov	r7,r5
 8138158:	003f8806 	br	8137f7c <__alt_data_end+0xfc137f7c>
 813815c:	8023883a 	mov	r17,r16
 8138160:	b025883a 	mov	r18,r22
 8138164:	480d883a 	mov	r6,r9
 8138168:	280f883a 	mov	r7,r5
 813816c:	003f8306 	br	8137f7c <__alt_data_end+0xfc137f7c>
 8138170:	b026d43a 	srli	r19,r22,16
 8138174:	902ed43a 	srli	r23,r18,16
 8138178:	b5bfffcc 	andi	r22,r22,65535
 813817c:	94bfffcc 	andi	r18,r18,65535
 8138180:	b00b883a 	mov	r5,r22
 8138184:	9009883a 	mov	r4,r18
 8138188:	d8c00515 	stw	r3,20(sp)
 813818c:	d9800715 	stw	r6,28(sp)
 8138190:	da000615 	stw	r8,24(sp)
 8138194:	812c2b80 	call	812c2b8 <__mulsi3>
 8138198:	980b883a 	mov	r5,r19
 813819c:	9009883a 	mov	r4,r18
 81381a0:	1029883a 	mov	r20,r2
 81381a4:	812c2b80 	call	812c2b8 <__mulsi3>
 81381a8:	b80b883a 	mov	r5,r23
 81381ac:	9809883a 	mov	r4,r19
 81381b0:	102b883a 	mov	r21,r2
 81381b4:	812c2b80 	call	812c2b8 <__mulsi3>
 81381b8:	b809883a 	mov	r4,r23
 81381bc:	b00b883a 	mov	r5,r22
 81381c0:	1039883a 	mov	fp,r2
 81381c4:	812c2b80 	call	812c2b8 <__mulsi3>
 81381c8:	a008d43a 	srli	r4,r20,16
 81381cc:	1545883a 	add	r2,r2,r21
 81381d0:	d8c00517 	ldw	r3,20(sp)
 81381d4:	2085883a 	add	r2,r4,r2
 81381d8:	d9800717 	ldw	r6,28(sp)
 81381dc:	da000617 	ldw	r8,24(sp)
 81381e0:	1540022e 	bgeu	r2,r21,81381ec <__muldf3+0x3c4>
 81381e4:	01000074 	movhi	r4,1
 81381e8:	e139883a 	add	fp,fp,r4
 81381ec:	100e943a 	slli	r7,r2,16
 81381f0:	1004d43a 	srli	r2,r2,16
 81381f4:	882ad43a 	srli	r21,r17,16
 81381f8:	a53fffcc 	andi	r20,r20,65535
 81381fc:	8c7fffcc 	andi	r17,r17,65535
 8138200:	3d29883a 	add	r20,r7,r20
 8138204:	b00b883a 	mov	r5,r22
 8138208:	8809883a 	mov	r4,r17
 813820c:	d8c00515 	stw	r3,20(sp)
 8138210:	d9800715 	stw	r6,28(sp)
 8138214:	da000615 	stw	r8,24(sp)
 8138218:	dd000115 	stw	r20,4(sp)
 813821c:	d8800015 	stw	r2,0(sp)
 8138220:	812c2b80 	call	812c2b8 <__mulsi3>
 8138224:	980b883a 	mov	r5,r19
 8138228:	8809883a 	mov	r4,r17
 813822c:	d8800215 	stw	r2,8(sp)
 8138230:	812c2b80 	call	812c2b8 <__mulsi3>
 8138234:	9809883a 	mov	r4,r19
 8138238:	a80b883a 	mov	r5,r21
 813823c:	1029883a 	mov	r20,r2
 8138240:	812c2b80 	call	812c2b8 <__mulsi3>
 8138244:	b00b883a 	mov	r5,r22
 8138248:	a809883a 	mov	r4,r21
 813824c:	d8800415 	stw	r2,16(sp)
 8138250:	812c2b80 	call	812c2b8 <__mulsi3>
 8138254:	d9c00217 	ldw	r7,8(sp)
 8138258:	1505883a 	add	r2,r2,r20
 813825c:	d8c00517 	ldw	r3,20(sp)
 8138260:	3826d43a 	srli	r19,r7,16
 8138264:	d9800717 	ldw	r6,28(sp)
 8138268:	da000617 	ldw	r8,24(sp)
 813826c:	9885883a 	add	r2,r19,r2
 8138270:	da400417 	ldw	r9,16(sp)
 8138274:	1500022e 	bgeu	r2,r20,8138280 <__muldf3+0x458>
 8138278:	01000074 	movhi	r4,1
 813827c:	4913883a 	add	r9,r9,r4
 8138280:	1028d43a 	srli	r20,r2,16
 8138284:	1004943a 	slli	r2,r2,16
 8138288:	802cd43a 	srli	r22,r16,16
 813828c:	843fffcc 	andi	r16,r16,65535
 8138290:	3cffffcc 	andi	r19,r7,65535
 8138294:	9009883a 	mov	r4,r18
 8138298:	800b883a 	mov	r5,r16
 813829c:	a269883a 	add	r20,r20,r9
 81382a0:	d8c00515 	stw	r3,20(sp)
 81382a4:	d9800715 	stw	r6,28(sp)
 81382a8:	da000615 	stw	r8,24(sp)
 81382ac:	14e7883a 	add	r19,r2,r19
 81382b0:	812c2b80 	call	812c2b8 <__mulsi3>
 81382b4:	9009883a 	mov	r4,r18
 81382b8:	b00b883a 	mov	r5,r22
 81382bc:	d8800315 	stw	r2,12(sp)
 81382c0:	812c2b80 	call	812c2b8 <__mulsi3>
 81382c4:	b809883a 	mov	r4,r23
 81382c8:	b00b883a 	mov	r5,r22
 81382cc:	d8800215 	stw	r2,8(sp)
 81382d0:	812c2b80 	call	812c2b8 <__mulsi3>
 81382d4:	b80b883a 	mov	r5,r23
 81382d8:	8009883a 	mov	r4,r16
 81382dc:	d8800415 	stw	r2,16(sp)
 81382e0:	812c2b80 	call	812c2b8 <__mulsi3>
 81382e4:	da800317 	ldw	r10,12(sp)
 81382e8:	d9c00217 	ldw	r7,8(sp)
 81382ec:	d9000017 	ldw	r4,0(sp)
 81382f0:	502ed43a 	srli	r23,r10,16
 81382f4:	11c5883a 	add	r2,r2,r7
 81382f8:	24e5883a 	add	r18,r4,r19
 81382fc:	b885883a 	add	r2,r23,r2
 8138300:	d8c00517 	ldw	r3,20(sp)
 8138304:	d9800717 	ldw	r6,28(sp)
 8138308:	da000617 	ldw	r8,24(sp)
 813830c:	da400417 	ldw	r9,16(sp)
 8138310:	11c0022e 	bgeu	r2,r7,813831c <__muldf3+0x4f4>
 8138314:	01000074 	movhi	r4,1
 8138318:	4913883a 	add	r9,r9,r4
 813831c:	100ed43a 	srli	r7,r2,16
 8138320:	1004943a 	slli	r2,r2,16
 8138324:	55ffffcc 	andi	r23,r10,65535
 8138328:	3a53883a 	add	r9,r7,r9
 813832c:	8809883a 	mov	r4,r17
 8138330:	800b883a 	mov	r5,r16
 8138334:	d8c00515 	stw	r3,20(sp)
 8138338:	d9800715 	stw	r6,28(sp)
 813833c:	da000615 	stw	r8,24(sp)
 8138340:	da400415 	stw	r9,16(sp)
 8138344:	15ef883a 	add	r23,r2,r23
 8138348:	812c2b80 	call	812c2b8 <__mulsi3>
 813834c:	8809883a 	mov	r4,r17
 8138350:	b00b883a 	mov	r5,r22
 8138354:	d8800215 	stw	r2,8(sp)
 8138358:	812c2b80 	call	812c2b8 <__mulsi3>
 813835c:	b00b883a 	mov	r5,r22
 8138360:	a809883a 	mov	r4,r21
 8138364:	d8800315 	stw	r2,12(sp)
 8138368:	812c2b80 	call	812c2b8 <__mulsi3>
 813836c:	8009883a 	mov	r4,r16
 8138370:	a80b883a 	mov	r5,r21
 8138374:	1023883a 	mov	r17,r2
 8138378:	812c2b80 	call	812c2b8 <__mulsi3>
 813837c:	d9c00217 	ldw	r7,8(sp)
 8138380:	da800317 	ldw	r10,12(sp)
 8138384:	d8c00517 	ldw	r3,20(sp)
 8138388:	3808d43a 	srli	r4,r7,16
 813838c:	1285883a 	add	r2,r2,r10
 8138390:	d9800717 	ldw	r6,28(sp)
 8138394:	2085883a 	add	r2,r4,r2
 8138398:	da000617 	ldw	r8,24(sp)
 813839c:	da400417 	ldw	r9,16(sp)
 81383a0:	1280022e 	bgeu	r2,r10,81383ac <__muldf3+0x584>
 81383a4:	01000074 	movhi	r4,1
 81383a8:	8923883a 	add	r17,r17,r4
 81383ac:	1008943a 	slli	r4,r2,16
 81383b0:	39ffffcc 	andi	r7,r7,65535
 81383b4:	e4b9883a 	add	fp,fp,r18
 81383b8:	21cf883a 	add	r7,r4,r7
 81383bc:	e4e7803a 	cmpltu	r19,fp,r19
 81383c0:	3d0f883a 	add	r7,r7,r20
 81383c4:	bf39883a 	add	fp,r23,fp
 81383c8:	99c9883a 	add	r4,r19,r7
 81383cc:	e5ef803a 	cmpltu	r23,fp,r23
 81383d0:	490b883a 	add	r5,r9,r4
 81383d4:	1004d43a 	srli	r2,r2,16
 81383d8:	b965883a 	add	r18,r23,r5
 81383dc:	24c9803a 	cmpltu	r4,r4,r19
 81383e0:	3d29803a 	cmpltu	r20,r7,r20
 81383e4:	a128b03a 	or	r20,r20,r4
 81383e8:	95ef803a 	cmpltu	r23,r18,r23
 81383ec:	2a53803a 	cmpltu	r9,r5,r9
 81383f0:	a0a9883a 	add	r20,r20,r2
 81383f4:	4deeb03a 	or	r23,r9,r23
 81383f8:	a5ef883a 	add	r23,r20,r23
 81383fc:	bc63883a 	add	r17,r23,r17
 8138400:	e004927a 	slli	r2,fp,9
 8138404:	d9000117 	ldw	r4,4(sp)
 8138408:	882e927a 	slli	r23,r17,9
 813840c:	9022d5fa 	srli	r17,r18,23
 8138410:	e038d5fa 	srli	fp,fp,23
 8138414:	1104b03a 	or	r2,r2,r4
 8138418:	9024927a 	slli	r18,r18,9
 813841c:	1004c03a 	cmpne	r2,r2,zero
 8138420:	bc62b03a 	or	r17,r23,r17
 8138424:	1738b03a 	or	fp,r2,fp
 8138428:	8880402c 	andhi	r2,r17,256
 813842c:	e4a4b03a 	or	r18,fp,r18
 8138430:	10000726 	beq	r2,zero,8138450 <__muldf3+0x628>
 8138434:	9006d07a 	srli	r3,r18,1
 8138438:	880497fa 	slli	r2,r17,31
 813843c:	9480004c 	andi	r18,r18,1
 8138440:	8822d07a 	srli	r17,r17,1
 8138444:	1ca4b03a 	or	r18,r3,r18
 8138448:	14a4b03a 	or	r18,r2,r18
 813844c:	4007883a 	mov	r3,r8
 8138450:	1880ffc4 	addi	r2,r3,1023
 8138454:	0080460e 	bge	zero,r2,8138570 <__muldf3+0x748>
 8138458:	910001cc 	andi	r4,r18,7
 813845c:	20000726 	beq	r4,zero,813847c <__muldf3+0x654>
 8138460:	910003cc 	andi	r4,r18,15
 8138464:	01400104 	movi	r5,4
 8138468:	21400426 	beq	r4,r5,813847c <__muldf3+0x654>
 813846c:	9149883a 	add	r4,r18,r5
 8138470:	24a5803a 	cmpltu	r18,r4,r18
 8138474:	8ca3883a 	add	r17,r17,r18
 8138478:	2025883a 	mov	r18,r4
 813847c:	8900402c 	andhi	r4,r17,256
 8138480:	20000426 	beq	r4,zero,8138494 <__muldf3+0x66c>
 8138484:	18810004 	addi	r2,r3,1024
 8138488:	00ffc034 	movhi	r3,65280
 813848c:	18ffffc4 	addi	r3,r3,-1
 8138490:	88e2703a 	and	r17,r17,r3
 8138494:	00c1ff84 	movi	r3,2046
 8138498:	18bf1316 	blt	r3,r2,81380e8 <__alt_data_end+0xfc1380e8>
 813849c:	882c977a 	slli	r22,r17,29
 81384a0:	9024d0fa 	srli	r18,r18,3
 81384a4:	8822927a 	slli	r17,r17,9
 81384a8:	1081ffcc 	andi	r2,r2,2047
 81384ac:	b4acb03a 	or	r22,r22,r18
 81384b0:	8820d33a 	srli	r16,r17,12
 81384b4:	3027883a 	mov	r19,r6
 81384b8:	003eba06 	br	8137fa4 <__alt_data_end+0xfc137fa4>
 81384bc:	8080022c 	andhi	r2,r16,8
 81384c0:	10000926 	beq	r2,zero,81384e8 <__muldf3+0x6c0>
 81384c4:	8880022c 	andhi	r2,r17,8
 81384c8:	1000071e 	bne	r2,zero,81384e8 <__muldf3+0x6c0>
 81384cc:	00800434 	movhi	r2,16
 81384d0:	8c000234 	orhi	r16,r17,8
 81384d4:	10bfffc4 	addi	r2,r2,-1
 81384d8:	e027883a 	mov	r19,fp
 81384dc:	80a0703a 	and	r16,r16,r2
 81384e0:	902d883a 	mov	r22,r18
 81384e4:	003f1706 	br	8138144 <__alt_data_end+0xfc138144>
 81384e8:	00800434 	movhi	r2,16
 81384ec:	84000234 	orhi	r16,r16,8
 81384f0:	10bfffc4 	addi	r2,r2,-1
 81384f4:	80a0703a 	and	r16,r16,r2
 81384f8:	003f1206 	br	8138144 <__alt_data_end+0xfc138144>
 81384fc:	147ff604 	addi	r17,r2,-40
 8138500:	3462983a 	sll	r17,r6,r17
 8138504:	0025883a 	mov	r18,zero
 8138508:	003ef306 	br	81380d8 <__alt_data_end+0xfc1380d8>
 813850c:	3009883a 	mov	r4,r6
 8138510:	d9400215 	stw	r5,8(sp)
 8138514:	d9800715 	stw	r6,28(sp)
 8138518:	da400415 	stw	r9,16(sp)
 813851c:	da800315 	stw	r10,12(sp)
 8138520:	81391940 	call	8139194 <__clzsi2>
 8138524:	10800804 	addi	r2,r2,32
 8138528:	da800317 	ldw	r10,12(sp)
 813852c:	da400417 	ldw	r9,16(sp)
 8138530:	d9800717 	ldw	r6,28(sp)
 8138534:	d9400217 	ldw	r5,8(sp)
 8138538:	003edd06 	br	81380b0 <__alt_data_end+0xfc1380b0>
 813853c:	143ff604 	addi	r16,r2,-40
 8138540:	ac20983a 	sll	r16,r21,r16
 8138544:	002d883a 	mov	r22,zero
 8138548:	003ec106 	br	8138050 <__alt_data_end+0xfc138050>
 813854c:	d9800715 	stw	r6,28(sp)
 8138550:	d9c00215 	stw	r7,8(sp)
 8138554:	da400415 	stw	r9,16(sp)
 8138558:	81391940 	call	8139194 <__clzsi2>
 813855c:	10800804 	addi	r2,r2,32
 8138560:	da400417 	ldw	r9,16(sp)
 8138564:	d9c00217 	ldw	r7,8(sp)
 8138568:	d9800717 	ldw	r6,28(sp)
 813856c:	003eae06 	br	8138028 <__alt_data_end+0xfc138028>
 8138570:	00c00044 	movi	r3,1
 8138574:	1887c83a 	sub	r3,r3,r2
 8138578:	01000e04 	movi	r4,56
 813857c:	20fe8516 	blt	r4,r3,8137f94 <__alt_data_end+0xfc137f94>
 8138580:	010007c4 	movi	r4,31
 8138584:	20c01b16 	blt	r4,r3,81385f4 <__muldf3+0x7cc>
 8138588:	00800804 	movi	r2,32
 813858c:	10c5c83a 	sub	r2,r2,r3
 8138590:	888a983a 	sll	r5,r17,r2
 8138594:	90c8d83a 	srl	r4,r18,r3
 8138598:	9084983a 	sll	r2,r18,r2
 813859c:	88e2d83a 	srl	r17,r17,r3
 81385a0:	2906b03a 	or	r3,r5,r4
 81385a4:	1004c03a 	cmpne	r2,r2,zero
 81385a8:	1886b03a 	or	r3,r3,r2
 81385ac:	188001cc 	andi	r2,r3,7
 81385b0:	10000726 	beq	r2,zero,81385d0 <__muldf3+0x7a8>
 81385b4:	188003cc 	andi	r2,r3,15
 81385b8:	01000104 	movi	r4,4
 81385bc:	11000426 	beq	r2,r4,81385d0 <__muldf3+0x7a8>
 81385c0:	1805883a 	mov	r2,r3
 81385c4:	10c00104 	addi	r3,r2,4
 81385c8:	1885803a 	cmpltu	r2,r3,r2
 81385cc:	88a3883a 	add	r17,r17,r2
 81385d0:	8880202c 	andhi	r2,r17,128
 81385d4:	10001c26 	beq	r2,zero,8138648 <__muldf3+0x820>
 81385d8:	3027883a 	mov	r19,r6
 81385dc:	00800044 	movi	r2,1
 81385e0:	0021883a 	mov	r16,zero
 81385e4:	002d883a 	mov	r22,zero
 81385e8:	003e6e06 	br	8137fa4 <__alt_data_end+0xfc137fa4>
 81385ec:	4007883a 	mov	r3,r8
 81385f0:	003f9706 	br	8138450 <__alt_data_end+0xfc138450>
 81385f4:	017ff844 	movi	r5,-31
 81385f8:	2885c83a 	sub	r2,r5,r2
 81385fc:	888ad83a 	srl	r5,r17,r2
 8138600:	00800804 	movi	r2,32
 8138604:	18801a26 	beq	r3,r2,8138670 <__muldf3+0x848>
 8138608:	01001004 	movi	r4,64
 813860c:	20c7c83a 	sub	r3,r4,r3
 8138610:	88e2983a 	sll	r17,r17,r3
 8138614:	8ca4b03a 	or	r18,r17,r18
 8138618:	9004c03a 	cmpne	r2,r18,zero
 813861c:	2884b03a 	or	r2,r5,r2
 8138620:	144001cc 	andi	r17,r2,7
 8138624:	88000d1e 	bne	r17,zero,813865c <__muldf3+0x834>
 8138628:	0021883a 	mov	r16,zero
 813862c:	102cd0fa 	srli	r22,r2,3
 8138630:	3027883a 	mov	r19,r6
 8138634:	0005883a 	mov	r2,zero
 8138638:	b46cb03a 	or	r22,r22,r17
 813863c:	003e5906 	br	8137fa4 <__alt_data_end+0xfc137fa4>
 8138640:	1007883a 	mov	r3,r2
 8138644:	0023883a 	mov	r17,zero
 8138648:	8820927a 	slli	r16,r17,9
 813864c:	1805883a 	mov	r2,r3
 8138650:	8822977a 	slli	r17,r17,29
 8138654:	8020d33a 	srli	r16,r16,12
 8138658:	003ff406 	br	813862c <__alt_data_end+0xfc13862c>
 813865c:	10c003cc 	andi	r3,r2,15
 8138660:	01000104 	movi	r4,4
 8138664:	193ff626 	beq	r3,r4,8138640 <__alt_data_end+0xfc138640>
 8138668:	0023883a 	mov	r17,zero
 813866c:	003fd506 	br	81385c4 <__alt_data_end+0xfc1385c4>
 8138670:	0023883a 	mov	r17,zero
 8138674:	003fe706 	br	8138614 <__alt_data_end+0xfc138614>
 8138678:	00800434 	movhi	r2,16
 813867c:	8c000234 	orhi	r16,r17,8
 8138680:	10bfffc4 	addi	r2,r2,-1
 8138684:	3027883a 	mov	r19,r6
 8138688:	80a0703a 	and	r16,r16,r2
 813868c:	902d883a 	mov	r22,r18
 8138690:	003eac06 	br	8138144 <__alt_data_end+0xfc138144>

08138694 <__subdf3>:
 8138694:	02000434 	movhi	r8,16
 8138698:	423fffc4 	addi	r8,r8,-1
 813869c:	defffb04 	addi	sp,sp,-20
 81386a0:	2a14703a 	and	r10,r5,r8
 81386a4:	3812d53a 	srli	r9,r7,20
 81386a8:	3a10703a 	and	r8,r7,r8
 81386ac:	2006d77a 	srli	r3,r4,29
 81386b0:	3004d77a 	srli	r2,r6,29
 81386b4:	dc000015 	stw	r16,0(sp)
 81386b8:	501490fa 	slli	r10,r10,3
 81386bc:	2820d53a 	srli	r16,r5,20
 81386c0:	401090fa 	slli	r8,r8,3
 81386c4:	dc800215 	stw	r18,8(sp)
 81386c8:	dc400115 	stw	r17,4(sp)
 81386cc:	dfc00415 	stw	ra,16(sp)
 81386d0:	202290fa 	slli	r17,r4,3
 81386d4:	dcc00315 	stw	r19,12(sp)
 81386d8:	4a41ffcc 	andi	r9,r9,2047
 81386dc:	0101ffc4 	movi	r4,2047
 81386e0:	2824d7fa 	srli	r18,r5,31
 81386e4:	8401ffcc 	andi	r16,r16,2047
 81386e8:	50c6b03a 	or	r3,r10,r3
 81386ec:	380ed7fa 	srli	r7,r7,31
 81386f0:	408ab03a 	or	r5,r8,r2
 81386f4:	300c90fa 	slli	r6,r6,3
 81386f8:	49009626 	beq	r9,r4,8138954 <__subdf3+0x2c0>
 81386fc:	39c0005c 	xori	r7,r7,1
 8138700:	8245c83a 	sub	r2,r16,r9
 8138704:	3c807426 	beq	r7,r18,81388d8 <__subdf3+0x244>
 8138708:	0080af0e 	bge	zero,r2,81389c8 <__subdf3+0x334>
 813870c:	48002a1e 	bne	r9,zero,81387b8 <__subdf3+0x124>
 8138710:	2988b03a 	or	r4,r5,r6
 8138714:	20009a1e 	bne	r4,zero,8138980 <__subdf3+0x2ec>
 8138718:	888001cc 	andi	r2,r17,7
 813871c:	10000726 	beq	r2,zero,813873c <__subdf3+0xa8>
 8138720:	888003cc 	andi	r2,r17,15
 8138724:	01000104 	movi	r4,4
 8138728:	11000426 	beq	r2,r4,813873c <__subdf3+0xa8>
 813872c:	890b883a 	add	r5,r17,r4
 8138730:	2c63803a 	cmpltu	r17,r5,r17
 8138734:	1c47883a 	add	r3,r3,r17
 8138738:	2823883a 	mov	r17,r5
 813873c:	1880202c 	andhi	r2,r3,128
 8138740:	10005926 	beq	r2,zero,81388a8 <__subdf3+0x214>
 8138744:	84000044 	addi	r16,r16,1
 8138748:	0081ffc4 	movi	r2,2047
 813874c:	8080be26 	beq	r16,r2,8138a48 <__subdf3+0x3b4>
 8138750:	017fe034 	movhi	r5,65408
 8138754:	297fffc4 	addi	r5,r5,-1
 8138758:	1946703a 	and	r3,r3,r5
 813875c:	1804977a 	slli	r2,r3,29
 8138760:	1806927a 	slli	r3,r3,9
 8138764:	8822d0fa 	srli	r17,r17,3
 8138768:	8401ffcc 	andi	r16,r16,2047
 813876c:	180ad33a 	srli	r5,r3,12
 8138770:	9100004c 	andi	r4,r18,1
 8138774:	1444b03a 	or	r2,r2,r17
 8138778:	80c1ffcc 	andi	r3,r16,2047
 813877c:	1820953a 	slli	r16,r3,20
 8138780:	20c03fcc 	andi	r3,r4,255
 8138784:	180897fa 	slli	r4,r3,31
 8138788:	00c00434 	movhi	r3,16
 813878c:	18ffffc4 	addi	r3,r3,-1
 8138790:	28c6703a 	and	r3,r5,r3
 8138794:	1c06b03a 	or	r3,r3,r16
 8138798:	1906b03a 	or	r3,r3,r4
 813879c:	dfc00417 	ldw	ra,16(sp)
 81387a0:	dcc00317 	ldw	r19,12(sp)
 81387a4:	dc800217 	ldw	r18,8(sp)
 81387a8:	dc400117 	ldw	r17,4(sp)
 81387ac:	dc000017 	ldw	r16,0(sp)
 81387b0:	dec00504 	addi	sp,sp,20
 81387b4:	f800283a 	ret
 81387b8:	0101ffc4 	movi	r4,2047
 81387bc:	813fd626 	beq	r16,r4,8138718 <__alt_data_end+0xfc138718>
 81387c0:	29402034 	orhi	r5,r5,128
 81387c4:	01000e04 	movi	r4,56
 81387c8:	2080a316 	blt	r4,r2,8138a58 <__subdf3+0x3c4>
 81387cc:	010007c4 	movi	r4,31
 81387d0:	2080c616 	blt	r4,r2,8138aec <__subdf3+0x458>
 81387d4:	01000804 	movi	r4,32
 81387d8:	2089c83a 	sub	r4,r4,r2
 81387dc:	2910983a 	sll	r8,r5,r4
 81387e0:	308ed83a 	srl	r7,r6,r2
 81387e4:	3108983a 	sll	r4,r6,r4
 81387e8:	2884d83a 	srl	r2,r5,r2
 81387ec:	41ccb03a 	or	r6,r8,r7
 81387f0:	2008c03a 	cmpne	r4,r4,zero
 81387f4:	310cb03a 	or	r6,r6,r4
 81387f8:	898dc83a 	sub	r6,r17,r6
 81387fc:	89a3803a 	cmpltu	r17,r17,r6
 8138800:	1887c83a 	sub	r3,r3,r2
 8138804:	1c47c83a 	sub	r3,r3,r17
 8138808:	3023883a 	mov	r17,r6
 813880c:	1880202c 	andhi	r2,r3,128
 8138810:	10002326 	beq	r2,zero,81388a0 <__subdf3+0x20c>
 8138814:	04c02034 	movhi	r19,128
 8138818:	9cffffc4 	addi	r19,r19,-1
 813881c:	1ce6703a 	and	r19,r3,r19
 8138820:	98007a26 	beq	r19,zero,8138a0c <__subdf3+0x378>
 8138824:	9809883a 	mov	r4,r19
 8138828:	81391940 	call	8139194 <__clzsi2>
 813882c:	113ffe04 	addi	r4,r2,-8
 8138830:	00c007c4 	movi	r3,31
 8138834:	19007b16 	blt	r3,r4,8138a24 <__subdf3+0x390>
 8138838:	00800804 	movi	r2,32
 813883c:	1105c83a 	sub	r2,r2,r4
 8138840:	8884d83a 	srl	r2,r17,r2
 8138844:	9906983a 	sll	r3,r19,r4
 8138848:	8922983a 	sll	r17,r17,r4
 813884c:	10c4b03a 	or	r2,r2,r3
 8138850:	24007816 	blt	r4,r16,8138a34 <__subdf3+0x3a0>
 8138854:	2421c83a 	sub	r16,r4,r16
 8138858:	80c00044 	addi	r3,r16,1
 813885c:	010007c4 	movi	r4,31
 8138860:	20c09516 	blt	r4,r3,8138ab8 <__subdf3+0x424>
 8138864:	01400804 	movi	r5,32
 8138868:	28cbc83a 	sub	r5,r5,r3
 813886c:	88c8d83a 	srl	r4,r17,r3
 8138870:	8962983a 	sll	r17,r17,r5
 8138874:	114a983a 	sll	r5,r2,r5
 8138878:	10c6d83a 	srl	r3,r2,r3
 813887c:	8804c03a 	cmpne	r2,r17,zero
 8138880:	290ab03a 	or	r5,r5,r4
 8138884:	28a2b03a 	or	r17,r5,r2
 8138888:	0021883a 	mov	r16,zero
 813888c:	003fa206 	br	8138718 <__alt_data_end+0xfc138718>
 8138890:	2090b03a 	or	r8,r4,r2
 8138894:	40018e26 	beq	r8,zero,8138ed0 <__subdf3+0x83c>
 8138898:	1007883a 	mov	r3,r2
 813889c:	2023883a 	mov	r17,r4
 81388a0:	888001cc 	andi	r2,r17,7
 81388a4:	103f9e1e 	bne	r2,zero,8138720 <__alt_data_end+0xfc138720>
 81388a8:	1804977a 	slli	r2,r3,29
 81388ac:	8822d0fa 	srli	r17,r17,3
 81388b0:	1810d0fa 	srli	r8,r3,3
 81388b4:	9100004c 	andi	r4,r18,1
 81388b8:	1444b03a 	or	r2,r2,r17
 81388bc:	00c1ffc4 	movi	r3,2047
 81388c0:	80c02826 	beq	r16,r3,8138964 <__subdf3+0x2d0>
 81388c4:	01400434 	movhi	r5,16
 81388c8:	297fffc4 	addi	r5,r5,-1
 81388cc:	80e0703a 	and	r16,r16,r3
 81388d0:	414a703a 	and	r5,r8,r5
 81388d4:	003fa806 	br	8138778 <__alt_data_end+0xfc138778>
 81388d8:	0080630e 	bge	zero,r2,8138a68 <__subdf3+0x3d4>
 81388dc:	48003026 	beq	r9,zero,81389a0 <__subdf3+0x30c>
 81388e0:	0101ffc4 	movi	r4,2047
 81388e4:	813f8c26 	beq	r16,r4,8138718 <__alt_data_end+0xfc138718>
 81388e8:	29402034 	orhi	r5,r5,128
 81388ec:	01000e04 	movi	r4,56
 81388f0:	2080a90e 	bge	r4,r2,8138b98 <__subdf3+0x504>
 81388f4:	298cb03a 	or	r6,r5,r6
 81388f8:	3012c03a 	cmpne	r9,r6,zero
 81388fc:	0005883a 	mov	r2,zero
 8138900:	4c53883a 	add	r9,r9,r17
 8138904:	4c63803a 	cmpltu	r17,r9,r17
 8138908:	10c7883a 	add	r3,r2,r3
 813890c:	88c7883a 	add	r3,r17,r3
 8138910:	4823883a 	mov	r17,r9
 8138914:	1880202c 	andhi	r2,r3,128
 8138918:	1000d026 	beq	r2,zero,8138c5c <__subdf3+0x5c8>
 813891c:	84000044 	addi	r16,r16,1
 8138920:	0081ffc4 	movi	r2,2047
 8138924:	8080fe26 	beq	r16,r2,8138d20 <__subdf3+0x68c>
 8138928:	00bfe034 	movhi	r2,65408
 813892c:	10bfffc4 	addi	r2,r2,-1
 8138930:	1886703a 	and	r3,r3,r2
 8138934:	880ad07a 	srli	r5,r17,1
 8138938:	180497fa 	slli	r2,r3,31
 813893c:	8900004c 	andi	r4,r17,1
 8138940:	2922b03a 	or	r17,r5,r4
 8138944:	1806d07a 	srli	r3,r3,1
 8138948:	1462b03a 	or	r17,r2,r17
 813894c:	3825883a 	mov	r18,r7
 8138950:	003f7106 	br	8138718 <__alt_data_end+0xfc138718>
 8138954:	2984b03a 	or	r2,r5,r6
 8138958:	103f6826 	beq	r2,zero,81386fc <__alt_data_end+0xfc1386fc>
 813895c:	39c03fcc 	andi	r7,r7,255
 8138960:	003f6706 	br	8138700 <__alt_data_end+0xfc138700>
 8138964:	4086b03a 	or	r3,r8,r2
 8138968:	18015226 	beq	r3,zero,8138eb4 <__subdf3+0x820>
 813896c:	00c00434 	movhi	r3,16
 8138970:	41400234 	orhi	r5,r8,8
 8138974:	18ffffc4 	addi	r3,r3,-1
 8138978:	28ca703a 	and	r5,r5,r3
 813897c:	003f7e06 	br	8138778 <__alt_data_end+0xfc138778>
 8138980:	10bfffc4 	addi	r2,r2,-1
 8138984:	1000491e 	bne	r2,zero,8138aac <__subdf3+0x418>
 8138988:	898fc83a 	sub	r7,r17,r6
 813898c:	89e3803a 	cmpltu	r17,r17,r7
 8138990:	1947c83a 	sub	r3,r3,r5
 8138994:	1c47c83a 	sub	r3,r3,r17
 8138998:	3823883a 	mov	r17,r7
 813899c:	003f9b06 	br	813880c <__alt_data_end+0xfc13880c>
 81389a0:	2988b03a 	or	r4,r5,r6
 81389a4:	203f5c26 	beq	r4,zero,8138718 <__alt_data_end+0xfc138718>
 81389a8:	10bfffc4 	addi	r2,r2,-1
 81389ac:	1000931e 	bne	r2,zero,8138bfc <__subdf3+0x568>
 81389b0:	898d883a 	add	r6,r17,r6
 81389b4:	3463803a 	cmpltu	r17,r6,r17
 81389b8:	1947883a 	add	r3,r3,r5
 81389bc:	88c7883a 	add	r3,r17,r3
 81389c0:	3023883a 	mov	r17,r6
 81389c4:	003fd306 	br	8138914 <__alt_data_end+0xfc138914>
 81389c8:	1000541e 	bne	r2,zero,8138b1c <__subdf3+0x488>
 81389cc:	80800044 	addi	r2,r16,1
 81389d0:	1081ffcc 	andi	r2,r2,2047
 81389d4:	01000044 	movi	r4,1
 81389d8:	2080a20e 	bge	r4,r2,8138c64 <__subdf3+0x5d0>
 81389dc:	8989c83a 	sub	r4,r17,r6
 81389e0:	8905803a 	cmpltu	r2,r17,r4
 81389e4:	1967c83a 	sub	r19,r3,r5
 81389e8:	98a7c83a 	sub	r19,r19,r2
 81389ec:	9880202c 	andhi	r2,r19,128
 81389f0:	10006326 	beq	r2,zero,8138b80 <__subdf3+0x4ec>
 81389f4:	3463c83a 	sub	r17,r6,r17
 81389f8:	28c7c83a 	sub	r3,r5,r3
 81389fc:	344d803a 	cmpltu	r6,r6,r17
 8138a00:	19a7c83a 	sub	r19,r3,r6
 8138a04:	3825883a 	mov	r18,r7
 8138a08:	983f861e 	bne	r19,zero,8138824 <__alt_data_end+0xfc138824>
 8138a0c:	8809883a 	mov	r4,r17
 8138a10:	81391940 	call	8139194 <__clzsi2>
 8138a14:	10800804 	addi	r2,r2,32
 8138a18:	113ffe04 	addi	r4,r2,-8
 8138a1c:	00c007c4 	movi	r3,31
 8138a20:	193f850e 	bge	r3,r4,8138838 <__alt_data_end+0xfc138838>
 8138a24:	10bff604 	addi	r2,r2,-40
 8138a28:	8884983a 	sll	r2,r17,r2
 8138a2c:	0023883a 	mov	r17,zero
 8138a30:	243f880e 	bge	r4,r16,8138854 <__alt_data_end+0xfc138854>
 8138a34:	00ffe034 	movhi	r3,65408
 8138a38:	18ffffc4 	addi	r3,r3,-1
 8138a3c:	8121c83a 	sub	r16,r16,r4
 8138a40:	10c6703a 	and	r3,r2,r3
 8138a44:	003f3406 	br	8138718 <__alt_data_end+0xfc138718>
 8138a48:	9100004c 	andi	r4,r18,1
 8138a4c:	000b883a 	mov	r5,zero
 8138a50:	0005883a 	mov	r2,zero
 8138a54:	003f4806 	br	8138778 <__alt_data_end+0xfc138778>
 8138a58:	298cb03a 	or	r6,r5,r6
 8138a5c:	300cc03a 	cmpne	r6,r6,zero
 8138a60:	0005883a 	mov	r2,zero
 8138a64:	003f6406 	br	81387f8 <__alt_data_end+0xfc1387f8>
 8138a68:	10009a1e 	bne	r2,zero,8138cd4 <__subdf3+0x640>
 8138a6c:	82400044 	addi	r9,r16,1
 8138a70:	4881ffcc 	andi	r2,r9,2047
 8138a74:	02800044 	movi	r10,1
 8138a78:	5080670e 	bge	r10,r2,8138c18 <__subdf3+0x584>
 8138a7c:	0081ffc4 	movi	r2,2047
 8138a80:	4880af26 	beq	r9,r2,8138d40 <__subdf3+0x6ac>
 8138a84:	898d883a 	add	r6,r17,r6
 8138a88:	1945883a 	add	r2,r3,r5
 8138a8c:	3447803a 	cmpltu	r3,r6,r17
 8138a90:	1887883a 	add	r3,r3,r2
 8138a94:	182297fa 	slli	r17,r3,31
 8138a98:	300cd07a 	srli	r6,r6,1
 8138a9c:	1806d07a 	srli	r3,r3,1
 8138aa0:	4821883a 	mov	r16,r9
 8138aa4:	89a2b03a 	or	r17,r17,r6
 8138aa8:	003f1b06 	br	8138718 <__alt_data_end+0xfc138718>
 8138aac:	0101ffc4 	movi	r4,2047
 8138ab0:	813f441e 	bne	r16,r4,81387c4 <__alt_data_end+0xfc1387c4>
 8138ab4:	003f1806 	br	8138718 <__alt_data_end+0xfc138718>
 8138ab8:	843ff844 	addi	r16,r16,-31
 8138abc:	01400804 	movi	r5,32
 8138ac0:	1408d83a 	srl	r4,r2,r16
 8138ac4:	19405026 	beq	r3,r5,8138c08 <__subdf3+0x574>
 8138ac8:	01401004 	movi	r5,64
 8138acc:	28c7c83a 	sub	r3,r5,r3
 8138ad0:	10c4983a 	sll	r2,r2,r3
 8138ad4:	88a2b03a 	or	r17,r17,r2
 8138ad8:	8822c03a 	cmpne	r17,r17,zero
 8138adc:	2462b03a 	or	r17,r4,r17
 8138ae0:	0007883a 	mov	r3,zero
 8138ae4:	0021883a 	mov	r16,zero
 8138ae8:	003f6d06 	br	81388a0 <__alt_data_end+0xfc1388a0>
 8138aec:	11fff804 	addi	r7,r2,-32
 8138af0:	01000804 	movi	r4,32
 8138af4:	29ced83a 	srl	r7,r5,r7
 8138af8:	11004526 	beq	r2,r4,8138c10 <__subdf3+0x57c>
 8138afc:	01001004 	movi	r4,64
 8138b00:	2089c83a 	sub	r4,r4,r2
 8138b04:	2904983a 	sll	r2,r5,r4
 8138b08:	118cb03a 	or	r6,r2,r6
 8138b0c:	300cc03a 	cmpne	r6,r6,zero
 8138b10:	398cb03a 	or	r6,r7,r6
 8138b14:	0005883a 	mov	r2,zero
 8138b18:	003f3706 	br	81387f8 <__alt_data_end+0xfc1387f8>
 8138b1c:	80002a26 	beq	r16,zero,8138bc8 <__subdf3+0x534>
 8138b20:	0101ffc4 	movi	r4,2047
 8138b24:	49006626 	beq	r9,r4,8138cc0 <__subdf3+0x62c>
 8138b28:	0085c83a 	sub	r2,zero,r2
 8138b2c:	18c02034 	orhi	r3,r3,128
 8138b30:	01000e04 	movi	r4,56
 8138b34:	20807e16 	blt	r4,r2,8138d30 <__subdf3+0x69c>
 8138b38:	010007c4 	movi	r4,31
 8138b3c:	2080e716 	blt	r4,r2,8138edc <__subdf3+0x848>
 8138b40:	01000804 	movi	r4,32
 8138b44:	2089c83a 	sub	r4,r4,r2
 8138b48:	1914983a 	sll	r10,r3,r4
 8138b4c:	8890d83a 	srl	r8,r17,r2
 8138b50:	8908983a 	sll	r4,r17,r4
 8138b54:	1884d83a 	srl	r2,r3,r2
 8138b58:	5222b03a 	or	r17,r10,r8
 8138b5c:	2006c03a 	cmpne	r3,r4,zero
 8138b60:	88e2b03a 	or	r17,r17,r3
 8138b64:	3463c83a 	sub	r17,r6,r17
 8138b68:	2885c83a 	sub	r2,r5,r2
 8138b6c:	344d803a 	cmpltu	r6,r6,r17
 8138b70:	1187c83a 	sub	r3,r2,r6
 8138b74:	4821883a 	mov	r16,r9
 8138b78:	3825883a 	mov	r18,r7
 8138b7c:	003f2306 	br	813880c <__alt_data_end+0xfc13880c>
 8138b80:	24d0b03a 	or	r8,r4,r19
 8138b84:	40001b1e 	bne	r8,zero,8138bf4 <__subdf3+0x560>
 8138b88:	0005883a 	mov	r2,zero
 8138b8c:	0009883a 	mov	r4,zero
 8138b90:	0021883a 	mov	r16,zero
 8138b94:	003f4906 	br	81388bc <__alt_data_end+0xfc1388bc>
 8138b98:	010007c4 	movi	r4,31
 8138b9c:	20803a16 	blt	r4,r2,8138c88 <__subdf3+0x5f4>
 8138ba0:	01000804 	movi	r4,32
 8138ba4:	2089c83a 	sub	r4,r4,r2
 8138ba8:	2912983a 	sll	r9,r5,r4
 8138bac:	3090d83a 	srl	r8,r6,r2
 8138bb0:	3108983a 	sll	r4,r6,r4
 8138bb4:	2884d83a 	srl	r2,r5,r2
 8138bb8:	4a12b03a 	or	r9,r9,r8
 8138bbc:	2008c03a 	cmpne	r4,r4,zero
 8138bc0:	4912b03a 	or	r9,r9,r4
 8138bc4:	003f4e06 	br	8138900 <__alt_data_end+0xfc138900>
 8138bc8:	1c48b03a 	or	r4,r3,r17
 8138bcc:	20003c26 	beq	r4,zero,8138cc0 <__subdf3+0x62c>
 8138bd0:	0084303a 	nor	r2,zero,r2
 8138bd4:	1000381e 	bne	r2,zero,8138cb8 <__subdf3+0x624>
 8138bd8:	3463c83a 	sub	r17,r6,r17
 8138bdc:	28c5c83a 	sub	r2,r5,r3
 8138be0:	344d803a 	cmpltu	r6,r6,r17
 8138be4:	1187c83a 	sub	r3,r2,r6
 8138be8:	4821883a 	mov	r16,r9
 8138bec:	3825883a 	mov	r18,r7
 8138bf0:	003f0606 	br	813880c <__alt_data_end+0xfc13880c>
 8138bf4:	2023883a 	mov	r17,r4
 8138bf8:	003f0906 	br	8138820 <__alt_data_end+0xfc138820>
 8138bfc:	0101ffc4 	movi	r4,2047
 8138c00:	813f3a1e 	bne	r16,r4,81388ec <__alt_data_end+0xfc1388ec>
 8138c04:	003ec406 	br	8138718 <__alt_data_end+0xfc138718>
 8138c08:	0005883a 	mov	r2,zero
 8138c0c:	003fb106 	br	8138ad4 <__alt_data_end+0xfc138ad4>
 8138c10:	0005883a 	mov	r2,zero
 8138c14:	003fbc06 	br	8138b08 <__alt_data_end+0xfc138b08>
 8138c18:	1c44b03a 	or	r2,r3,r17
 8138c1c:	80008e1e 	bne	r16,zero,8138e58 <__subdf3+0x7c4>
 8138c20:	1000c826 	beq	r2,zero,8138f44 <__subdf3+0x8b0>
 8138c24:	2984b03a 	or	r2,r5,r6
 8138c28:	103ebb26 	beq	r2,zero,8138718 <__alt_data_end+0xfc138718>
 8138c2c:	8989883a 	add	r4,r17,r6
 8138c30:	1945883a 	add	r2,r3,r5
 8138c34:	2447803a 	cmpltu	r3,r4,r17
 8138c38:	1887883a 	add	r3,r3,r2
 8138c3c:	1880202c 	andhi	r2,r3,128
 8138c40:	2023883a 	mov	r17,r4
 8138c44:	103f1626 	beq	r2,zero,81388a0 <__alt_data_end+0xfc1388a0>
 8138c48:	00bfe034 	movhi	r2,65408
 8138c4c:	10bfffc4 	addi	r2,r2,-1
 8138c50:	5021883a 	mov	r16,r10
 8138c54:	1886703a 	and	r3,r3,r2
 8138c58:	003eaf06 	br	8138718 <__alt_data_end+0xfc138718>
 8138c5c:	3825883a 	mov	r18,r7
 8138c60:	003f0f06 	br	81388a0 <__alt_data_end+0xfc1388a0>
 8138c64:	1c44b03a 	or	r2,r3,r17
 8138c68:	8000251e 	bne	r16,zero,8138d00 <__subdf3+0x66c>
 8138c6c:	1000661e 	bne	r2,zero,8138e08 <__subdf3+0x774>
 8138c70:	2990b03a 	or	r8,r5,r6
 8138c74:	40009626 	beq	r8,zero,8138ed0 <__subdf3+0x83c>
 8138c78:	2807883a 	mov	r3,r5
 8138c7c:	3023883a 	mov	r17,r6
 8138c80:	3825883a 	mov	r18,r7
 8138c84:	003ea406 	br	8138718 <__alt_data_end+0xfc138718>
 8138c88:	127ff804 	addi	r9,r2,-32
 8138c8c:	01000804 	movi	r4,32
 8138c90:	2a52d83a 	srl	r9,r5,r9
 8138c94:	11008c26 	beq	r2,r4,8138ec8 <__subdf3+0x834>
 8138c98:	01001004 	movi	r4,64
 8138c9c:	2085c83a 	sub	r2,r4,r2
 8138ca0:	2884983a 	sll	r2,r5,r2
 8138ca4:	118cb03a 	or	r6,r2,r6
 8138ca8:	300cc03a 	cmpne	r6,r6,zero
 8138cac:	4992b03a 	or	r9,r9,r6
 8138cb0:	0005883a 	mov	r2,zero
 8138cb4:	003f1206 	br	8138900 <__alt_data_end+0xfc138900>
 8138cb8:	0101ffc4 	movi	r4,2047
 8138cbc:	493f9c1e 	bne	r9,r4,8138b30 <__alt_data_end+0xfc138b30>
 8138cc0:	2807883a 	mov	r3,r5
 8138cc4:	3023883a 	mov	r17,r6
 8138cc8:	4821883a 	mov	r16,r9
 8138ccc:	3825883a 	mov	r18,r7
 8138cd0:	003e9106 	br	8138718 <__alt_data_end+0xfc138718>
 8138cd4:	80001f1e 	bne	r16,zero,8138d54 <__subdf3+0x6c0>
 8138cd8:	1c48b03a 	or	r4,r3,r17
 8138cdc:	20005a26 	beq	r4,zero,8138e48 <__subdf3+0x7b4>
 8138ce0:	0084303a 	nor	r2,zero,r2
 8138ce4:	1000561e 	bne	r2,zero,8138e40 <__subdf3+0x7ac>
 8138ce8:	89a3883a 	add	r17,r17,r6
 8138cec:	1945883a 	add	r2,r3,r5
 8138cf0:	898d803a 	cmpltu	r6,r17,r6
 8138cf4:	3087883a 	add	r3,r6,r2
 8138cf8:	4821883a 	mov	r16,r9
 8138cfc:	003f0506 	br	8138914 <__alt_data_end+0xfc138914>
 8138d00:	10002b1e 	bne	r2,zero,8138db0 <__subdf3+0x71c>
 8138d04:	2984b03a 	or	r2,r5,r6
 8138d08:	10008026 	beq	r2,zero,8138f0c <__subdf3+0x878>
 8138d0c:	2807883a 	mov	r3,r5
 8138d10:	3023883a 	mov	r17,r6
 8138d14:	3825883a 	mov	r18,r7
 8138d18:	0401ffc4 	movi	r16,2047
 8138d1c:	003e7e06 	br	8138718 <__alt_data_end+0xfc138718>
 8138d20:	3809883a 	mov	r4,r7
 8138d24:	0011883a 	mov	r8,zero
 8138d28:	0005883a 	mov	r2,zero
 8138d2c:	003ee306 	br	81388bc <__alt_data_end+0xfc1388bc>
 8138d30:	1c62b03a 	or	r17,r3,r17
 8138d34:	8822c03a 	cmpne	r17,r17,zero
 8138d38:	0005883a 	mov	r2,zero
 8138d3c:	003f8906 	br	8138b64 <__alt_data_end+0xfc138b64>
 8138d40:	3809883a 	mov	r4,r7
 8138d44:	4821883a 	mov	r16,r9
 8138d48:	0011883a 	mov	r8,zero
 8138d4c:	0005883a 	mov	r2,zero
 8138d50:	003eda06 	br	81388bc <__alt_data_end+0xfc1388bc>
 8138d54:	0101ffc4 	movi	r4,2047
 8138d58:	49003b26 	beq	r9,r4,8138e48 <__subdf3+0x7b4>
 8138d5c:	0085c83a 	sub	r2,zero,r2
 8138d60:	18c02034 	orhi	r3,r3,128
 8138d64:	01000e04 	movi	r4,56
 8138d68:	20806e16 	blt	r4,r2,8138f24 <__subdf3+0x890>
 8138d6c:	010007c4 	movi	r4,31
 8138d70:	20807716 	blt	r4,r2,8138f50 <__subdf3+0x8bc>
 8138d74:	01000804 	movi	r4,32
 8138d78:	2089c83a 	sub	r4,r4,r2
 8138d7c:	1914983a 	sll	r10,r3,r4
 8138d80:	8890d83a 	srl	r8,r17,r2
 8138d84:	8908983a 	sll	r4,r17,r4
 8138d88:	1884d83a 	srl	r2,r3,r2
 8138d8c:	5222b03a 	or	r17,r10,r8
 8138d90:	2006c03a 	cmpne	r3,r4,zero
 8138d94:	88e2b03a 	or	r17,r17,r3
 8138d98:	89a3883a 	add	r17,r17,r6
 8138d9c:	1145883a 	add	r2,r2,r5
 8138da0:	898d803a 	cmpltu	r6,r17,r6
 8138da4:	3087883a 	add	r3,r6,r2
 8138da8:	4821883a 	mov	r16,r9
 8138dac:	003ed906 	br	8138914 <__alt_data_end+0xfc138914>
 8138db0:	2984b03a 	or	r2,r5,r6
 8138db4:	10004226 	beq	r2,zero,8138ec0 <__subdf3+0x82c>
 8138db8:	1808d0fa 	srli	r4,r3,3
 8138dbc:	8822d0fa 	srli	r17,r17,3
 8138dc0:	1806977a 	slli	r3,r3,29
 8138dc4:	2080022c 	andhi	r2,r4,8
 8138dc8:	1c62b03a 	or	r17,r3,r17
 8138dcc:	10000826 	beq	r2,zero,8138df0 <__subdf3+0x75c>
 8138dd0:	2812d0fa 	srli	r9,r5,3
 8138dd4:	4880022c 	andhi	r2,r9,8
 8138dd8:	1000051e 	bne	r2,zero,8138df0 <__subdf3+0x75c>
 8138ddc:	300cd0fa 	srli	r6,r6,3
 8138de0:	2804977a 	slli	r2,r5,29
 8138de4:	4809883a 	mov	r4,r9
 8138de8:	3825883a 	mov	r18,r7
 8138dec:	11a2b03a 	or	r17,r2,r6
 8138df0:	8806d77a 	srli	r3,r17,29
 8138df4:	200890fa 	slli	r4,r4,3
 8138df8:	882290fa 	slli	r17,r17,3
 8138dfc:	0401ffc4 	movi	r16,2047
 8138e00:	1906b03a 	or	r3,r3,r4
 8138e04:	003e4406 	br	8138718 <__alt_data_end+0xfc138718>
 8138e08:	2984b03a 	or	r2,r5,r6
 8138e0c:	103e4226 	beq	r2,zero,8138718 <__alt_data_end+0xfc138718>
 8138e10:	8989c83a 	sub	r4,r17,r6
 8138e14:	8911803a 	cmpltu	r8,r17,r4
 8138e18:	1945c83a 	sub	r2,r3,r5
 8138e1c:	1205c83a 	sub	r2,r2,r8
 8138e20:	1200202c 	andhi	r8,r2,128
 8138e24:	403e9a26 	beq	r8,zero,8138890 <__alt_data_end+0xfc138890>
 8138e28:	3463c83a 	sub	r17,r6,r17
 8138e2c:	28c5c83a 	sub	r2,r5,r3
 8138e30:	344d803a 	cmpltu	r6,r6,r17
 8138e34:	1187c83a 	sub	r3,r2,r6
 8138e38:	3825883a 	mov	r18,r7
 8138e3c:	003e3606 	br	8138718 <__alt_data_end+0xfc138718>
 8138e40:	0101ffc4 	movi	r4,2047
 8138e44:	493fc71e 	bne	r9,r4,8138d64 <__alt_data_end+0xfc138d64>
 8138e48:	2807883a 	mov	r3,r5
 8138e4c:	3023883a 	mov	r17,r6
 8138e50:	4821883a 	mov	r16,r9
 8138e54:	003e3006 	br	8138718 <__alt_data_end+0xfc138718>
 8138e58:	10003626 	beq	r2,zero,8138f34 <__subdf3+0x8a0>
 8138e5c:	2984b03a 	or	r2,r5,r6
 8138e60:	10001726 	beq	r2,zero,8138ec0 <__subdf3+0x82c>
 8138e64:	1808d0fa 	srli	r4,r3,3
 8138e68:	8822d0fa 	srli	r17,r17,3
 8138e6c:	1806977a 	slli	r3,r3,29
 8138e70:	2080022c 	andhi	r2,r4,8
 8138e74:	1c62b03a 	or	r17,r3,r17
 8138e78:	10000726 	beq	r2,zero,8138e98 <__subdf3+0x804>
 8138e7c:	2812d0fa 	srli	r9,r5,3
 8138e80:	4880022c 	andhi	r2,r9,8
 8138e84:	1000041e 	bne	r2,zero,8138e98 <__subdf3+0x804>
 8138e88:	300cd0fa 	srli	r6,r6,3
 8138e8c:	2804977a 	slli	r2,r5,29
 8138e90:	4809883a 	mov	r4,r9
 8138e94:	11a2b03a 	or	r17,r2,r6
 8138e98:	8806d77a 	srli	r3,r17,29
 8138e9c:	200890fa 	slli	r4,r4,3
 8138ea0:	882290fa 	slli	r17,r17,3
 8138ea4:	3825883a 	mov	r18,r7
 8138ea8:	1906b03a 	or	r3,r3,r4
 8138eac:	0401ffc4 	movi	r16,2047
 8138eb0:	003e1906 	br	8138718 <__alt_data_end+0xfc138718>
 8138eb4:	000b883a 	mov	r5,zero
 8138eb8:	0005883a 	mov	r2,zero
 8138ebc:	003e2e06 	br	8138778 <__alt_data_end+0xfc138778>
 8138ec0:	0401ffc4 	movi	r16,2047
 8138ec4:	003e1406 	br	8138718 <__alt_data_end+0xfc138718>
 8138ec8:	0005883a 	mov	r2,zero
 8138ecc:	003f7506 	br	8138ca4 <__alt_data_end+0xfc138ca4>
 8138ed0:	0005883a 	mov	r2,zero
 8138ed4:	0009883a 	mov	r4,zero
 8138ed8:	003e7806 	br	81388bc <__alt_data_end+0xfc1388bc>
 8138edc:	123ff804 	addi	r8,r2,-32
 8138ee0:	01000804 	movi	r4,32
 8138ee4:	1a10d83a 	srl	r8,r3,r8
 8138ee8:	11002526 	beq	r2,r4,8138f80 <__subdf3+0x8ec>
 8138eec:	01001004 	movi	r4,64
 8138ef0:	2085c83a 	sub	r2,r4,r2
 8138ef4:	1884983a 	sll	r2,r3,r2
 8138ef8:	1444b03a 	or	r2,r2,r17
 8138efc:	1004c03a 	cmpne	r2,r2,zero
 8138f00:	40a2b03a 	or	r17,r8,r2
 8138f04:	0005883a 	mov	r2,zero
 8138f08:	003f1606 	br	8138b64 <__alt_data_end+0xfc138b64>
 8138f0c:	02000434 	movhi	r8,16
 8138f10:	0009883a 	mov	r4,zero
 8138f14:	423fffc4 	addi	r8,r8,-1
 8138f18:	00bfffc4 	movi	r2,-1
 8138f1c:	0401ffc4 	movi	r16,2047
 8138f20:	003e6606 	br	81388bc <__alt_data_end+0xfc1388bc>
 8138f24:	1c62b03a 	or	r17,r3,r17
 8138f28:	8822c03a 	cmpne	r17,r17,zero
 8138f2c:	0005883a 	mov	r2,zero
 8138f30:	003f9906 	br	8138d98 <__alt_data_end+0xfc138d98>
 8138f34:	2807883a 	mov	r3,r5
 8138f38:	3023883a 	mov	r17,r6
 8138f3c:	0401ffc4 	movi	r16,2047
 8138f40:	003df506 	br	8138718 <__alt_data_end+0xfc138718>
 8138f44:	2807883a 	mov	r3,r5
 8138f48:	3023883a 	mov	r17,r6
 8138f4c:	003df206 	br	8138718 <__alt_data_end+0xfc138718>
 8138f50:	123ff804 	addi	r8,r2,-32
 8138f54:	01000804 	movi	r4,32
 8138f58:	1a10d83a 	srl	r8,r3,r8
 8138f5c:	11000a26 	beq	r2,r4,8138f88 <__subdf3+0x8f4>
 8138f60:	01001004 	movi	r4,64
 8138f64:	2085c83a 	sub	r2,r4,r2
 8138f68:	1884983a 	sll	r2,r3,r2
 8138f6c:	1444b03a 	or	r2,r2,r17
 8138f70:	1004c03a 	cmpne	r2,r2,zero
 8138f74:	40a2b03a 	or	r17,r8,r2
 8138f78:	0005883a 	mov	r2,zero
 8138f7c:	003f8606 	br	8138d98 <__alt_data_end+0xfc138d98>
 8138f80:	0005883a 	mov	r2,zero
 8138f84:	003fdc06 	br	8138ef8 <__alt_data_end+0xfc138ef8>
 8138f88:	0005883a 	mov	r2,zero
 8138f8c:	003ff706 	br	8138f6c <__alt_data_end+0xfc138f6c>

08138f90 <__fixdfsi>:
 8138f90:	280cd53a 	srli	r6,r5,20
 8138f94:	00c00434 	movhi	r3,16
 8138f98:	18ffffc4 	addi	r3,r3,-1
 8138f9c:	3181ffcc 	andi	r6,r6,2047
 8138fa0:	01c0ff84 	movi	r7,1022
 8138fa4:	28c6703a 	and	r3,r5,r3
 8138fa8:	280ad7fa 	srli	r5,r5,31
 8138fac:	3980120e 	bge	r7,r6,8138ff8 <__fixdfsi+0x68>
 8138fb0:	00810744 	movi	r2,1053
 8138fb4:	11800c16 	blt	r2,r6,8138fe8 <__fixdfsi+0x58>
 8138fb8:	00810cc4 	movi	r2,1075
 8138fbc:	1185c83a 	sub	r2,r2,r6
 8138fc0:	01c007c4 	movi	r7,31
 8138fc4:	18c00434 	orhi	r3,r3,16
 8138fc8:	38800d16 	blt	r7,r2,8139000 <__fixdfsi+0x70>
 8138fcc:	31befb44 	addi	r6,r6,-1043
 8138fd0:	2084d83a 	srl	r2,r4,r2
 8138fd4:	1986983a 	sll	r3,r3,r6
 8138fd8:	1884b03a 	or	r2,r3,r2
 8138fdc:	28000726 	beq	r5,zero,8138ffc <__fixdfsi+0x6c>
 8138fe0:	0085c83a 	sub	r2,zero,r2
 8138fe4:	f800283a 	ret
 8138fe8:	00a00034 	movhi	r2,32768
 8138fec:	10bfffc4 	addi	r2,r2,-1
 8138ff0:	2885883a 	add	r2,r5,r2
 8138ff4:	f800283a 	ret
 8138ff8:	0005883a 	mov	r2,zero
 8138ffc:	f800283a 	ret
 8139000:	008104c4 	movi	r2,1043
 8139004:	1185c83a 	sub	r2,r2,r6
 8139008:	1884d83a 	srl	r2,r3,r2
 813900c:	003ff306 	br	8138fdc <__alt_data_end+0xfc138fdc>

08139010 <__floatsidf>:
 8139010:	defffd04 	addi	sp,sp,-12
 8139014:	dfc00215 	stw	ra,8(sp)
 8139018:	dc400115 	stw	r17,4(sp)
 813901c:	dc000015 	stw	r16,0(sp)
 8139020:	20002b26 	beq	r4,zero,81390d0 <__floatsidf+0xc0>
 8139024:	2023883a 	mov	r17,r4
 8139028:	2020d7fa 	srli	r16,r4,31
 813902c:	20002d16 	blt	r4,zero,81390e4 <__floatsidf+0xd4>
 8139030:	8809883a 	mov	r4,r17
 8139034:	81391940 	call	8139194 <__clzsi2>
 8139038:	01410784 	movi	r5,1054
 813903c:	288bc83a 	sub	r5,r5,r2
 8139040:	01010cc4 	movi	r4,1075
 8139044:	2149c83a 	sub	r4,r4,r5
 8139048:	00c007c4 	movi	r3,31
 813904c:	1900160e 	bge	r3,r4,81390a8 <__floatsidf+0x98>
 8139050:	00c104c4 	movi	r3,1043
 8139054:	1947c83a 	sub	r3,r3,r5
 8139058:	88c6983a 	sll	r3,r17,r3
 813905c:	00800434 	movhi	r2,16
 8139060:	10bfffc4 	addi	r2,r2,-1
 8139064:	1886703a 	and	r3,r3,r2
 8139068:	2941ffcc 	andi	r5,r5,2047
 813906c:	800d883a 	mov	r6,r16
 8139070:	0005883a 	mov	r2,zero
 8139074:	280a953a 	slli	r5,r5,20
 8139078:	31803fcc 	andi	r6,r6,255
 813907c:	01000434 	movhi	r4,16
 8139080:	300c97fa 	slli	r6,r6,31
 8139084:	213fffc4 	addi	r4,r4,-1
 8139088:	1906703a 	and	r3,r3,r4
 813908c:	1946b03a 	or	r3,r3,r5
 8139090:	1986b03a 	or	r3,r3,r6
 8139094:	dfc00217 	ldw	ra,8(sp)
 8139098:	dc400117 	ldw	r17,4(sp)
 813909c:	dc000017 	ldw	r16,0(sp)
 81390a0:	dec00304 	addi	sp,sp,12
 81390a4:	f800283a 	ret
 81390a8:	00c002c4 	movi	r3,11
 81390ac:	1887c83a 	sub	r3,r3,r2
 81390b0:	88c6d83a 	srl	r3,r17,r3
 81390b4:	8904983a 	sll	r2,r17,r4
 81390b8:	01000434 	movhi	r4,16
 81390bc:	213fffc4 	addi	r4,r4,-1
 81390c0:	2941ffcc 	andi	r5,r5,2047
 81390c4:	1906703a 	and	r3,r3,r4
 81390c8:	800d883a 	mov	r6,r16
 81390cc:	003fe906 	br	8139074 <__alt_data_end+0xfc139074>
 81390d0:	000d883a 	mov	r6,zero
 81390d4:	000b883a 	mov	r5,zero
 81390d8:	0007883a 	mov	r3,zero
 81390dc:	0005883a 	mov	r2,zero
 81390e0:	003fe406 	br	8139074 <__alt_data_end+0xfc139074>
 81390e4:	0123c83a 	sub	r17,zero,r4
 81390e8:	003fd106 	br	8139030 <__alt_data_end+0xfc139030>

081390ec <__floatunsidf>:
 81390ec:	defffe04 	addi	sp,sp,-8
 81390f0:	dc000015 	stw	r16,0(sp)
 81390f4:	dfc00115 	stw	ra,4(sp)
 81390f8:	2021883a 	mov	r16,r4
 81390fc:	20002226 	beq	r4,zero,8139188 <__floatunsidf+0x9c>
 8139100:	81391940 	call	8139194 <__clzsi2>
 8139104:	01010784 	movi	r4,1054
 8139108:	2089c83a 	sub	r4,r4,r2
 813910c:	01810cc4 	movi	r6,1075
 8139110:	310dc83a 	sub	r6,r6,r4
 8139114:	00c007c4 	movi	r3,31
 8139118:	1980120e 	bge	r3,r6,8139164 <__floatunsidf+0x78>
 813911c:	00c104c4 	movi	r3,1043
 8139120:	1907c83a 	sub	r3,r3,r4
 8139124:	80ca983a 	sll	r5,r16,r3
 8139128:	00800434 	movhi	r2,16
 813912c:	10bfffc4 	addi	r2,r2,-1
 8139130:	2101ffcc 	andi	r4,r4,2047
 8139134:	0021883a 	mov	r16,zero
 8139138:	288a703a 	and	r5,r5,r2
 813913c:	2008953a 	slli	r4,r4,20
 8139140:	00c00434 	movhi	r3,16
 8139144:	18ffffc4 	addi	r3,r3,-1
 8139148:	28c6703a 	and	r3,r5,r3
 813914c:	8005883a 	mov	r2,r16
 8139150:	1906b03a 	or	r3,r3,r4
 8139154:	dfc00117 	ldw	ra,4(sp)
 8139158:	dc000017 	ldw	r16,0(sp)
 813915c:	dec00204 	addi	sp,sp,8
 8139160:	f800283a 	ret
 8139164:	00c002c4 	movi	r3,11
 8139168:	188bc83a 	sub	r5,r3,r2
 813916c:	814ad83a 	srl	r5,r16,r5
 8139170:	00c00434 	movhi	r3,16
 8139174:	18ffffc4 	addi	r3,r3,-1
 8139178:	81a0983a 	sll	r16,r16,r6
 813917c:	2101ffcc 	andi	r4,r4,2047
 8139180:	28ca703a 	and	r5,r5,r3
 8139184:	003fed06 	br	813913c <__alt_data_end+0xfc13913c>
 8139188:	0009883a 	mov	r4,zero
 813918c:	000b883a 	mov	r5,zero
 8139190:	003fea06 	br	813913c <__alt_data_end+0xfc13913c>

08139194 <__clzsi2>:
 8139194:	00bfffd4 	movui	r2,65535
 8139198:	11000536 	bltu	r2,r4,81391b0 <__clzsi2+0x1c>
 813919c:	00803fc4 	movi	r2,255
 81391a0:	11000f36 	bltu	r2,r4,81391e0 <__clzsi2+0x4c>
 81391a4:	00800804 	movi	r2,32
 81391a8:	0007883a 	mov	r3,zero
 81391ac:	00000506 	br	81391c4 <__clzsi2+0x30>
 81391b0:	00804034 	movhi	r2,256
 81391b4:	10bfffc4 	addi	r2,r2,-1
 81391b8:	11000c2e 	bgeu	r2,r4,81391ec <__clzsi2+0x58>
 81391bc:	00800204 	movi	r2,8
 81391c0:	00c00604 	movi	r3,24
 81391c4:	20c8d83a 	srl	r4,r4,r3
 81391c8:	00c20534 	movhi	r3,2068
 81391cc:	18ef4104 	addi	r3,r3,-17148
 81391d0:	1909883a 	add	r4,r3,r4
 81391d4:	20c00003 	ldbu	r3,0(r4)
 81391d8:	10c5c83a 	sub	r2,r2,r3
 81391dc:	f800283a 	ret
 81391e0:	00800604 	movi	r2,24
 81391e4:	00c00204 	movi	r3,8
 81391e8:	003ff606 	br	81391c4 <__alt_data_end+0xfc1391c4>
 81391ec:	00800404 	movi	r2,16
 81391f0:	1007883a 	mov	r3,r2
 81391f4:	003ff306 	br	81391c4 <__alt_data_end+0xfc1391c4>

081391f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 81391f8:	defffe04 	addi	sp,sp,-8
 81391fc:	dfc00115 	stw	ra,4(sp)
 8139200:	df000015 	stw	fp,0(sp)
 8139204:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8139208:	d0a00d17 	ldw	r2,-32716(gp)
 813920c:	10000326 	beq	r2,zero,813921c <alt_get_errno+0x24>
 8139210:	d0a00d17 	ldw	r2,-32716(gp)
 8139214:	103ee83a 	callr	r2
 8139218:	00000106 	br	8139220 <alt_get_errno+0x28>
 813921c:	d0a6d504 	addi	r2,gp,-25772
}
 8139220:	e037883a 	mov	sp,fp
 8139224:	dfc00117 	ldw	ra,4(sp)
 8139228:	df000017 	ldw	fp,0(sp)
 813922c:	dec00204 	addi	sp,sp,8
 8139230:	f800283a 	ret

08139234 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 8139234:	defffb04 	addi	sp,sp,-20
 8139238:	dfc00415 	stw	ra,16(sp)
 813923c:	df000315 	stw	fp,12(sp)
 8139240:	df000304 	addi	fp,sp,12
 8139244:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 8139248:	e0bfff17 	ldw	r2,-4(fp)
 813924c:	10000816 	blt	r2,zero,8139270 <close+0x3c>
 8139250:	01400304 	movi	r5,12
 8139254:	e13fff17 	ldw	r4,-4(fp)
 8139258:	812c2b80 	call	812c2b8 <__mulsi3>
 813925c:	1007883a 	mov	r3,r2
 8139260:	00820534 	movhi	r2,2068
 8139264:	10b1c104 	addi	r2,r2,-14588
 8139268:	1885883a 	add	r2,r3,r2
 813926c:	00000106 	br	8139274 <close+0x40>
 8139270:	0005883a 	mov	r2,zero
 8139274:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 8139278:	e0bffd17 	ldw	r2,-12(fp)
 813927c:	10001926 	beq	r2,zero,81392e4 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 8139280:	e0bffd17 	ldw	r2,-12(fp)
 8139284:	10800017 	ldw	r2,0(r2)
 8139288:	10800417 	ldw	r2,16(r2)
 813928c:	10000626 	beq	r2,zero,81392a8 <close+0x74>
 8139290:	e0bffd17 	ldw	r2,-12(fp)
 8139294:	10800017 	ldw	r2,0(r2)
 8139298:	10800417 	ldw	r2,16(r2)
 813929c:	e13ffd17 	ldw	r4,-12(fp)
 81392a0:	103ee83a 	callr	r2
 81392a4:	00000106 	br	81392ac <close+0x78>
 81392a8:	0005883a 	mov	r2,zero
 81392ac:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 81392b0:	e13fff17 	ldw	r4,-4(fp)
 81392b4:	813991c0 	call	813991c <alt_release_fd>
    if (rval < 0)
 81392b8:	e0bffe17 	ldw	r2,-8(fp)
 81392bc:	1000070e 	bge	r2,zero,81392dc <close+0xa8>
    {
      ALT_ERRNO = -rval;
 81392c0:	81391f80 	call	81391f8 <alt_get_errno>
 81392c4:	1007883a 	mov	r3,r2
 81392c8:	e0bffe17 	ldw	r2,-8(fp)
 81392cc:	0085c83a 	sub	r2,zero,r2
 81392d0:	18800015 	stw	r2,0(r3)
      return -1;
 81392d4:	00bfffc4 	movi	r2,-1
 81392d8:	00000706 	br	81392f8 <close+0xc4>
    }
    return 0;
 81392dc:	0005883a 	mov	r2,zero
 81392e0:	00000506 	br	81392f8 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 81392e4:	81391f80 	call	81391f8 <alt_get_errno>
 81392e8:	1007883a 	mov	r3,r2
 81392ec:	00801444 	movi	r2,81
 81392f0:	18800015 	stw	r2,0(r3)
    return -1;
 81392f4:	00bfffc4 	movi	r2,-1
  }
}
 81392f8:	e037883a 	mov	sp,fp
 81392fc:	dfc00117 	ldw	ra,4(sp)
 8139300:	df000017 	ldw	fp,0(sp)
 8139304:	dec00204 	addi	sp,sp,8
 8139308:	f800283a 	ret

0813930c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 813930c:	defffc04 	addi	sp,sp,-16
 8139310:	df000315 	stw	fp,12(sp)
 8139314:	df000304 	addi	fp,sp,12
 8139318:	e13ffd15 	stw	r4,-12(fp)
 813931c:	e17ffe15 	stw	r5,-8(fp)
 8139320:	e1bfff15 	stw	r6,-4(fp)
  return len;
 8139324:	e0bfff17 	ldw	r2,-4(fp)
}
 8139328:	e037883a 	mov	sp,fp
 813932c:	df000017 	ldw	fp,0(sp)
 8139330:	dec00104 	addi	sp,sp,4
 8139334:	f800283a 	ret

08139338 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8139338:	defffe04 	addi	sp,sp,-8
 813933c:	dfc00115 	stw	ra,4(sp)
 8139340:	df000015 	stw	fp,0(sp)
 8139344:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8139348:	d0a00d17 	ldw	r2,-32716(gp)
 813934c:	10000326 	beq	r2,zero,813935c <alt_get_errno+0x24>
 8139350:	d0a00d17 	ldw	r2,-32716(gp)
 8139354:	103ee83a 	callr	r2
 8139358:	00000106 	br	8139360 <alt_get_errno+0x28>
 813935c:	d0a6d504 	addi	r2,gp,-25772
}
 8139360:	e037883a 	mov	sp,fp
 8139364:	dfc00117 	ldw	ra,4(sp)
 8139368:	df000017 	ldw	fp,0(sp)
 813936c:	dec00204 	addi	sp,sp,8
 8139370:	f800283a 	ret

08139374 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 8139374:	defffb04 	addi	sp,sp,-20
 8139378:	dfc00415 	stw	ra,16(sp)
 813937c:	df000315 	stw	fp,12(sp)
 8139380:	df000304 	addi	fp,sp,12
 8139384:	e13ffe15 	stw	r4,-8(fp)
 8139388:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 813938c:	e0bffe17 	ldw	r2,-8(fp)
 8139390:	10000816 	blt	r2,zero,81393b4 <fstat+0x40>
 8139394:	01400304 	movi	r5,12
 8139398:	e13ffe17 	ldw	r4,-8(fp)
 813939c:	812c2b80 	call	812c2b8 <__mulsi3>
 81393a0:	1007883a 	mov	r3,r2
 81393a4:	00820534 	movhi	r2,2068
 81393a8:	10b1c104 	addi	r2,r2,-14588
 81393ac:	1885883a 	add	r2,r3,r2
 81393b0:	00000106 	br	81393b8 <fstat+0x44>
 81393b4:	0005883a 	mov	r2,zero
 81393b8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 81393bc:	e0bffd17 	ldw	r2,-12(fp)
 81393c0:	10001026 	beq	r2,zero,8139404 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 81393c4:	e0bffd17 	ldw	r2,-12(fp)
 81393c8:	10800017 	ldw	r2,0(r2)
 81393cc:	10800817 	ldw	r2,32(r2)
 81393d0:	10000726 	beq	r2,zero,81393f0 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 81393d4:	e0bffd17 	ldw	r2,-12(fp)
 81393d8:	10800017 	ldw	r2,0(r2)
 81393dc:	10800817 	ldw	r2,32(r2)
 81393e0:	e17fff17 	ldw	r5,-4(fp)
 81393e4:	e13ffd17 	ldw	r4,-12(fp)
 81393e8:	103ee83a 	callr	r2
 81393ec:	00000a06 	br	8139418 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 81393f0:	e0bfff17 	ldw	r2,-4(fp)
 81393f4:	00c80004 	movi	r3,8192
 81393f8:	10c00115 	stw	r3,4(r2)
      return 0;
 81393fc:	0005883a 	mov	r2,zero
 8139400:	00000506 	br	8139418 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8139404:	81393380 	call	8139338 <alt_get_errno>
 8139408:	1007883a 	mov	r3,r2
 813940c:	00801444 	movi	r2,81
 8139410:	18800015 	stw	r2,0(r3)
    return -1;
 8139414:	00bfffc4 	movi	r2,-1
  }
}
 8139418:	e037883a 	mov	sp,fp
 813941c:	dfc00117 	ldw	ra,4(sp)
 8139420:	df000017 	ldw	fp,0(sp)
 8139424:	dec00204 	addi	sp,sp,8
 8139428:	f800283a 	ret

0813942c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 813942c:	defffe04 	addi	sp,sp,-8
 8139430:	dfc00115 	stw	ra,4(sp)
 8139434:	df000015 	stw	fp,0(sp)
 8139438:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 813943c:	d0a00d17 	ldw	r2,-32716(gp)
 8139440:	10000326 	beq	r2,zero,8139450 <alt_get_errno+0x24>
 8139444:	d0a00d17 	ldw	r2,-32716(gp)
 8139448:	103ee83a 	callr	r2
 813944c:	00000106 	br	8139454 <alt_get_errno+0x28>
 8139450:	d0a6d504 	addi	r2,gp,-25772
}
 8139454:	e037883a 	mov	sp,fp
 8139458:	dfc00117 	ldw	ra,4(sp)
 813945c:	df000017 	ldw	fp,0(sp)
 8139460:	dec00204 	addi	sp,sp,8
 8139464:	f800283a 	ret

08139468 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 8139468:	deffed04 	addi	sp,sp,-76
 813946c:	dfc01215 	stw	ra,72(sp)
 8139470:	df001115 	stw	fp,68(sp)
 8139474:	df001104 	addi	fp,sp,68
 8139478:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 813947c:	e0bfff17 	ldw	r2,-4(fp)
 8139480:	10000816 	blt	r2,zero,81394a4 <isatty+0x3c>
 8139484:	01400304 	movi	r5,12
 8139488:	e13fff17 	ldw	r4,-4(fp)
 813948c:	812c2b80 	call	812c2b8 <__mulsi3>
 8139490:	1007883a 	mov	r3,r2
 8139494:	00820534 	movhi	r2,2068
 8139498:	10b1c104 	addi	r2,r2,-14588
 813949c:	1885883a 	add	r2,r3,r2
 81394a0:	00000106 	br	81394a8 <isatty+0x40>
 81394a4:	0005883a 	mov	r2,zero
 81394a8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 81394ac:	e0bfef17 	ldw	r2,-68(fp)
 81394b0:	10000e26 	beq	r2,zero,81394ec <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 81394b4:	e0bfef17 	ldw	r2,-68(fp)
 81394b8:	10800017 	ldw	r2,0(r2)
 81394bc:	10800817 	ldw	r2,32(r2)
 81394c0:	1000021e 	bne	r2,zero,81394cc <isatty+0x64>
    {
      return 1;
 81394c4:	00800044 	movi	r2,1
 81394c8:	00000d06 	br	8139500 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 81394cc:	e0bff004 	addi	r2,fp,-64
 81394d0:	100b883a 	mov	r5,r2
 81394d4:	e13fff17 	ldw	r4,-4(fp)
 81394d8:	81393740 	call	8139374 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 81394dc:	e0bff117 	ldw	r2,-60(fp)
 81394e0:	10880020 	cmpeqi	r2,r2,8192
 81394e4:	10803fcc 	andi	r2,r2,255
 81394e8:	00000506 	br	8139500 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 81394ec:	813942c0 	call	813942c <alt_get_errno>
 81394f0:	1007883a 	mov	r3,r2
 81394f4:	00801444 	movi	r2,81
 81394f8:	18800015 	stw	r2,0(r3)
    return 0;
 81394fc:	0005883a 	mov	r2,zero
  }
}
 8139500:	e037883a 	mov	sp,fp
 8139504:	dfc00117 	ldw	ra,4(sp)
 8139508:	df000017 	ldw	fp,0(sp)
 813950c:	dec00204 	addi	sp,sp,8
 8139510:	f800283a 	ret

08139514 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 8139514:	defffc04 	addi	sp,sp,-16
 8139518:	df000315 	stw	fp,12(sp)
 813951c:	df000304 	addi	fp,sp,12
 8139520:	e13ffd15 	stw	r4,-12(fp)
 8139524:	e17ffe15 	stw	r5,-8(fp)
 8139528:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 813952c:	e0fffe17 	ldw	r3,-8(fp)
 8139530:	e0bffd17 	ldw	r2,-12(fp)
 8139534:	18800c26 	beq	r3,r2,8139568 <alt_load_section+0x54>
  {
    while( to != end )
 8139538:	00000806 	br	813955c <alt_load_section+0x48>
    {
      *to++ = *from++;
 813953c:	e0bffe17 	ldw	r2,-8(fp)
 8139540:	10c00104 	addi	r3,r2,4
 8139544:	e0fffe15 	stw	r3,-8(fp)
 8139548:	e0fffd17 	ldw	r3,-12(fp)
 813954c:	19000104 	addi	r4,r3,4
 8139550:	e13ffd15 	stw	r4,-12(fp)
 8139554:	18c00017 	ldw	r3,0(r3)
 8139558:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 813955c:	e0fffe17 	ldw	r3,-8(fp)
 8139560:	e0bfff17 	ldw	r2,-4(fp)
 8139564:	18bff51e 	bne	r3,r2,813953c <__alt_data_end+0xfc13953c>
    {
      *to++ = *from++;
    }
  }
}
 8139568:	0001883a 	nop
 813956c:	e037883a 	mov	sp,fp
 8139570:	df000017 	ldw	fp,0(sp)
 8139574:	dec00104 	addi	sp,sp,4
 8139578:	f800283a 	ret

0813957c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 813957c:	defffe04 	addi	sp,sp,-8
 8139580:	dfc00115 	stw	ra,4(sp)
 8139584:	df000015 	stw	fp,0(sp)
 8139588:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 813958c:	01820534 	movhi	r6,2068
 8139590:	31b64b04 	addi	r6,r6,-9940
 8139594:	01420534 	movhi	r5,2068
 8139598:	296f8e04 	addi	r5,r5,-16840
 813959c:	01020534 	movhi	r4,2068
 81395a0:	21364b04 	addi	r4,r4,-9940
 81395a4:	81395140 	call	8139514 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 81395a8:	01800034 	movhi	r6,0
 81395ac:	31808c04 	addi	r6,r6,560
 81395b0:	01400034 	movhi	r5,0
 81395b4:	29400804 	addi	r5,r5,32
 81395b8:	01000034 	movhi	r4,0
 81395bc:	21000804 	addi	r4,r4,32
 81395c0:	81395140 	call	8139514 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 81395c4:	01820534 	movhi	r6,2068
 81395c8:	31af8e04 	addi	r6,r6,-16840
 81395cc:	01420534 	movhi	r5,2068
 81395d0:	296ec904 	addi	r5,r5,-17628
 81395d4:	01020534 	movhi	r4,2068
 81395d8:	212ec904 	addi	r4,r4,-17628
 81395dc:	81395140 	call	8139514 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 81395e0:	813aa6c0 	call	813aa6c <alt_dcache_flush_all>
  alt_icache_flush_all();
 81395e4:	813ac2c0 	call	813ac2c <alt_icache_flush_all>
}
 81395e8:	0001883a 	nop
 81395ec:	e037883a 	mov	sp,fp
 81395f0:	dfc00117 	ldw	ra,4(sp)
 81395f4:	df000017 	ldw	fp,0(sp)
 81395f8:	dec00204 	addi	sp,sp,8
 81395fc:	f800283a 	ret

08139600 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8139600:	defffe04 	addi	sp,sp,-8
 8139604:	dfc00115 	stw	ra,4(sp)
 8139608:	df000015 	stw	fp,0(sp)
 813960c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8139610:	d0a00d17 	ldw	r2,-32716(gp)
 8139614:	10000326 	beq	r2,zero,8139624 <alt_get_errno+0x24>
 8139618:	d0a00d17 	ldw	r2,-32716(gp)
 813961c:	103ee83a 	callr	r2
 8139620:	00000106 	br	8139628 <alt_get_errno+0x28>
 8139624:	d0a6d504 	addi	r2,gp,-25772
}
 8139628:	e037883a 	mov	sp,fp
 813962c:	dfc00117 	ldw	ra,4(sp)
 8139630:	df000017 	ldw	fp,0(sp)
 8139634:	dec00204 	addi	sp,sp,8
 8139638:	f800283a 	ret

0813963c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 813963c:	defff904 	addi	sp,sp,-28
 8139640:	dfc00615 	stw	ra,24(sp)
 8139644:	df000515 	stw	fp,20(sp)
 8139648:	df000504 	addi	fp,sp,20
 813964c:	e13ffd15 	stw	r4,-12(fp)
 8139650:	e17ffe15 	stw	r5,-8(fp)
 8139654:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 8139658:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 813965c:	e0bffd17 	ldw	r2,-12(fp)
 8139660:	10000816 	blt	r2,zero,8139684 <lseek+0x48>
 8139664:	01400304 	movi	r5,12
 8139668:	e13ffd17 	ldw	r4,-12(fp)
 813966c:	812c2b80 	call	812c2b8 <__mulsi3>
 8139670:	1007883a 	mov	r3,r2
 8139674:	00820534 	movhi	r2,2068
 8139678:	10b1c104 	addi	r2,r2,-14588
 813967c:	1885883a 	add	r2,r3,r2
 8139680:	00000106 	br	8139688 <lseek+0x4c>
 8139684:	0005883a 	mov	r2,zero
 8139688:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 813968c:	e0bffc17 	ldw	r2,-16(fp)
 8139690:	10001026 	beq	r2,zero,81396d4 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 8139694:	e0bffc17 	ldw	r2,-16(fp)
 8139698:	10800017 	ldw	r2,0(r2)
 813969c:	10800717 	ldw	r2,28(r2)
 81396a0:	10000926 	beq	r2,zero,81396c8 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 81396a4:	e0bffc17 	ldw	r2,-16(fp)
 81396a8:	10800017 	ldw	r2,0(r2)
 81396ac:	10800717 	ldw	r2,28(r2)
 81396b0:	e1bfff17 	ldw	r6,-4(fp)
 81396b4:	e17ffe17 	ldw	r5,-8(fp)
 81396b8:	e13ffc17 	ldw	r4,-16(fp)
 81396bc:	103ee83a 	callr	r2
 81396c0:	e0bffb15 	stw	r2,-20(fp)
 81396c4:	00000506 	br	81396dc <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 81396c8:	00bfde84 	movi	r2,-134
 81396cc:	e0bffb15 	stw	r2,-20(fp)
 81396d0:	00000206 	br	81396dc <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 81396d4:	00bfebc4 	movi	r2,-81
 81396d8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 81396dc:	e0bffb17 	ldw	r2,-20(fp)
 81396e0:	1000070e 	bge	r2,zero,8139700 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 81396e4:	81396000 	call	8139600 <alt_get_errno>
 81396e8:	1007883a 	mov	r3,r2
 81396ec:	e0bffb17 	ldw	r2,-20(fp)
 81396f0:	0085c83a 	sub	r2,zero,r2
 81396f4:	18800015 	stw	r2,0(r3)
    rc = -1;
 81396f8:	00bfffc4 	movi	r2,-1
 81396fc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 8139700:	e0bffb17 	ldw	r2,-20(fp)
}
 8139704:	e037883a 	mov	sp,fp
 8139708:	dfc00117 	ldw	ra,4(sp)
 813970c:	df000017 	ldw	fp,0(sp)
 8139710:	dec00204 	addi	sp,sp,8
 8139714:	f800283a 	ret

08139718 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 8139718:	defffd04 	addi	sp,sp,-12
 813971c:	dfc00215 	stw	ra,8(sp)
 8139720:	df000115 	stw	fp,4(sp)
 8139724:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 8139728:	0009883a 	mov	r4,zero
 813972c:	8139bf00 	call	8139bf0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 8139730:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 8139734:	8139c280 	call	8139c28 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 8139738:	01820534 	movhi	r6,2068
 813973c:	31af8404 	addi	r6,r6,-16880
 8139740:	01420534 	movhi	r5,2068
 8139744:	296f8404 	addi	r5,r5,-16880
 8139748:	01020534 	movhi	r4,2068
 813974c:	212f8404 	addi	r4,r4,-16880
 8139750:	813afd00 	call	813afd0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 8139754:	813ab6c0 	call	813ab6c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 8139758:	01020534 	movhi	r4,2068
 813975c:	212af304 	addi	r4,r4,-21556
 8139760:	813b7900 	call	813b790 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 8139764:	d0a6d617 	ldw	r2,-25768(gp)
 8139768:	d0e6d717 	ldw	r3,-25764(gp)
 813976c:	d126d817 	ldw	r4,-25760(gp)
 8139770:	200d883a 	mov	r6,r4
 8139774:	180b883a 	mov	r5,r3
 8139778:	1009883a 	mov	r4,r2
 813977c:	800003c0 	call	800003c <main>
 8139780:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 8139784:	01000044 	movi	r4,1
 8139788:	81392340 	call	8139234 <close>
  exit (result);
 813978c:	e13fff17 	ldw	r4,-4(fp)
 8139790:	813b7a40 	call	813b7a4 <exit>

08139794 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 8139794:	defffe04 	addi	sp,sp,-8
 8139798:	df000115 	stw	fp,4(sp)
 813979c:	df000104 	addi	fp,sp,4
 81397a0:	e13fff15 	stw	r4,-4(fp)
}
 81397a4:	0001883a 	nop
 81397a8:	e037883a 	mov	sp,fp
 81397ac:	df000017 	ldw	fp,0(sp)
 81397b0:	dec00104 	addi	sp,sp,4
 81397b4:	f800283a 	ret

081397b8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 81397b8:	defffe04 	addi	sp,sp,-8
 81397bc:	df000115 	stw	fp,4(sp)
 81397c0:	df000104 	addi	fp,sp,4
 81397c4:	e13fff15 	stw	r4,-4(fp)
}
 81397c8:	0001883a 	nop
 81397cc:	e037883a 	mov	sp,fp
 81397d0:	df000017 	ldw	fp,0(sp)
 81397d4:	dec00104 	addi	sp,sp,4
 81397d8:	f800283a 	ret

081397dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 81397dc:	defffe04 	addi	sp,sp,-8
 81397e0:	dfc00115 	stw	ra,4(sp)
 81397e4:	df000015 	stw	fp,0(sp)
 81397e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 81397ec:	d0a00d17 	ldw	r2,-32716(gp)
 81397f0:	10000326 	beq	r2,zero,8139800 <alt_get_errno+0x24>
 81397f4:	d0a00d17 	ldw	r2,-32716(gp)
 81397f8:	103ee83a 	callr	r2
 81397fc:	00000106 	br	8139804 <alt_get_errno+0x28>
 8139800:	d0a6d504 	addi	r2,gp,-25772
}
 8139804:	e037883a 	mov	sp,fp
 8139808:	dfc00117 	ldw	ra,4(sp)
 813980c:	df000017 	ldw	fp,0(sp)
 8139810:	dec00204 	addi	sp,sp,8
 8139814:	f800283a 	ret

08139818 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 8139818:	defff904 	addi	sp,sp,-28
 813981c:	dfc00615 	stw	ra,24(sp)
 8139820:	df000515 	stw	fp,20(sp)
 8139824:	df000504 	addi	fp,sp,20
 8139828:	e13ffd15 	stw	r4,-12(fp)
 813982c:	e17ffe15 	stw	r5,-8(fp)
 8139830:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8139834:	e0bffd17 	ldw	r2,-12(fp)
 8139838:	10000816 	blt	r2,zero,813985c <read+0x44>
 813983c:	01400304 	movi	r5,12
 8139840:	e13ffd17 	ldw	r4,-12(fp)
 8139844:	812c2b80 	call	812c2b8 <__mulsi3>
 8139848:	1007883a 	mov	r3,r2
 813984c:	00820534 	movhi	r2,2068
 8139850:	10b1c104 	addi	r2,r2,-14588
 8139854:	1885883a 	add	r2,r3,r2
 8139858:	00000106 	br	8139860 <read+0x48>
 813985c:	0005883a 	mov	r2,zero
 8139860:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8139864:	e0bffb17 	ldw	r2,-20(fp)
 8139868:	10002226 	beq	r2,zero,81398f4 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 813986c:	e0bffb17 	ldw	r2,-20(fp)
 8139870:	10800217 	ldw	r2,8(r2)
 8139874:	108000cc 	andi	r2,r2,3
 8139878:	10800060 	cmpeqi	r2,r2,1
 813987c:	1000181e 	bne	r2,zero,81398e0 <read+0xc8>
        (fd->dev->read))
 8139880:	e0bffb17 	ldw	r2,-20(fp)
 8139884:	10800017 	ldw	r2,0(r2)
 8139888:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 813988c:	10001426 	beq	r2,zero,81398e0 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 8139890:	e0bffb17 	ldw	r2,-20(fp)
 8139894:	10800017 	ldw	r2,0(r2)
 8139898:	10800517 	ldw	r2,20(r2)
 813989c:	e0ffff17 	ldw	r3,-4(fp)
 81398a0:	180d883a 	mov	r6,r3
 81398a4:	e17ffe17 	ldw	r5,-8(fp)
 81398a8:	e13ffb17 	ldw	r4,-20(fp)
 81398ac:	103ee83a 	callr	r2
 81398b0:	e0bffc15 	stw	r2,-16(fp)
 81398b4:	e0bffc17 	ldw	r2,-16(fp)
 81398b8:	1000070e 	bge	r2,zero,81398d8 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 81398bc:	81397dc0 	call	81397dc <alt_get_errno>
 81398c0:	1007883a 	mov	r3,r2
 81398c4:	e0bffc17 	ldw	r2,-16(fp)
 81398c8:	0085c83a 	sub	r2,zero,r2
 81398cc:	18800015 	stw	r2,0(r3)
          return -1;
 81398d0:	00bfffc4 	movi	r2,-1
 81398d4:	00000c06 	br	8139908 <read+0xf0>
        }
        return rval;
 81398d8:	e0bffc17 	ldw	r2,-16(fp)
 81398dc:	00000a06 	br	8139908 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 81398e0:	81397dc0 	call	81397dc <alt_get_errno>
 81398e4:	1007883a 	mov	r3,r2
 81398e8:	00800344 	movi	r2,13
 81398ec:	18800015 	stw	r2,0(r3)
 81398f0:	00000406 	br	8139904 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 81398f4:	81397dc0 	call	81397dc <alt_get_errno>
 81398f8:	1007883a 	mov	r3,r2
 81398fc:	00801444 	movi	r2,81
 8139900:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8139904:	00bfffc4 	movi	r2,-1
}
 8139908:	e037883a 	mov	sp,fp
 813990c:	dfc00117 	ldw	ra,4(sp)
 8139910:	df000017 	ldw	fp,0(sp)
 8139914:	dec00204 	addi	sp,sp,8
 8139918:	f800283a 	ret

0813991c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 813991c:	defffc04 	addi	sp,sp,-16
 8139920:	dfc00315 	stw	ra,12(sp)
 8139924:	df000215 	stw	fp,8(sp)
 8139928:	dc000115 	stw	r16,4(sp)
 813992c:	df000204 	addi	fp,sp,8
 8139930:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 8139934:	e0bffe17 	ldw	r2,-8(fp)
 8139938:	108000d0 	cmplti	r2,r2,3
 813993c:	1000111e 	bne	r2,zero,8139984 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 8139940:	04020534 	movhi	r16,2068
 8139944:	8431c104 	addi	r16,r16,-14588
 8139948:	e0bffe17 	ldw	r2,-8(fp)
 813994c:	01400304 	movi	r5,12
 8139950:	1009883a 	mov	r4,r2
 8139954:	812c2b80 	call	812c2b8 <__mulsi3>
 8139958:	8085883a 	add	r2,r16,r2
 813995c:	10800204 	addi	r2,r2,8
 8139960:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 8139964:	04020534 	movhi	r16,2068
 8139968:	8431c104 	addi	r16,r16,-14588
 813996c:	e0bffe17 	ldw	r2,-8(fp)
 8139970:	01400304 	movi	r5,12
 8139974:	1009883a 	mov	r4,r2
 8139978:	812c2b80 	call	812c2b8 <__mulsi3>
 813997c:	8085883a 	add	r2,r16,r2
 8139980:	10000015 	stw	zero,0(r2)
  }
}
 8139984:	0001883a 	nop
 8139988:	e6ffff04 	addi	sp,fp,-4
 813998c:	dfc00217 	ldw	ra,8(sp)
 8139990:	df000117 	ldw	fp,4(sp)
 8139994:	dc000017 	ldw	r16,0(sp)
 8139998:	dec00304 	addi	sp,sp,12
 813999c:	f800283a 	ret

081399a0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 81399a0:	defff904 	addi	sp,sp,-28
 81399a4:	df000615 	stw	fp,24(sp)
 81399a8:	df000604 	addi	fp,sp,24
 81399ac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 81399b0:	0005303a 	rdctl	r2,status
 81399b4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 81399b8:	e0fffe17 	ldw	r3,-8(fp)
 81399bc:	00bfff84 	movi	r2,-2
 81399c0:	1884703a 	and	r2,r3,r2
 81399c4:	1001703a 	wrctl	status,r2
  
  return context;
 81399c8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 81399cc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 81399d0:	d0a00e17 	ldw	r2,-32712(gp)
 81399d4:	10c000c4 	addi	r3,r2,3
 81399d8:	00bfff04 	movi	r2,-4
 81399dc:	1884703a 	and	r2,r3,r2
 81399e0:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 81399e4:	d0e00e17 	ldw	r3,-32712(gp)
 81399e8:	e0bfff17 	ldw	r2,-4(fp)
 81399ec:	1887883a 	add	r3,r3,r2
 81399f0:	00830034 	movhi	r2,3072
 81399f4:	10800004 	addi	r2,r2,0
 81399f8:	10c0062e 	bgeu	r2,r3,8139a14 <sbrk+0x74>
 81399fc:	e0bffb17 	ldw	r2,-20(fp)
 8139a00:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8139a04:	e0bffa17 	ldw	r2,-24(fp)
 8139a08:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 8139a0c:	00bfffc4 	movi	r2,-1
 8139a10:	00000b06 	br	8139a40 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 8139a14:	d0a00e17 	ldw	r2,-32712(gp)
 8139a18:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 8139a1c:	d0e00e17 	ldw	r3,-32712(gp)
 8139a20:	e0bfff17 	ldw	r2,-4(fp)
 8139a24:	1885883a 	add	r2,r3,r2
 8139a28:	d0a00e15 	stw	r2,-32712(gp)
 8139a2c:	e0bffb17 	ldw	r2,-20(fp)
 8139a30:	e0bffc15 	stw	r2,-16(fp)
 8139a34:	e0bffc17 	ldw	r2,-16(fp)
 8139a38:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 8139a3c:	e0bffd17 	ldw	r2,-12(fp)
} 
 8139a40:	e037883a 	mov	sp,fp
 8139a44:	df000017 	ldw	fp,0(sp)
 8139a48:	dec00104 	addi	sp,sp,4
 8139a4c:	f800283a 	ret

08139a50 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 8139a50:	defffd04 	addi	sp,sp,-12
 8139a54:	dfc00215 	stw	ra,8(sp)
 8139a58:	df000115 	stw	fp,4(sp)
 8139a5c:	df000104 	addi	fp,sp,4
 8139a60:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 8139a64:	e13fff17 	ldw	r4,-4(fp)
 8139a68:	813a9140 	call	813a914 <alt_busy_sleep>
}
 8139a6c:	e037883a 	mov	sp,fp
 8139a70:	dfc00117 	ldw	ra,4(sp)
 8139a74:	df000017 	ldw	fp,0(sp)
 8139a78:	dec00204 	addi	sp,sp,8
 8139a7c:	f800283a 	ret

08139a80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8139a80:	defffe04 	addi	sp,sp,-8
 8139a84:	dfc00115 	stw	ra,4(sp)
 8139a88:	df000015 	stw	fp,0(sp)
 8139a8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8139a90:	d0a00d17 	ldw	r2,-32716(gp)
 8139a94:	10000326 	beq	r2,zero,8139aa4 <alt_get_errno+0x24>
 8139a98:	d0a00d17 	ldw	r2,-32716(gp)
 8139a9c:	103ee83a 	callr	r2
 8139aa0:	00000106 	br	8139aa8 <alt_get_errno+0x28>
 8139aa4:	d0a6d504 	addi	r2,gp,-25772
}
 8139aa8:	e037883a 	mov	sp,fp
 8139aac:	dfc00117 	ldw	ra,4(sp)
 8139ab0:	df000017 	ldw	fp,0(sp)
 8139ab4:	dec00204 	addi	sp,sp,8
 8139ab8:	f800283a 	ret

08139abc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 8139abc:	defff904 	addi	sp,sp,-28
 8139ac0:	dfc00615 	stw	ra,24(sp)
 8139ac4:	df000515 	stw	fp,20(sp)
 8139ac8:	df000504 	addi	fp,sp,20
 8139acc:	e13ffd15 	stw	r4,-12(fp)
 8139ad0:	e17ffe15 	stw	r5,-8(fp)
 8139ad4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8139ad8:	e0bffd17 	ldw	r2,-12(fp)
 8139adc:	10000816 	blt	r2,zero,8139b00 <write+0x44>
 8139ae0:	01400304 	movi	r5,12
 8139ae4:	e13ffd17 	ldw	r4,-12(fp)
 8139ae8:	812c2b80 	call	812c2b8 <__mulsi3>
 8139aec:	1007883a 	mov	r3,r2
 8139af0:	00820534 	movhi	r2,2068
 8139af4:	10b1c104 	addi	r2,r2,-14588
 8139af8:	1885883a 	add	r2,r3,r2
 8139afc:	00000106 	br	8139b04 <write+0x48>
 8139b00:	0005883a 	mov	r2,zero
 8139b04:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8139b08:	e0bffb17 	ldw	r2,-20(fp)
 8139b0c:	10002126 	beq	r2,zero,8139b94 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 8139b10:	e0bffb17 	ldw	r2,-20(fp)
 8139b14:	10800217 	ldw	r2,8(r2)
 8139b18:	108000cc 	andi	r2,r2,3
 8139b1c:	10001826 	beq	r2,zero,8139b80 <write+0xc4>
 8139b20:	e0bffb17 	ldw	r2,-20(fp)
 8139b24:	10800017 	ldw	r2,0(r2)
 8139b28:	10800617 	ldw	r2,24(r2)
 8139b2c:	10001426 	beq	r2,zero,8139b80 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 8139b30:	e0bffb17 	ldw	r2,-20(fp)
 8139b34:	10800017 	ldw	r2,0(r2)
 8139b38:	10800617 	ldw	r2,24(r2)
 8139b3c:	e0ffff17 	ldw	r3,-4(fp)
 8139b40:	180d883a 	mov	r6,r3
 8139b44:	e17ffe17 	ldw	r5,-8(fp)
 8139b48:	e13ffb17 	ldw	r4,-20(fp)
 8139b4c:	103ee83a 	callr	r2
 8139b50:	e0bffc15 	stw	r2,-16(fp)
 8139b54:	e0bffc17 	ldw	r2,-16(fp)
 8139b58:	1000070e 	bge	r2,zero,8139b78 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 8139b5c:	8139a800 	call	8139a80 <alt_get_errno>
 8139b60:	1007883a 	mov	r3,r2
 8139b64:	e0bffc17 	ldw	r2,-16(fp)
 8139b68:	0085c83a 	sub	r2,zero,r2
 8139b6c:	18800015 	stw	r2,0(r3)
        return -1;
 8139b70:	00bfffc4 	movi	r2,-1
 8139b74:	00000c06 	br	8139ba8 <write+0xec>
      }
      return rval;
 8139b78:	e0bffc17 	ldw	r2,-16(fp)
 8139b7c:	00000a06 	br	8139ba8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 8139b80:	8139a800 	call	8139a80 <alt_get_errno>
 8139b84:	1007883a 	mov	r3,r2
 8139b88:	00800344 	movi	r2,13
 8139b8c:	18800015 	stw	r2,0(r3)
 8139b90:	00000406 	br	8139ba4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 8139b94:	8139a800 	call	8139a80 <alt_get_errno>
 8139b98:	1007883a 	mov	r3,r2
 8139b9c:	00801444 	movi	r2,81
 8139ba0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8139ba4:	00bfffc4 	movi	r2,-1
}
 8139ba8:	e037883a 	mov	sp,fp
 8139bac:	dfc00117 	ldw	ra,4(sp)
 8139bb0:	df000017 	ldw	fp,0(sp)
 8139bb4:	dec00204 	addi	sp,sp,8
 8139bb8:	f800283a 	ret

08139bbc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 8139bbc:	defffd04 	addi	sp,sp,-12
 8139bc0:	dfc00215 	stw	ra,8(sp)
 8139bc4:	df000115 	stw	fp,4(sp)
 8139bc8:	df000104 	addi	fp,sp,4
 8139bcc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 8139bd0:	d1600a04 	addi	r5,gp,-32728
 8139bd4:	e13fff17 	ldw	r4,-4(fp)
 8139bd8:	813aac80 	call	813aac8 <alt_dev_llist_insert>
}
 8139bdc:	e037883a 	mov	sp,fp
 8139be0:	dfc00117 	ldw	ra,4(sp)
 8139be4:	df000017 	ldw	fp,0(sp)
 8139be8:	dec00204 	addi	sp,sp,8
 8139bec:	f800283a 	ret

08139bf0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 8139bf0:	defffd04 	addi	sp,sp,-12
 8139bf4:	dfc00215 	stw	ra,8(sp)
 8139bf8:	df000115 	stw	fp,4(sp)
 8139bfc:	df000104 	addi	fp,sp,4
 8139c00:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 8139c04:	813b4740 	call	813b474 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 8139c08:	00800044 	movi	r2,1
 8139c0c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 8139c10:	0001883a 	nop
 8139c14:	e037883a 	mov	sp,fp
 8139c18:	dfc00117 	ldw	ra,4(sp)
 8139c1c:	df000017 	ldw	fp,0(sp)
 8139c20:	dec00204 	addi	sp,sp,8
 8139c24:	f800283a 	ret

08139c28 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 8139c28:	defffe04 	addi	sp,sp,-8
 8139c2c:	dfc00115 	stw	ra,4(sp)
 8139c30:	df000015 	stw	fp,0(sp)
 8139c34:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 8139c38:	01c0fa04 	movi	r7,1000
 8139c3c:	01800084 	movi	r6,2
 8139c40:	000b883a 	mov	r5,zero
 8139c44:	01141004 	movi	r4,20544
 8139c48:	813a76c0 	call	813a76c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 8139c4c:	01800044 	movi	r6,1
 8139c50:	000b883a 	mov	r5,zero
 8139c54:	01020534 	movhi	r4,2068
 8139c58:	21322b04 	addi	r4,r4,-14164
 8139c5c:	8139df00 	call	8139df0 <altera_avalon_jtag_uart_init>
 8139c60:	01020534 	movhi	r4,2068
 8139c64:	21322104 	addi	r4,r4,-14204
 8139c68:	8139bbc0 	call	8139bbc <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI_0, spi_0);
 8139c6c:	0001883a 	nop
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 8139c70:	0001883a 	nop
}
 8139c74:	0001883a 	nop
 8139c78:	e037883a 	mov	sp,fp
 8139c7c:	dfc00117 	ldw	ra,4(sp)
 8139c80:	df000017 	ldw	fp,0(sp)
 8139c84:	dec00204 	addi	sp,sp,8
 8139c88:	f800283a 	ret

08139c8c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 8139c8c:	defffa04 	addi	sp,sp,-24
 8139c90:	dfc00515 	stw	ra,20(sp)
 8139c94:	df000415 	stw	fp,16(sp)
 8139c98:	df000404 	addi	fp,sp,16
 8139c9c:	e13ffd15 	stw	r4,-12(fp)
 8139ca0:	e17ffe15 	stw	r5,-8(fp)
 8139ca4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8139ca8:	e0bffd17 	ldw	r2,-12(fp)
 8139cac:	10800017 	ldw	r2,0(r2)
 8139cb0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 8139cb4:	e0bffc17 	ldw	r2,-16(fp)
 8139cb8:	10c00a04 	addi	r3,r2,40
 8139cbc:	e0bffd17 	ldw	r2,-12(fp)
 8139cc0:	10800217 	ldw	r2,8(r2)
 8139cc4:	100f883a 	mov	r7,r2
 8139cc8:	e1bfff17 	ldw	r6,-4(fp)
 8139ccc:	e17ffe17 	ldw	r5,-8(fp)
 8139cd0:	1809883a 	mov	r4,r3
 8139cd4:	813a2b40 	call	813a2b4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 8139cd8:	e037883a 	mov	sp,fp
 8139cdc:	dfc00117 	ldw	ra,4(sp)
 8139ce0:	df000017 	ldw	fp,0(sp)
 8139ce4:	dec00204 	addi	sp,sp,8
 8139ce8:	f800283a 	ret

08139cec <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 8139cec:	defffa04 	addi	sp,sp,-24
 8139cf0:	dfc00515 	stw	ra,20(sp)
 8139cf4:	df000415 	stw	fp,16(sp)
 8139cf8:	df000404 	addi	fp,sp,16
 8139cfc:	e13ffd15 	stw	r4,-12(fp)
 8139d00:	e17ffe15 	stw	r5,-8(fp)
 8139d04:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8139d08:	e0bffd17 	ldw	r2,-12(fp)
 8139d0c:	10800017 	ldw	r2,0(r2)
 8139d10:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 8139d14:	e0bffc17 	ldw	r2,-16(fp)
 8139d18:	10c00a04 	addi	r3,r2,40
 8139d1c:	e0bffd17 	ldw	r2,-12(fp)
 8139d20:	10800217 	ldw	r2,8(r2)
 8139d24:	100f883a 	mov	r7,r2
 8139d28:	e1bfff17 	ldw	r6,-4(fp)
 8139d2c:	e17ffe17 	ldw	r5,-8(fp)
 8139d30:	1809883a 	mov	r4,r3
 8139d34:	813a4d00 	call	813a4d0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 8139d38:	e037883a 	mov	sp,fp
 8139d3c:	dfc00117 	ldw	ra,4(sp)
 8139d40:	df000017 	ldw	fp,0(sp)
 8139d44:	dec00204 	addi	sp,sp,8
 8139d48:	f800283a 	ret

08139d4c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 8139d4c:	defffc04 	addi	sp,sp,-16
 8139d50:	dfc00315 	stw	ra,12(sp)
 8139d54:	df000215 	stw	fp,8(sp)
 8139d58:	df000204 	addi	fp,sp,8
 8139d5c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8139d60:	e0bfff17 	ldw	r2,-4(fp)
 8139d64:	10800017 	ldw	r2,0(r2)
 8139d68:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 8139d6c:	e0bffe17 	ldw	r2,-8(fp)
 8139d70:	10c00a04 	addi	r3,r2,40
 8139d74:	e0bfff17 	ldw	r2,-4(fp)
 8139d78:	10800217 	ldw	r2,8(r2)
 8139d7c:	100b883a 	mov	r5,r2
 8139d80:	1809883a 	mov	r4,r3
 8139d84:	813a15c0 	call	813a15c <altera_avalon_jtag_uart_close>
}
 8139d88:	e037883a 	mov	sp,fp
 8139d8c:	dfc00117 	ldw	ra,4(sp)
 8139d90:	df000017 	ldw	fp,0(sp)
 8139d94:	dec00204 	addi	sp,sp,8
 8139d98:	f800283a 	ret

08139d9c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 8139d9c:	defffa04 	addi	sp,sp,-24
 8139da0:	dfc00515 	stw	ra,20(sp)
 8139da4:	df000415 	stw	fp,16(sp)
 8139da8:	df000404 	addi	fp,sp,16
 8139dac:	e13ffd15 	stw	r4,-12(fp)
 8139db0:	e17ffe15 	stw	r5,-8(fp)
 8139db4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 8139db8:	e0bffd17 	ldw	r2,-12(fp)
 8139dbc:	10800017 	ldw	r2,0(r2)
 8139dc0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 8139dc4:	e0bffc17 	ldw	r2,-16(fp)
 8139dc8:	10800a04 	addi	r2,r2,40
 8139dcc:	e1bfff17 	ldw	r6,-4(fp)
 8139dd0:	e17ffe17 	ldw	r5,-8(fp)
 8139dd4:	1009883a 	mov	r4,r2
 8139dd8:	813a1c40 	call	813a1c4 <altera_avalon_jtag_uart_ioctl>
}
 8139ddc:	e037883a 	mov	sp,fp
 8139de0:	dfc00117 	ldw	ra,4(sp)
 8139de4:	df000017 	ldw	fp,0(sp)
 8139de8:	dec00204 	addi	sp,sp,8
 8139dec:	f800283a 	ret

08139df0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 8139df0:	defffa04 	addi	sp,sp,-24
 8139df4:	dfc00515 	stw	ra,20(sp)
 8139df8:	df000415 	stw	fp,16(sp)
 8139dfc:	df000404 	addi	fp,sp,16
 8139e00:	e13ffd15 	stw	r4,-12(fp)
 8139e04:	e17ffe15 	stw	r5,-8(fp)
 8139e08:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8139e0c:	e0bffd17 	ldw	r2,-12(fp)
 8139e10:	00c00044 	movi	r3,1
 8139e14:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 8139e18:	e0bffd17 	ldw	r2,-12(fp)
 8139e1c:	10800017 	ldw	r2,0(r2)
 8139e20:	10800104 	addi	r2,r2,4
 8139e24:	1007883a 	mov	r3,r2
 8139e28:	e0bffd17 	ldw	r2,-12(fp)
 8139e2c:	10800817 	ldw	r2,32(r2)
 8139e30:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 8139e34:	e0bffe17 	ldw	r2,-8(fp)
 8139e38:	e0ffff17 	ldw	r3,-4(fp)
 8139e3c:	d8000015 	stw	zero,0(sp)
 8139e40:	e1fffd17 	ldw	r7,-12(fp)
 8139e44:	01820534 	movhi	r6,2068
 8139e48:	31a7ac04 	addi	r6,r6,-24912
 8139e4c:	180b883a 	mov	r5,r3
 8139e50:	1009883a 	mov	r4,r2
 8139e54:	813ac4c0 	call	813ac4c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 8139e58:	e0bffd17 	ldw	r2,-12(fp)
 8139e5c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 8139e60:	e0bffd17 	ldw	r2,-12(fp)
 8139e64:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8139e68:	d0e6da17 	ldw	r3,-25752(gp)
 8139e6c:	e1fffd17 	ldw	r7,-12(fp)
 8139e70:	01820534 	movhi	r6,2068
 8139e74:	31a82f04 	addi	r6,r6,-24388
 8139e78:	180b883a 	mov	r5,r3
 8139e7c:	1009883a 	mov	r4,r2
 8139e80:	813a7e80 	call	813a7e8 <alt_alarm_start>
 8139e84:	1000040e 	bge	r2,zero,8139e98 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 8139e88:	e0fffd17 	ldw	r3,-12(fp)
 8139e8c:	00a00034 	movhi	r2,32768
 8139e90:	10bfffc4 	addi	r2,r2,-1
 8139e94:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 8139e98:	0001883a 	nop
 8139e9c:	e037883a 	mov	sp,fp
 8139ea0:	dfc00117 	ldw	ra,4(sp)
 8139ea4:	df000017 	ldw	fp,0(sp)
 8139ea8:	dec00204 	addi	sp,sp,8
 8139eac:	f800283a 	ret

08139eb0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 8139eb0:	defff804 	addi	sp,sp,-32
 8139eb4:	df000715 	stw	fp,28(sp)
 8139eb8:	df000704 	addi	fp,sp,28
 8139ebc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 8139ec0:	e0bfff17 	ldw	r2,-4(fp)
 8139ec4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 8139ec8:	e0bffb17 	ldw	r2,-20(fp)
 8139ecc:	10800017 	ldw	r2,0(r2)
 8139ed0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8139ed4:	e0bffc17 	ldw	r2,-16(fp)
 8139ed8:	10800104 	addi	r2,r2,4
 8139edc:	10800037 	ldwio	r2,0(r2)
 8139ee0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 8139ee4:	e0bffd17 	ldw	r2,-12(fp)
 8139ee8:	1080c00c 	andi	r2,r2,768
 8139eec:	10006d26 	beq	r2,zero,813a0a4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 8139ef0:	e0bffd17 	ldw	r2,-12(fp)
 8139ef4:	1080400c 	andi	r2,r2,256
 8139ef8:	10003526 	beq	r2,zero,8139fd0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 8139efc:	00800074 	movhi	r2,1
 8139f00:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8139f04:	e0bffb17 	ldw	r2,-20(fp)
 8139f08:	10800a17 	ldw	r2,40(r2)
 8139f0c:	10800044 	addi	r2,r2,1
 8139f10:	1081ffcc 	andi	r2,r2,2047
 8139f14:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 8139f18:	e0bffb17 	ldw	r2,-20(fp)
 8139f1c:	10c00b17 	ldw	r3,44(r2)
 8139f20:	e0bffe17 	ldw	r2,-8(fp)
 8139f24:	18801526 	beq	r3,r2,8139f7c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 8139f28:	e0bffc17 	ldw	r2,-16(fp)
 8139f2c:	10800037 	ldwio	r2,0(r2)
 8139f30:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 8139f34:	e0bff917 	ldw	r2,-28(fp)
 8139f38:	10a0000c 	andi	r2,r2,32768
 8139f3c:	10001126 	beq	r2,zero,8139f84 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 8139f40:	e0bffb17 	ldw	r2,-20(fp)
 8139f44:	10800a17 	ldw	r2,40(r2)
 8139f48:	e0fff917 	ldw	r3,-28(fp)
 8139f4c:	1809883a 	mov	r4,r3
 8139f50:	e0fffb17 	ldw	r3,-20(fp)
 8139f54:	1885883a 	add	r2,r3,r2
 8139f58:	10800e04 	addi	r2,r2,56
 8139f5c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8139f60:	e0bffb17 	ldw	r2,-20(fp)
 8139f64:	10800a17 	ldw	r2,40(r2)
 8139f68:	10800044 	addi	r2,r2,1
 8139f6c:	10c1ffcc 	andi	r3,r2,2047
 8139f70:	e0bffb17 	ldw	r2,-20(fp)
 8139f74:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 8139f78:	003fe206 	br	8139f04 <__alt_data_end+0xfc139f04>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 8139f7c:	0001883a 	nop
 8139f80:	00000106 	br	8139f88 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 8139f84:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 8139f88:	e0bff917 	ldw	r2,-28(fp)
 8139f8c:	10bfffec 	andhi	r2,r2,65535
 8139f90:	10000f26 	beq	r2,zero,8139fd0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8139f94:	e0bffb17 	ldw	r2,-20(fp)
 8139f98:	10c00817 	ldw	r3,32(r2)
 8139f9c:	00bfff84 	movi	r2,-2
 8139fa0:	1886703a 	and	r3,r3,r2
 8139fa4:	e0bffb17 	ldw	r2,-20(fp)
 8139fa8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 8139fac:	e0bffc17 	ldw	r2,-16(fp)
 8139fb0:	10800104 	addi	r2,r2,4
 8139fb4:	1007883a 	mov	r3,r2
 8139fb8:	e0bffb17 	ldw	r2,-20(fp)
 8139fbc:	10800817 	ldw	r2,32(r2)
 8139fc0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8139fc4:	e0bffc17 	ldw	r2,-16(fp)
 8139fc8:	10800104 	addi	r2,r2,4
 8139fcc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 8139fd0:	e0bffd17 	ldw	r2,-12(fp)
 8139fd4:	1080800c 	andi	r2,r2,512
 8139fd8:	103fbe26 	beq	r2,zero,8139ed4 <__alt_data_end+0xfc139ed4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 8139fdc:	e0bffd17 	ldw	r2,-12(fp)
 8139fe0:	1004d43a 	srli	r2,r2,16
 8139fe4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 8139fe8:	00001406 	br	813a03c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 8139fec:	e0bffc17 	ldw	r2,-16(fp)
 8139ff0:	e0fffb17 	ldw	r3,-20(fp)
 8139ff4:	18c00d17 	ldw	r3,52(r3)
 8139ff8:	e13ffb17 	ldw	r4,-20(fp)
 8139ffc:	20c7883a 	add	r3,r4,r3
 813a000:	18c20e04 	addi	r3,r3,2104
 813a004:	18c00003 	ldbu	r3,0(r3)
 813a008:	18c03fcc 	andi	r3,r3,255
 813a00c:	18c0201c 	xori	r3,r3,128
 813a010:	18ffe004 	addi	r3,r3,-128
 813a014:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 813a018:	e0bffb17 	ldw	r2,-20(fp)
 813a01c:	10800d17 	ldw	r2,52(r2)
 813a020:	10800044 	addi	r2,r2,1
 813a024:	10c1ffcc 	andi	r3,r2,2047
 813a028:	e0bffb17 	ldw	r2,-20(fp)
 813a02c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 813a030:	e0bffa17 	ldw	r2,-24(fp)
 813a034:	10bfffc4 	addi	r2,r2,-1
 813a038:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 813a03c:	e0bffa17 	ldw	r2,-24(fp)
 813a040:	10000526 	beq	r2,zero,813a058 <altera_avalon_jtag_uart_irq+0x1a8>
 813a044:	e0bffb17 	ldw	r2,-20(fp)
 813a048:	10c00d17 	ldw	r3,52(r2)
 813a04c:	e0bffb17 	ldw	r2,-20(fp)
 813a050:	10800c17 	ldw	r2,48(r2)
 813a054:	18bfe51e 	bne	r3,r2,8139fec <__alt_data_end+0xfc139fec>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 813a058:	e0bffa17 	ldw	r2,-24(fp)
 813a05c:	103f9d26 	beq	r2,zero,8139ed4 <__alt_data_end+0xfc139ed4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 813a060:	e0bffb17 	ldw	r2,-20(fp)
 813a064:	10c00817 	ldw	r3,32(r2)
 813a068:	00bfff44 	movi	r2,-3
 813a06c:	1886703a 	and	r3,r3,r2
 813a070:	e0bffb17 	ldw	r2,-20(fp)
 813a074:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 813a078:	e0bffb17 	ldw	r2,-20(fp)
 813a07c:	10800017 	ldw	r2,0(r2)
 813a080:	10800104 	addi	r2,r2,4
 813a084:	1007883a 	mov	r3,r2
 813a088:	e0bffb17 	ldw	r2,-20(fp)
 813a08c:	10800817 	ldw	r2,32(r2)
 813a090:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 813a094:	e0bffc17 	ldw	r2,-16(fp)
 813a098:	10800104 	addi	r2,r2,4
 813a09c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 813a0a0:	003f8c06 	br	8139ed4 <__alt_data_end+0xfc139ed4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 813a0a4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 813a0a8:	0001883a 	nop
 813a0ac:	e037883a 	mov	sp,fp
 813a0b0:	df000017 	ldw	fp,0(sp)
 813a0b4:	dec00104 	addi	sp,sp,4
 813a0b8:	f800283a 	ret

0813a0bc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 813a0bc:	defff804 	addi	sp,sp,-32
 813a0c0:	df000715 	stw	fp,28(sp)
 813a0c4:	df000704 	addi	fp,sp,28
 813a0c8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 813a0cc:	e0bffb17 	ldw	r2,-20(fp)
 813a0d0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 813a0d4:	e0bff917 	ldw	r2,-28(fp)
 813a0d8:	10800017 	ldw	r2,0(r2)
 813a0dc:	10800104 	addi	r2,r2,4
 813a0e0:	10800037 	ldwio	r2,0(r2)
 813a0e4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 813a0e8:	e0bffa17 	ldw	r2,-24(fp)
 813a0ec:	1081000c 	andi	r2,r2,1024
 813a0f0:	10000b26 	beq	r2,zero,813a120 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 813a0f4:	e0bff917 	ldw	r2,-28(fp)
 813a0f8:	10800017 	ldw	r2,0(r2)
 813a0fc:	10800104 	addi	r2,r2,4
 813a100:	1007883a 	mov	r3,r2
 813a104:	e0bff917 	ldw	r2,-28(fp)
 813a108:	10800817 	ldw	r2,32(r2)
 813a10c:	10810014 	ori	r2,r2,1024
 813a110:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 813a114:	e0bff917 	ldw	r2,-28(fp)
 813a118:	10000915 	stw	zero,36(r2)
 813a11c:	00000a06 	br	813a148 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 813a120:	e0bff917 	ldw	r2,-28(fp)
 813a124:	10c00917 	ldw	r3,36(r2)
 813a128:	00a00034 	movhi	r2,32768
 813a12c:	10bfff04 	addi	r2,r2,-4
 813a130:	10c00536 	bltu	r2,r3,813a148 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 813a134:	e0bff917 	ldw	r2,-28(fp)
 813a138:	10800917 	ldw	r2,36(r2)
 813a13c:	10c00044 	addi	r3,r2,1
 813a140:	e0bff917 	ldw	r2,-28(fp)
 813a144:	10c00915 	stw	r3,36(r2)
 813a148:	d0a6da17 	ldw	r2,-25752(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 813a14c:	e037883a 	mov	sp,fp
 813a150:	df000017 	ldw	fp,0(sp)
 813a154:	dec00104 	addi	sp,sp,4
 813a158:	f800283a 	ret

0813a15c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 813a15c:	defffd04 	addi	sp,sp,-12
 813a160:	df000215 	stw	fp,8(sp)
 813a164:	df000204 	addi	fp,sp,8
 813a168:	e13ffe15 	stw	r4,-8(fp)
 813a16c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 813a170:	00000506 	br	813a188 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 813a174:	e0bfff17 	ldw	r2,-4(fp)
 813a178:	1090000c 	andi	r2,r2,16384
 813a17c:	10000226 	beq	r2,zero,813a188 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 813a180:	00bffd44 	movi	r2,-11
 813a184:	00000b06 	br	813a1b4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 813a188:	e0bffe17 	ldw	r2,-8(fp)
 813a18c:	10c00d17 	ldw	r3,52(r2)
 813a190:	e0bffe17 	ldw	r2,-8(fp)
 813a194:	10800c17 	ldw	r2,48(r2)
 813a198:	18800526 	beq	r3,r2,813a1b0 <altera_avalon_jtag_uart_close+0x54>
 813a19c:	e0bffe17 	ldw	r2,-8(fp)
 813a1a0:	10c00917 	ldw	r3,36(r2)
 813a1a4:	e0bffe17 	ldw	r2,-8(fp)
 813a1a8:	10800117 	ldw	r2,4(r2)
 813a1ac:	18bff136 	bltu	r3,r2,813a174 <__alt_data_end+0xfc13a174>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 813a1b0:	0005883a 	mov	r2,zero
}
 813a1b4:	e037883a 	mov	sp,fp
 813a1b8:	df000017 	ldw	fp,0(sp)
 813a1bc:	dec00104 	addi	sp,sp,4
 813a1c0:	f800283a 	ret

0813a1c4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 813a1c4:	defffa04 	addi	sp,sp,-24
 813a1c8:	df000515 	stw	fp,20(sp)
 813a1cc:	df000504 	addi	fp,sp,20
 813a1d0:	e13ffd15 	stw	r4,-12(fp)
 813a1d4:	e17ffe15 	stw	r5,-8(fp)
 813a1d8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 813a1dc:	00bff9c4 	movi	r2,-25
 813a1e0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 813a1e4:	e0bffe17 	ldw	r2,-8(fp)
 813a1e8:	10da8060 	cmpeqi	r3,r2,27137
 813a1ec:	1800031e 	bne	r3,zero,813a1fc <altera_avalon_jtag_uart_ioctl+0x38>
 813a1f0:	109a80a0 	cmpeqi	r2,r2,27138
 813a1f4:	1000181e 	bne	r2,zero,813a258 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 813a1f8:	00002906 	br	813a2a0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 813a1fc:	e0bffd17 	ldw	r2,-12(fp)
 813a200:	10c00117 	ldw	r3,4(r2)
 813a204:	00a00034 	movhi	r2,32768
 813a208:	10bfffc4 	addi	r2,r2,-1
 813a20c:	18802126 	beq	r3,r2,813a294 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 813a210:	e0bfff17 	ldw	r2,-4(fp)
 813a214:	10800017 	ldw	r2,0(r2)
 813a218:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 813a21c:	e0bffc17 	ldw	r2,-16(fp)
 813a220:	10800090 	cmplti	r2,r2,2
 813a224:	1000061e 	bne	r2,zero,813a240 <altera_avalon_jtag_uart_ioctl+0x7c>
 813a228:	e0fffc17 	ldw	r3,-16(fp)
 813a22c:	00a00034 	movhi	r2,32768
 813a230:	10bfffc4 	addi	r2,r2,-1
 813a234:	18800226 	beq	r3,r2,813a240 <altera_avalon_jtag_uart_ioctl+0x7c>
 813a238:	e0bffc17 	ldw	r2,-16(fp)
 813a23c:	00000206 	br	813a248 <altera_avalon_jtag_uart_ioctl+0x84>
 813a240:	00a00034 	movhi	r2,32768
 813a244:	10bfff84 	addi	r2,r2,-2
 813a248:	e0fffd17 	ldw	r3,-12(fp)
 813a24c:	18800115 	stw	r2,4(r3)
      rc = 0;
 813a250:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 813a254:	00000f06 	br	813a294 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 813a258:	e0bffd17 	ldw	r2,-12(fp)
 813a25c:	10c00117 	ldw	r3,4(r2)
 813a260:	00a00034 	movhi	r2,32768
 813a264:	10bfffc4 	addi	r2,r2,-1
 813a268:	18800c26 	beq	r3,r2,813a29c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 813a26c:	e0bffd17 	ldw	r2,-12(fp)
 813a270:	10c00917 	ldw	r3,36(r2)
 813a274:	e0bffd17 	ldw	r2,-12(fp)
 813a278:	10800117 	ldw	r2,4(r2)
 813a27c:	1885803a 	cmpltu	r2,r3,r2
 813a280:	10c03fcc 	andi	r3,r2,255
 813a284:	e0bfff17 	ldw	r2,-4(fp)
 813a288:	10c00015 	stw	r3,0(r2)
      rc = 0;
 813a28c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 813a290:	00000206 	br	813a29c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 813a294:	0001883a 	nop
 813a298:	00000106 	br	813a2a0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 813a29c:	0001883a 	nop

  default:
    break;
  }

  return rc;
 813a2a0:	e0bffb17 	ldw	r2,-20(fp)
}
 813a2a4:	e037883a 	mov	sp,fp
 813a2a8:	df000017 	ldw	fp,0(sp)
 813a2ac:	dec00104 	addi	sp,sp,4
 813a2b0:	f800283a 	ret

0813a2b4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 813a2b4:	defff304 	addi	sp,sp,-52
 813a2b8:	dfc00c15 	stw	ra,48(sp)
 813a2bc:	df000b15 	stw	fp,44(sp)
 813a2c0:	df000b04 	addi	fp,sp,44
 813a2c4:	e13ffc15 	stw	r4,-16(fp)
 813a2c8:	e17ffd15 	stw	r5,-12(fp)
 813a2cc:	e1bffe15 	stw	r6,-8(fp)
 813a2d0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 813a2d4:	e0bffd17 	ldw	r2,-12(fp)
 813a2d8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 813a2dc:	00004706 	br	813a3fc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 813a2e0:	e0bffc17 	ldw	r2,-16(fp)
 813a2e4:	10800a17 	ldw	r2,40(r2)
 813a2e8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 813a2ec:	e0bffc17 	ldw	r2,-16(fp)
 813a2f0:	10800b17 	ldw	r2,44(r2)
 813a2f4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 813a2f8:	e0fff717 	ldw	r3,-36(fp)
 813a2fc:	e0bff817 	ldw	r2,-32(fp)
 813a300:	18800536 	bltu	r3,r2,813a318 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 813a304:	e0fff717 	ldw	r3,-36(fp)
 813a308:	e0bff817 	ldw	r2,-32(fp)
 813a30c:	1885c83a 	sub	r2,r3,r2
 813a310:	e0bff615 	stw	r2,-40(fp)
 813a314:	00000406 	br	813a328 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 813a318:	00c20004 	movi	r3,2048
 813a31c:	e0bff817 	ldw	r2,-32(fp)
 813a320:	1885c83a 	sub	r2,r3,r2
 813a324:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 813a328:	e0bff617 	ldw	r2,-40(fp)
 813a32c:	10001e26 	beq	r2,zero,813a3a8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 813a330:	e0fffe17 	ldw	r3,-8(fp)
 813a334:	e0bff617 	ldw	r2,-40(fp)
 813a338:	1880022e 	bgeu	r3,r2,813a344 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 813a33c:	e0bffe17 	ldw	r2,-8(fp)
 813a340:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 813a344:	e0bffc17 	ldw	r2,-16(fp)
 813a348:	10c00e04 	addi	r3,r2,56
 813a34c:	e0bff817 	ldw	r2,-32(fp)
 813a350:	1885883a 	add	r2,r3,r2
 813a354:	e1bff617 	ldw	r6,-40(fp)
 813a358:	100b883a 	mov	r5,r2
 813a35c:	e13ff517 	ldw	r4,-44(fp)
 813a360:	8131ed40 	call	8131ed4 <memcpy>
      ptr   += n;
 813a364:	e0fff517 	ldw	r3,-44(fp)
 813a368:	e0bff617 	ldw	r2,-40(fp)
 813a36c:	1885883a 	add	r2,r3,r2
 813a370:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 813a374:	e0fffe17 	ldw	r3,-8(fp)
 813a378:	e0bff617 	ldw	r2,-40(fp)
 813a37c:	1885c83a 	sub	r2,r3,r2
 813a380:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 813a384:	e0fff817 	ldw	r3,-32(fp)
 813a388:	e0bff617 	ldw	r2,-40(fp)
 813a38c:	1885883a 	add	r2,r3,r2
 813a390:	10c1ffcc 	andi	r3,r2,2047
 813a394:	e0bffc17 	ldw	r2,-16(fp)
 813a398:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 813a39c:	e0bffe17 	ldw	r2,-8(fp)
 813a3a0:	00bfcf16 	blt	zero,r2,813a2e0 <__alt_data_end+0xfc13a2e0>
 813a3a4:	00000106 	br	813a3ac <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 813a3a8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 813a3ac:	e0fff517 	ldw	r3,-44(fp)
 813a3b0:	e0bffd17 	ldw	r2,-12(fp)
 813a3b4:	1880141e 	bne	r3,r2,813a408 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 813a3b8:	e0bfff17 	ldw	r2,-4(fp)
 813a3bc:	1090000c 	andi	r2,r2,16384
 813a3c0:	1000131e 	bne	r2,zero,813a410 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 813a3c4:	0001883a 	nop
 813a3c8:	e0bffc17 	ldw	r2,-16(fp)
 813a3cc:	10c00a17 	ldw	r3,40(r2)
 813a3d0:	e0bff717 	ldw	r2,-36(fp)
 813a3d4:	1880051e 	bne	r3,r2,813a3ec <altera_avalon_jtag_uart_read+0x138>
 813a3d8:	e0bffc17 	ldw	r2,-16(fp)
 813a3dc:	10c00917 	ldw	r3,36(r2)
 813a3e0:	e0bffc17 	ldw	r2,-16(fp)
 813a3e4:	10800117 	ldw	r2,4(r2)
 813a3e8:	18bff736 	bltu	r3,r2,813a3c8 <__alt_data_end+0xfc13a3c8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 813a3ec:	e0bffc17 	ldw	r2,-16(fp)
 813a3f0:	10c00a17 	ldw	r3,40(r2)
 813a3f4:	e0bff717 	ldw	r2,-36(fp)
 813a3f8:	18800726 	beq	r3,r2,813a418 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 813a3fc:	e0bffe17 	ldw	r2,-8(fp)
 813a400:	00bfb716 	blt	zero,r2,813a2e0 <__alt_data_end+0xfc13a2e0>
 813a404:	00000506 	br	813a41c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 813a408:	0001883a 	nop
 813a40c:	00000306 	br	813a41c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 813a410:	0001883a 	nop
 813a414:	00000106 	br	813a41c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 813a418:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 813a41c:	e0fff517 	ldw	r3,-44(fp)
 813a420:	e0bffd17 	ldw	r2,-12(fp)
 813a424:	18801826 	beq	r3,r2,813a488 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813a428:	0005303a 	rdctl	r2,status
 813a42c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813a430:	e0fffb17 	ldw	r3,-20(fp)
 813a434:	00bfff84 	movi	r2,-2
 813a438:	1884703a 	and	r2,r3,r2
 813a43c:	1001703a 	wrctl	status,r2
  
  return context;
 813a440:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 813a444:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 813a448:	e0bffc17 	ldw	r2,-16(fp)
 813a44c:	10800817 	ldw	r2,32(r2)
 813a450:	10c00054 	ori	r3,r2,1
 813a454:	e0bffc17 	ldw	r2,-16(fp)
 813a458:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 813a45c:	e0bffc17 	ldw	r2,-16(fp)
 813a460:	10800017 	ldw	r2,0(r2)
 813a464:	10800104 	addi	r2,r2,4
 813a468:	1007883a 	mov	r3,r2
 813a46c:	e0bffc17 	ldw	r2,-16(fp)
 813a470:	10800817 	ldw	r2,32(r2)
 813a474:	18800035 	stwio	r2,0(r3)
 813a478:	e0bffa17 	ldw	r2,-24(fp)
 813a47c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813a480:	e0bff917 	ldw	r2,-28(fp)
 813a484:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 813a488:	e0fff517 	ldw	r3,-44(fp)
 813a48c:	e0bffd17 	ldw	r2,-12(fp)
 813a490:	18800426 	beq	r3,r2,813a4a4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 813a494:	e0fff517 	ldw	r3,-44(fp)
 813a498:	e0bffd17 	ldw	r2,-12(fp)
 813a49c:	1885c83a 	sub	r2,r3,r2
 813a4a0:	00000606 	br	813a4bc <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 813a4a4:	e0bfff17 	ldw	r2,-4(fp)
 813a4a8:	1090000c 	andi	r2,r2,16384
 813a4ac:	10000226 	beq	r2,zero,813a4b8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 813a4b0:	00bffd44 	movi	r2,-11
 813a4b4:	00000106 	br	813a4bc <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 813a4b8:	00bffec4 	movi	r2,-5
}
 813a4bc:	e037883a 	mov	sp,fp
 813a4c0:	dfc00117 	ldw	ra,4(sp)
 813a4c4:	df000017 	ldw	fp,0(sp)
 813a4c8:	dec00204 	addi	sp,sp,8
 813a4cc:	f800283a 	ret

0813a4d0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 813a4d0:	defff304 	addi	sp,sp,-52
 813a4d4:	dfc00c15 	stw	ra,48(sp)
 813a4d8:	df000b15 	stw	fp,44(sp)
 813a4dc:	df000b04 	addi	fp,sp,44
 813a4e0:	e13ffc15 	stw	r4,-16(fp)
 813a4e4:	e17ffd15 	stw	r5,-12(fp)
 813a4e8:	e1bffe15 	stw	r6,-8(fp)
 813a4ec:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 813a4f0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 813a4f4:	e0bffd17 	ldw	r2,-12(fp)
 813a4f8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 813a4fc:	00003706 	br	813a5dc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 813a500:	e0bffc17 	ldw	r2,-16(fp)
 813a504:	10800c17 	ldw	r2,48(r2)
 813a508:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 813a50c:	e0bffc17 	ldw	r2,-16(fp)
 813a510:	10800d17 	ldw	r2,52(r2)
 813a514:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 813a518:	e0fff917 	ldw	r3,-28(fp)
 813a51c:	e0bff517 	ldw	r2,-44(fp)
 813a520:	1880062e 	bgeu	r3,r2,813a53c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 813a524:	e0fff517 	ldw	r3,-44(fp)
 813a528:	e0bff917 	ldw	r2,-28(fp)
 813a52c:	1885c83a 	sub	r2,r3,r2
 813a530:	10bfffc4 	addi	r2,r2,-1
 813a534:	e0bff615 	stw	r2,-40(fp)
 813a538:	00000b06 	br	813a568 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 813a53c:	e0bff517 	ldw	r2,-44(fp)
 813a540:	10000526 	beq	r2,zero,813a558 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 813a544:	00c20004 	movi	r3,2048
 813a548:	e0bff917 	ldw	r2,-28(fp)
 813a54c:	1885c83a 	sub	r2,r3,r2
 813a550:	e0bff615 	stw	r2,-40(fp)
 813a554:	00000406 	br	813a568 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 813a558:	00c1ffc4 	movi	r3,2047
 813a55c:	e0bff917 	ldw	r2,-28(fp)
 813a560:	1885c83a 	sub	r2,r3,r2
 813a564:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 813a568:	e0bff617 	ldw	r2,-40(fp)
 813a56c:	10001e26 	beq	r2,zero,813a5e8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 813a570:	e0fffe17 	ldw	r3,-8(fp)
 813a574:	e0bff617 	ldw	r2,-40(fp)
 813a578:	1880022e 	bgeu	r3,r2,813a584 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 813a57c:	e0bffe17 	ldw	r2,-8(fp)
 813a580:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 813a584:	e0bffc17 	ldw	r2,-16(fp)
 813a588:	10c20e04 	addi	r3,r2,2104
 813a58c:	e0bff917 	ldw	r2,-28(fp)
 813a590:	1885883a 	add	r2,r3,r2
 813a594:	e1bff617 	ldw	r6,-40(fp)
 813a598:	e17ffd17 	ldw	r5,-12(fp)
 813a59c:	1009883a 	mov	r4,r2
 813a5a0:	8131ed40 	call	8131ed4 <memcpy>
      ptr   += n;
 813a5a4:	e0fffd17 	ldw	r3,-12(fp)
 813a5a8:	e0bff617 	ldw	r2,-40(fp)
 813a5ac:	1885883a 	add	r2,r3,r2
 813a5b0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 813a5b4:	e0fffe17 	ldw	r3,-8(fp)
 813a5b8:	e0bff617 	ldw	r2,-40(fp)
 813a5bc:	1885c83a 	sub	r2,r3,r2
 813a5c0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 813a5c4:	e0fff917 	ldw	r3,-28(fp)
 813a5c8:	e0bff617 	ldw	r2,-40(fp)
 813a5cc:	1885883a 	add	r2,r3,r2
 813a5d0:	10c1ffcc 	andi	r3,r2,2047
 813a5d4:	e0bffc17 	ldw	r2,-16(fp)
 813a5d8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 813a5dc:	e0bffe17 	ldw	r2,-8(fp)
 813a5e0:	00bfc716 	blt	zero,r2,813a500 <__alt_data_end+0xfc13a500>
 813a5e4:	00000106 	br	813a5ec <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 813a5e8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813a5ec:	0005303a 	rdctl	r2,status
 813a5f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813a5f4:	e0fffb17 	ldw	r3,-20(fp)
 813a5f8:	00bfff84 	movi	r2,-2
 813a5fc:	1884703a 	and	r2,r3,r2
 813a600:	1001703a 	wrctl	status,r2
  
  return context;
 813a604:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 813a608:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 813a60c:	e0bffc17 	ldw	r2,-16(fp)
 813a610:	10800817 	ldw	r2,32(r2)
 813a614:	10c00094 	ori	r3,r2,2
 813a618:	e0bffc17 	ldw	r2,-16(fp)
 813a61c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 813a620:	e0bffc17 	ldw	r2,-16(fp)
 813a624:	10800017 	ldw	r2,0(r2)
 813a628:	10800104 	addi	r2,r2,4
 813a62c:	1007883a 	mov	r3,r2
 813a630:	e0bffc17 	ldw	r2,-16(fp)
 813a634:	10800817 	ldw	r2,32(r2)
 813a638:	18800035 	stwio	r2,0(r3)
 813a63c:	e0bffa17 	ldw	r2,-24(fp)
 813a640:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813a644:	e0bff817 	ldw	r2,-32(fp)
 813a648:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 813a64c:	e0bffe17 	ldw	r2,-8(fp)
 813a650:	0080100e 	bge	zero,r2,813a694 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 813a654:	e0bfff17 	ldw	r2,-4(fp)
 813a658:	1090000c 	andi	r2,r2,16384
 813a65c:	1000101e 	bne	r2,zero,813a6a0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 813a660:	0001883a 	nop
 813a664:	e0bffc17 	ldw	r2,-16(fp)
 813a668:	10c00d17 	ldw	r3,52(r2)
 813a66c:	e0bff517 	ldw	r2,-44(fp)
 813a670:	1880051e 	bne	r3,r2,813a688 <altera_avalon_jtag_uart_write+0x1b8>
 813a674:	e0bffc17 	ldw	r2,-16(fp)
 813a678:	10c00917 	ldw	r3,36(r2)
 813a67c:	e0bffc17 	ldw	r2,-16(fp)
 813a680:	10800117 	ldw	r2,4(r2)
 813a684:	18bff736 	bltu	r3,r2,813a664 <__alt_data_end+0xfc13a664>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 813a688:	e0bffc17 	ldw	r2,-16(fp)
 813a68c:	10800917 	ldw	r2,36(r2)
 813a690:	1000051e 	bne	r2,zero,813a6a8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 813a694:	e0bffe17 	ldw	r2,-8(fp)
 813a698:	00bfd016 	blt	zero,r2,813a5dc <__alt_data_end+0xfc13a5dc>
 813a69c:	00000306 	br	813a6ac <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 813a6a0:	0001883a 	nop
 813a6a4:	00000106 	br	813a6ac <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 813a6a8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 813a6ac:	e0fffd17 	ldw	r3,-12(fp)
 813a6b0:	e0bff717 	ldw	r2,-36(fp)
 813a6b4:	18800426 	beq	r3,r2,813a6c8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 813a6b8:	e0fffd17 	ldw	r3,-12(fp)
 813a6bc:	e0bff717 	ldw	r2,-36(fp)
 813a6c0:	1885c83a 	sub	r2,r3,r2
 813a6c4:	00000606 	br	813a6e0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 813a6c8:	e0bfff17 	ldw	r2,-4(fp)
 813a6cc:	1090000c 	andi	r2,r2,16384
 813a6d0:	10000226 	beq	r2,zero,813a6dc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 813a6d4:	00bffd44 	movi	r2,-11
 813a6d8:	00000106 	br	813a6e0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 813a6dc:	00bffec4 	movi	r2,-5
}
 813a6e0:	e037883a 	mov	sp,fp
 813a6e4:	dfc00117 	ldw	ra,4(sp)
 813a6e8:	df000017 	ldw	fp,0(sp)
 813a6ec:	dec00204 	addi	sp,sp,8
 813a6f0:	f800283a 	ret

0813a6f4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 813a6f4:	defffa04 	addi	sp,sp,-24
 813a6f8:	dfc00515 	stw	ra,20(sp)
 813a6fc:	df000415 	stw	fp,16(sp)
 813a700:	df000404 	addi	fp,sp,16
 813a704:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 813a708:	0007883a 	mov	r3,zero
 813a70c:	e0bfff17 	ldw	r2,-4(fp)
 813a710:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 813a714:	e0bfff17 	ldw	r2,-4(fp)
 813a718:	10800104 	addi	r2,r2,4
 813a71c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813a720:	0005303a 	rdctl	r2,status
 813a724:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813a728:	e0fffd17 	ldw	r3,-12(fp)
 813a72c:	00bfff84 	movi	r2,-2
 813a730:	1884703a 	and	r2,r3,r2
 813a734:	1001703a 	wrctl	status,r2
  
  return context;
 813a738:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 813a73c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 813a740:	813b36c0 	call	813b36c <alt_tick>
 813a744:	e0bffc17 	ldw	r2,-16(fp)
 813a748:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813a74c:	e0bffe17 	ldw	r2,-8(fp)
 813a750:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 813a754:	0001883a 	nop
 813a758:	e037883a 	mov	sp,fp
 813a75c:	dfc00117 	ldw	ra,4(sp)
 813a760:	df000017 	ldw	fp,0(sp)
 813a764:	dec00204 	addi	sp,sp,8
 813a768:	f800283a 	ret

0813a76c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 813a76c:	defff804 	addi	sp,sp,-32
 813a770:	dfc00715 	stw	ra,28(sp)
 813a774:	df000615 	stw	fp,24(sp)
 813a778:	df000604 	addi	fp,sp,24
 813a77c:	e13ffc15 	stw	r4,-16(fp)
 813a780:	e17ffd15 	stw	r5,-12(fp)
 813a784:	e1bffe15 	stw	r6,-8(fp)
 813a788:	e1ffff15 	stw	r7,-4(fp)
 813a78c:	e0bfff17 	ldw	r2,-4(fp)
 813a790:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 813a794:	d0a6da17 	ldw	r2,-25752(gp)
 813a798:	1000021e 	bne	r2,zero,813a7a4 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 813a79c:	e0bffb17 	ldw	r2,-20(fp)
 813a7a0:	d0a6da15 	stw	r2,-25752(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 813a7a4:	e0bffc17 	ldw	r2,-16(fp)
 813a7a8:	10800104 	addi	r2,r2,4
 813a7ac:	00c001c4 	movi	r3,7
 813a7b0:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 813a7b4:	d8000015 	stw	zero,0(sp)
 813a7b8:	e1fffc17 	ldw	r7,-16(fp)
 813a7bc:	01820534 	movhi	r6,2068
 813a7c0:	31a9bd04 	addi	r6,r6,-22796
 813a7c4:	e17ffe17 	ldw	r5,-8(fp)
 813a7c8:	e13ffd17 	ldw	r4,-12(fp)
 813a7cc:	813ac4c0 	call	813ac4c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 813a7d0:	0001883a 	nop
 813a7d4:	e037883a 	mov	sp,fp
 813a7d8:	dfc00117 	ldw	ra,4(sp)
 813a7dc:	df000017 	ldw	fp,0(sp)
 813a7e0:	dec00204 	addi	sp,sp,8
 813a7e4:	f800283a 	ret

0813a7e8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 813a7e8:	defff504 	addi	sp,sp,-44
 813a7ec:	df000a15 	stw	fp,40(sp)
 813a7f0:	df000a04 	addi	fp,sp,40
 813a7f4:	e13ffc15 	stw	r4,-16(fp)
 813a7f8:	e17ffd15 	stw	r5,-12(fp)
 813a7fc:	e1bffe15 	stw	r6,-8(fp)
 813a800:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 813a804:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 813a808:	d0a6da17 	ldw	r2,-25752(gp)
  
  if (alt_ticks_per_second ())
 813a80c:	10003c26 	beq	r2,zero,813a900 <alt_alarm_start+0x118>
  {
    if (alarm)
 813a810:	e0bffc17 	ldw	r2,-16(fp)
 813a814:	10003826 	beq	r2,zero,813a8f8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 813a818:	e0bffc17 	ldw	r2,-16(fp)
 813a81c:	e0fffe17 	ldw	r3,-8(fp)
 813a820:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 813a824:	e0bffc17 	ldw	r2,-16(fp)
 813a828:	e0ffff17 	ldw	r3,-4(fp)
 813a82c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813a830:	0005303a 	rdctl	r2,status
 813a834:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813a838:	e0fff917 	ldw	r3,-28(fp)
 813a83c:	00bfff84 	movi	r2,-2
 813a840:	1884703a 	and	r2,r3,r2
 813a844:	1001703a 	wrctl	status,r2
  
  return context;
 813a848:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 813a84c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 813a850:	d0a6db17 	ldw	r2,-25748(gp)
      
      current_nticks = alt_nticks();
 813a854:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 813a858:	e0fffd17 	ldw	r3,-12(fp)
 813a85c:	e0bff617 	ldw	r2,-40(fp)
 813a860:	1885883a 	add	r2,r3,r2
 813a864:	10c00044 	addi	r3,r2,1
 813a868:	e0bffc17 	ldw	r2,-16(fp)
 813a86c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 813a870:	e0bffc17 	ldw	r2,-16(fp)
 813a874:	10c00217 	ldw	r3,8(r2)
 813a878:	e0bff617 	ldw	r2,-40(fp)
 813a87c:	1880042e 	bgeu	r3,r2,813a890 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 813a880:	e0bffc17 	ldw	r2,-16(fp)
 813a884:	00c00044 	movi	r3,1
 813a888:	10c00405 	stb	r3,16(r2)
 813a88c:	00000206 	br	813a898 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 813a890:	e0bffc17 	ldw	r2,-16(fp)
 813a894:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 813a898:	e0bffc17 	ldw	r2,-16(fp)
 813a89c:	d0e01004 	addi	r3,gp,-32704
 813a8a0:	e0fffa15 	stw	r3,-24(fp)
 813a8a4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 813a8a8:	e0bffb17 	ldw	r2,-20(fp)
 813a8ac:	e0fffa17 	ldw	r3,-24(fp)
 813a8b0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 813a8b4:	e0bffa17 	ldw	r2,-24(fp)
 813a8b8:	10c00017 	ldw	r3,0(r2)
 813a8bc:	e0bffb17 	ldw	r2,-20(fp)
 813a8c0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 813a8c4:	e0bffa17 	ldw	r2,-24(fp)
 813a8c8:	10800017 	ldw	r2,0(r2)
 813a8cc:	e0fffb17 	ldw	r3,-20(fp)
 813a8d0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 813a8d4:	e0bffa17 	ldw	r2,-24(fp)
 813a8d8:	e0fffb17 	ldw	r3,-20(fp)
 813a8dc:	10c00015 	stw	r3,0(r2)
 813a8e0:	e0bff817 	ldw	r2,-32(fp)
 813a8e4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813a8e8:	e0bff717 	ldw	r2,-36(fp)
 813a8ec:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 813a8f0:	0005883a 	mov	r2,zero
 813a8f4:	00000306 	br	813a904 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 813a8f8:	00bffa84 	movi	r2,-22
 813a8fc:	00000106 	br	813a904 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 813a900:	00bfde84 	movi	r2,-134
  }
}
 813a904:	e037883a 	mov	sp,fp
 813a908:	df000017 	ldw	fp,0(sp)
 813a90c:	dec00104 	addi	sp,sp,4
 813a910:	f800283a 	ret

0813a914 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 813a914:	defffa04 	addi	sp,sp,-24
 813a918:	dfc00515 	stw	ra,20(sp)
 813a91c:	df000415 	stw	fp,16(sp)
 813a920:	df000404 	addi	fp,sp,16
 813a924:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 813a928:	00800244 	movi	r2,9
 813a92c:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 813a930:	014003f4 	movhi	r5,15
 813a934:	29509004 	addi	r5,r5,16960
 813a938:	e13ffd17 	ldw	r4,-12(fp)
 813a93c:	812c2b80 	call	812c2b8 <__mulsi3>
 813a940:	100b883a 	mov	r5,r2
 813a944:	0100bef4 	movhi	r4,763
 813a948:	213c2004 	addi	r4,r4,-3968
 813a94c:	81368980 	call	8136898 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 813a950:	100b883a 	mov	r5,r2
 813a954:	01200034 	movhi	r4,32768
 813a958:	213fffc4 	addi	r4,r4,-1
 813a95c:	81368980 	call	8136898 <__udivsi3>
 813a960:	100b883a 	mov	r5,r2
 813a964:	e13fff17 	ldw	r4,-4(fp)
 813a968:	81368980 	call	8136898 <__udivsi3>
 813a96c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 813a970:	e0bffe17 	ldw	r2,-8(fp)
 813a974:	10002a26 	beq	r2,zero,813aa20 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 813a978:	e03ffc15 	stw	zero,-16(fp)
 813a97c:	00001706 	br	813a9dc <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 813a980:	00a00034 	movhi	r2,32768
 813a984:	10bfffc4 	addi	r2,r2,-1
 813a988:	10bfffc4 	addi	r2,r2,-1
 813a98c:	103ffe1e 	bne	r2,zero,813a988 <__alt_data_end+0xfc13a988>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 813a990:	014003f4 	movhi	r5,15
 813a994:	29509004 	addi	r5,r5,16960
 813a998:	e13ffd17 	ldw	r4,-12(fp)
 813a99c:	812c2b80 	call	812c2b8 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 813a9a0:	100b883a 	mov	r5,r2
 813a9a4:	0100bef4 	movhi	r4,763
 813a9a8:	213c2004 	addi	r4,r4,-3968
 813a9ac:	81368980 	call	8136898 <__udivsi3>
 813a9b0:	100b883a 	mov	r5,r2
 813a9b4:	01200034 	movhi	r4,32768
 813a9b8:	213fffc4 	addi	r4,r4,-1
 813a9bc:	81368980 	call	8136898 <__udivsi3>
 813a9c0:	1007883a 	mov	r3,r2
 813a9c4:	e0bfff17 	ldw	r2,-4(fp)
 813a9c8:	10c5c83a 	sub	r2,r2,r3
 813a9cc:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 813a9d0:	e0bffc17 	ldw	r2,-16(fp)
 813a9d4:	10800044 	addi	r2,r2,1
 813a9d8:	e0bffc15 	stw	r2,-16(fp)
 813a9dc:	e0fffc17 	ldw	r3,-16(fp)
 813a9e0:	e0bffe17 	ldw	r2,-8(fp)
 813a9e4:	18bfe616 	blt	r3,r2,813a980 <__alt_data_end+0xfc13a980>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 813a9e8:	014003f4 	movhi	r5,15
 813a9ec:	29509004 	addi	r5,r5,16960
 813a9f0:	e13ffd17 	ldw	r4,-12(fp)
 813a9f4:	812c2b80 	call	812c2b8 <__mulsi3>
 813a9f8:	100b883a 	mov	r5,r2
 813a9fc:	0100bef4 	movhi	r4,763
 813aa00:	213c2004 	addi	r4,r4,-3968
 813aa04:	81368980 	call	8136898 <__udivsi3>
 813aa08:	e17fff17 	ldw	r5,-4(fp)
 813aa0c:	1009883a 	mov	r4,r2
 813aa10:	812c2b80 	call	812c2b8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 813aa14:	10bfffc4 	addi	r2,r2,-1
 813aa18:	103ffe1e 	bne	r2,zero,813aa14 <__alt_data_end+0xfc13aa14>
 813aa1c:	00000d06 	br	813aa54 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 813aa20:	014003f4 	movhi	r5,15
 813aa24:	29509004 	addi	r5,r5,16960
 813aa28:	e13ffd17 	ldw	r4,-12(fp)
 813aa2c:	812c2b80 	call	812c2b8 <__mulsi3>
 813aa30:	100b883a 	mov	r5,r2
 813aa34:	0100bef4 	movhi	r4,763
 813aa38:	213c2004 	addi	r4,r4,-3968
 813aa3c:	81368980 	call	8136898 <__udivsi3>
 813aa40:	e17fff17 	ldw	r5,-4(fp)
 813aa44:	1009883a 	mov	r4,r2
 813aa48:	812c2b80 	call	812c2b8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 813aa4c:	10bfffc4 	addi	r2,r2,-1
 813aa50:	00bffe16 	blt	zero,r2,813aa4c <__alt_data_end+0xfc13aa4c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 813aa54:	0005883a 	mov	r2,zero
}
 813aa58:	e037883a 	mov	sp,fp
 813aa5c:	dfc00117 	ldw	ra,4(sp)
 813aa60:	df000017 	ldw	fp,0(sp)
 813aa64:	dec00204 	addi	sp,sp,8
 813aa68:	f800283a 	ret

0813aa6c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 813aa6c:	deffff04 	addi	sp,sp,-4
 813aa70:	df000015 	stw	fp,0(sp)
 813aa74:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 813aa78:	0001883a 	nop
 813aa7c:	e037883a 	mov	sp,fp
 813aa80:	df000017 	ldw	fp,0(sp)
 813aa84:	dec00104 	addi	sp,sp,4
 813aa88:	f800283a 	ret

0813aa8c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 813aa8c:	defffe04 	addi	sp,sp,-8
 813aa90:	dfc00115 	stw	ra,4(sp)
 813aa94:	df000015 	stw	fp,0(sp)
 813aa98:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 813aa9c:	d0a00d17 	ldw	r2,-32716(gp)
 813aaa0:	10000326 	beq	r2,zero,813aab0 <alt_get_errno+0x24>
 813aaa4:	d0a00d17 	ldw	r2,-32716(gp)
 813aaa8:	103ee83a 	callr	r2
 813aaac:	00000106 	br	813aab4 <alt_get_errno+0x28>
 813aab0:	d0a6d504 	addi	r2,gp,-25772
}
 813aab4:	e037883a 	mov	sp,fp
 813aab8:	dfc00117 	ldw	ra,4(sp)
 813aabc:	df000017 	ldw	fp,0(sp)
 813aac0:	dec00204 	addi	sp,sp,8
 813aac4:	f800283a 	ret

0813aac8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 813aac8:	defffa04 	addi	sp,sp,-24
 813aacc:	dfc00515 	stw	ra,20(sp)
 813aad0:	df000415 	stw	fp,16(sp)
 813aad4:	df000404 	addi	fp,sp,16
 813aad8:	e13ffe15 	stw	r4,-8(fp)
 813aadc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 813aae0:	e0bffe17 	ldw	r2,-8(fp)
 813aae4:	10000326 	beq	r2,zero,813aaf4 <alt_dev_llist_insert+0x2c>
 813aae8:	e0bffe17 	ldw	r2,-8(fp)
 813aaec:	10800217 	ldw	r2,8(r2)
 813aaf0:	1000061e 	bne	r2,zero,813ab0c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 813aaf4:	813aa8c0 	call	813aa8c <alt_get_errno>
 813aaf8:	1007883a 	mov	r3,r2
 813aafc:	00800584 	movi	r2,22
 813ab00:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 813ab04:	00bffa84 	movi	r2,-22
 813ab08:	00001306 	br	813ab58 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 813ab0c:	e0bffe17 	ldw	r2,-8(fp)
 813ab10:	e0ffff17 	ldw	r3,-4(fp)
 813ab14:	e0fffc15 	stw	r3,-16(fp)
 813ab18:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 813ab1c:	e0bffd17 	ldw	r2,-12(fp)
 813ab20:	e0fffc17 	ldw	r3,-16(fp)
 813ab24:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 813ab28:	e0bffc17 	ldw	r2,-16(fp)
 813ab2c:	10c00017 	ldw	r3,0(r2)
 813ab30:	e0bffd17 	ldw	r2,-12(fp)
 813ab34:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 813ab38:	e0bffc17 	ldw	r2,-16(fp)
 813ab3c:	10800017 	ldw	r2,0(r2)
 813ab40:	e0fffd17 	ldw	r3,-12(fp)
 813ab44:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 813ab48:	e0bffc17 	ldw	r2,-16(fp)
 813ab4c:	e0fffd17 	ldw	r3,-12(fp)
 813ab50:	10c00015 	stw	r3,0(r2)

  return 0;  
 813ab54:	0005883a 	mov	r2,zero
}
 813ab58:	e037883a 	mov	sp,fp
 813ab5c:	dfc00117 	ldw	ra,4(sp)
 813ab60:	df000017 	ldw	fp,0(sp)
 813ab64:	dec00204 	addi	sp,sp,8
 813ab68:	f800283a 	ret

0813ab6c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 813ab6c:	defffd04 	addi	sp,sp,-12
 813ab70:	dfc00215 	stw	ra,8(sp)
 813ab74:	df000115 	stw	fp,4(sp)
 813ab78:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 813ab7c:	00820534 	movhi	r2,2068
 813ab80:	10aec804 	addi	r2,r2,-17632
 813ab84:	e0bfff15 	stw	r2,-4(fp)
 813ab88:	00000606 	br	813aba4 <_do_ctors+0x38>
        (*ctor) (); 
 813ab8c:	e0bfff17 	ldw	r2,-4(fp)
 813ab90:	10800017 	ldw	r2,0(r2)
 813ab94:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 813ab98:	e0bfff17 	ldw	r2,-4(fp)
 813ab9c:	10bfff04 	addi	r2,r2,-4
 813aba0:	e0bfff15 	stw	r2,-4(fp)
 813aba4:	e0ffff17 	ldw	r3,-4(fp)
 813aba8:	00820534 	movhi	r2,2068
 813abac:	10aec904 	addi	r2,r2,-17628
 813abb0:	18bff62e 	bgeu	r3,r2,813ab8c <__alt_data_end+0xfc13ab8c>
        (*ctor) (); 
}
 813abb4:	0001883a 	nop
 813abb8:	e037883a 	mov	sp,fp
 813abbc:	dfc00117 	ldw	ra,4(sp)
 813abc0:	df000017 	ldw	fp,0(sp)
 813abc4:	dec00204 	addi	sp,sp,8
 813abc8:	f800283a 	ret

0813abcc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 813abcc:	defffd04 	addi	sp,sp,-12
 813abd0:	dfc00215 	stw	ra,8(sp)
 813abd4:	df000115 	stw	fp,4(sp)
 813abd8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 813abdc:	00820534 	movhi	r2,2068
 813abe0:	10aec804 	addi	r2,r2,-17632
 813abe4:	e0bfff15 	stw	r2,-4(fp)
 813abe8:	00000606 	br	813ac04 <_do_dtors+0x38>
        (*dtor) (); 
 813abec:	e0bfff17 	ldw	r2,-4(fp)
 813abf0:	10800017 	ldw	r2,0(r2)
 813abf4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 813abf8:	e0bfff17 	ldw	r2,-4(fp)
 813abfc:	10bfff04 	addi	r2,r2,-4
 813ac00:	e0bfff15 	stw	r2,-4(fp)
 813ac04:	e0ffff17 	ldw	r3,-4(fp)
 813ac08:	00820534 	movhi	r2,2068
 813ac0c:	10aec904 	addi	r2,r2,-17628
 813ac10:	18bff62e 	bgeu	r3,r2,813abec <__alt_data_end+0xfc13abec>
        (*dtor) (); 
}
 813ac14:	0001883a 	nop
 813ac18:	e037883a 	mov	sp,fp
 813ac1c:	dfc00117 	ldw	ra,4(sp)
 813ac20:	df000017 	ldw	fp,0(sp)
 813ac24:	dec00204 	addi	sp,sp,8
 813ac28:	f800283a 	ret

0813ac2c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 813ac2c:	deffff04 	addi	sp,sp,-4
 813ac30:	df000015 	stw	fp,0(sp)
 813ac34:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 813ac38:	0001883a 	nop
 813ac3c:	e037883a 	mov	sp,fp
 813ac40:	df000017 	ldw	fp,0(sp)
 813ac44:	dec00104 	addi	sp,sp,4
 813ac48:	f800283a 	ret

0813ac4c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 813ac4c:	defff904 	addi	sp,sp,-28
 813ac50:	dfc00615 	stw	ra,24(sp)
 813ac54:	df000515 	stw	fp,20(sp)
 813ac58:	df000504 	addi	fp,sp,20
 813ac5c:	e13ffc15 	stw	r4,-16(fp)
 813ac60:	e17ffd15 	stw	r5,-12(fp)
 813ac64:	e1bffe15 	stw	r6,-8(fp)
 813ac68:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 813ac6c:	e0800217 	ldw	r2,8(fp)
 813ac70:	d8800015 	stw	r2,0(sp)
 813ac74:	e1ffff17 	ldw	r7,-4(fp)
 813ac78:	e1bffe17 	ldw	r6,-8(fp)
 813ac7c:	e17ffd17 	ldw	r5,-12(fp)
 813ac80:	e13ffc17 	ldw	r4,-16(fp)
 813ac84:	813adfc0 	call	813adfc <alt_iic_isr_register>
}  
 813ac88:	e037883a 	mov	sp,fp
 813ac8c:	dfc00117 	ldw	ra,4(sp)
 813ac90:	df000017 	ldw	fp,0(sp)
 813ac94:	dec00204 	addi	sp,sp,8
 813ac98:	f800283a 	ret

0813ac9c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 813ac9c:	defff904 	addi	sp,sp,-28
 813aca0:	df000615 	stw	fp,24(sp)
 813aca4:	df000604 	addi	fp,sp,24
 813aca8:	e13ffe15 	stw	r4,-8(fp)
 813acac:	e17fff15 	stw	r5,-4(fp)
 813acb0:	e0bfff17 	ldw	r2,-4(fp)
 813acb4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813acb8:	0005303a 	rdctl	r2,status
 813acbc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813acc0:	e0fffb17 	ldw	r3,-20(fp)
 813acc4:	00bfff84 	movi	r2,-2
 813acc8:	1884703a 	and	r2,r3,r2
 813accc:	1001703a 	wrctl	status,r2
  
  return context;
 813acd0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 813acd4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 813acd8:	00c00044 	movi	r3,1
 813acdc:	e0bffa17 	ldw	r2,-24(fp)
 813ace0:	1884983a 	sll	r2,r3,r2
 813ace4:	1007883a 	mov	r3,r2
 813ace8:	d0a6d917 	ldw	r2,-25756(gp)
 813acec:	1884b03a 	or	r2,r3,r2
 813acf0:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 813acf4:	d0a6d917 	ldw	r2,-25756(gp)
 813acf8:	100170fa 	wrctl	ienable,r2
 813acfc:	e0bffc17 	ldw	r2,-16(fp)
 813ad00:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813ad04:	e0bffd17 	ldw	r2,-12(fp)
 813ad08:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 813ad0c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 813ad10:	0001883a 	nop
}
 813ad14:	e037883a 	mov	sp,fp
 813ad18:	df000017 	ldw	fp,0(sp)
 813ad1c:	dec00104 	addi	sp,sp,4
 813ad20:	f800283a 	ret

0813ad24 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 813ad24:	defff904 	addi	sp,sp,-28
 813ad28:	df000615 	stw	fp,24(sp)
 813ad2c:	df000604 	addi	fp,sp,24
 813ad30:	e13ffe15 	stw	r4,-8(fp)
 813ad34:	e17fff15 	stw	r5,-4(fp)
 813ad38:	e0bfff17 	ldw	r2,-4(fp)
 813ad3c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813ad40:	0005303a 	rdctl	r2,status
 813ad44:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813ad48:	e0fffb17 	ldw	r3,-20(fp)
 813ad4c:	00bfff84 	movi	r2,-2
 813ad50:	1884703a 	and	r2,r3,r2
 813ad54:	1001703a 	wrctl	status,r2
  
  return context;
 813ad58:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 813ad5c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 813ad60:	00c00044 	movi	r3,1
 813ad64:	e0bffa17 	ldw	r2,-24(fp)
 813ad68:	1884983a 	sll	r2,r3,r2
 813ad6c:	0084303a 	nor	r2,zero,r2
 813ad70:	1007883a 	mov	r3,r2
 813ad74:	d0a6d917 	ldw	r2,-25756(gp)
 813ad78:	1884703a 	and	r2,r3,r2
 813ad7c:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 813ad80:	d0a6d917 	ldw	r2,-25756(gp)
 813ad84:	100170fa 	wrctl	ienable,r2
 813ad88:	e0bffc17 	ldw	r2,-16(fp)
 813ad8c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813ad90:	e0bffd17 	ldw	r2,-12(fp)
 813ad94:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 813ad98:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 813ad9c:	0001883a 	nop
}
 813ada0:	e037883a 	mov	sp,fp
 813ada4:	df000017 	ldw	fp,0(sp)
 813ada8:	dec00104 	addi	sp,sp,4
 813adac:	f800283a 	ret

0813adb0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 813adb0:	defffc04 	addi	sp,sp,-16
 813adb4:	df000315 	stw	fp,12(sp)
 813adb8:	df000304 	addi	fp,sp,12
 813adbc:	e13ffe15 	stw	r4,-8(fp)
 813adc0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 813adc4:	000530fa 	rdctl	r2,ienable
 813adc8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 813adcc:	00c00044 	movi	r3,1
 813add0:	e0bfff17 	ldw	r2,-4(fp)
 813add4:	1884983a 	sll	r2,r3,r2
 813add8:	1007883a 	mov	r3,r2
 813addc:	e0bffd17 	ldw	r2,-12(fp)
 813ade0:	1884703a 	and	r2,r3,r2
 813ade4:	1004c03a 	cmpne	r2,r2,zero
 813ade8:	10803fcc 	andi	r2,r2,255
}
 813adec:	e037883a 	mov	sp,fp
 813adf0:	df000017 	ldw	fp,0(sp)
 813adf4:	dec00104 	addi	sp,sp,4
 813adf8:	f800283a 	ret

0813adfc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 813adfc:	defff504 	addi	sp,sp,-44
 813ae00:	dfc00a15 	stw	ra,40(sp)
 813ae04:	df000915 	stw	fp,36(sp)
 813ae08:	df000904 	addi	fp,sp,36
 813ae0c:	e13ffc15 	stw	r4,-16(fp)
 813ae10:	e17ffd15 	stw	r5,-12(fp)
 813ae14:	e1bffe15 	stw	r6,-8(fp)
 813ae18:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 813ae1c:	00bffa84 	movi	r2,-22
 813ae20:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 813ae24:	e0bffd17 	ldw	r2,-12(fp)
 813ae28:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 813ae2c:	e0bff817 	ldw	r2,-32(fp)
 813ae30:	10800808 	cmpgei	r2,r2,32
 813ae34:	1000271e 	bne	r2,zero,813aed4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813ae38:	0005303a 	rdctl	r2,status
 813ae3c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813ae40:	e0fffb17 	ldw	r3,-20(fp)
 813ae44:	00bfff84 	movi	r2,-2
 813ae48:	1884703a 	and	r2,r3,r2
 813ae4c:	1001703a 	wrctl	status,r2
  
  return context;
 813ae50:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 813ae54:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 813ae58:	00820534 	movhi	r2,2068
 813ae5c:	10bd2004 	addi	r2,r2,-2944
 813ae60:	e0fff817 	ldw	r3,-32(fp)
 813ae64:	180690fa 	slli	r3,r3,3
 813ae68:	10c5883a 	add	r2,r2,r3
 813ae6c:	e0fffe17 	ldw	r3,-8(fp)
 813ae70:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 813ae74:	00820534 	movhi	r2,2068
 813ae78:	10bd2004 	addi	r2,r2,-2944
 813ae7c:	e0fff817 	ldw	r3,-32(fp)
 813ae80:	180690fa 	slli	r3,r3,3
 813ae84:	10c5883a 	add	r2,r2,r3
 813ae88:	10800104 	addi	r2,r2,4
 813ae8c:	e0ffff17 	ldw	r3,-4(fp)
 813ae90:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 813ae94:	e0bffe17 	ldw	r2,-8(fp)
 813ae98:	10000526 	beq	r2,zero,813aeb0 <alt_iic_isr_register+0xb4>
 813ae9c:	e0bff817 	ldw	r2,-32(fp)
 813aea0:	100b883a 	mov	r5,r2
 813aea4:	e13ffc17 	ldw	r4,-16(fp)
 813aea8:	813ac9c0 	call	813ac9c <alt_ic_irq_enable>
 813aeac:	00000406 	br	813aec0 <alt_iic_isr_register+0xc4>
 813aeb0:	e0bff817 	ldw	r2,-32(fp)
 813aeb4:	100b883a 	mov	r5,r2
 813aeb8:	e13ffc17 	ldw	r4,-16(fp)
 813aebc:	813ad240 	call	813ad24 <alt_ic_irq_disable>
 813aec0:	e0bff715 	stw	r2,-36(fp)
 813aec4:	e0bffa17 	ldw	r2,-24(fp)
 813aec8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813aecc:	e0bff917 	ldw	r2,-28(fp)
 813aed0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 813aed4:	e0bff717 	ldw	r2,-36(fp)
}
 813aed8:	e037883a 	mov	sp,fp
 813aedc:	dfc00117 	ldw	ra,4(sp)
 813aee0:	df000017 	ldw	fp,0(sp)
 813aee4:	dec00204 	addi	sp,sp,8
 813aee8:	f800283a 	ret

0813aeec <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 813aeec:	defff804 	addi	sp,sp,-32
 813aef0:	dfc00715 	stw	ra,28(sp)
 813aef4:	df000615 	stw	fp,24(sp)
 813aef8:	dc000515 	stw	r16,20(sp)
 813aefc:	df000604 	addi	fp,sp,24
 813af00:	e13ffb15 	stw	r4,-20(fp)
 813af04:	e17ffc15 	stw	r5,-16(fp)
 813af08:	e1bffd15 	stw	r6,-12(fp)
 813af0c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 813af10:	e1bffe17 	ldw	r6,-8(fp)
 813af14:	e17ffd17 	ldw	r5,-12(fp)
 813af18:	e13ffc17 	ldw	r4,-16(fp)
 813af1c:	813b1740 	call	813b174 <open>
 813af20:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 813af24:	e0bffa17 	ldw	r2,-24(fp)
 813af28:	10002216 	blt	r2,zero,813afb4 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 813af2c:	04020534 	movhi	r16,2068
 813af30:	8431c104 	addi	r16,r16,-14588
 813af34:	e0bffa17 	ldw	r2,-24(fp)
 813af38:	01400304 	movi	r5,12
 813af3c:	1009883a 	mov	r4,r2
 813af40:	812c2b80 	call	812c2b8 <__mulsi3>
 813af44:	8085883a 	add	r2,r16,r2
 813af48:	10c00017 	ldw	r3,0(r2)
 813af4c:	e0bffb17 	ldw	r2,-20(fp)
 813af50:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 813af54:	04020534 	movhi	r16,2068
 813af58:	8431c104 	addi	r16,r16,-14588
 813af5c:	e0bffa17 	ldw	r2,-24(fp)
 813af60:	01400304 	movi	r5,12
 813af64:	1009883a 	mov	r4,r2
 813af68:	812c2b80 	call	812c2b8 <__mulsi3>
 813af6c:	8085883a 	add	r2,r16,r2
 813af70:	10800104 	addi	r2,r2,4
 813af74:	10c00017 	ldw	r3,0(r2)
 813af78:	e0bffb17 	ldw	r2,-20(fp)
 813af7c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 813af80:	04020534 	movhi	r16,2068
 813af84:	8431c104 	addi	r16,r16,-14588
 813af88:	e0bffa17 	ldw	r2,-24(fp)
 813af8c:	01400304 	movi	r5,12
 813af90:	1009883a 	mov	r4,r2
 813af94:	812c2b80 	call	812c2b8 <__mulsi3>
 813af98:	8085883a 	add	r2,r16,r2
 813af9c:	10800204 	addi	r2,r2,8
 813afa0:	10c00017 	ldw	r3,0(r2)
 813afa4:	e0bffb17 	ldw	r2,-20(fp)
 813afa8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 813afac:	e13ffa17 	ldw	r4,-24(fp)
 813afb0:	813991c0 	call	813991c <alt_release_fd>
  }
} 
 813afb4:	0001883a 	nop
 813afb8:	e6ffff04 	addi	sp,fp,-4
 813afbc:	dfc00217 	ldw	ra,8(sp)
 813afc0:	df000117 	ldw	fp,4(sp)
 813afc4:	dc000017 	ldw	r16,0(sp)
 813afc8:	dec00304 	addi	sp,sp,12
 813afcc:	f800283a 	ret

0813afd0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 813afd0:	defffb04 	addi	sp,sp,-20
 813afd4:	dfc00415 	stw	ra,16(sp)
 813afd8:	df000315 	stw	fp,12(sp)
 813afdc:	df000304 	addi	fp,sp,12
 813afe0:	e13ffd15 	stw	r4,-12(fp)
 813afe4:	e17ffe15 	stw	r5,-8(fp)
 813afe8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 813afec:	01c07fc4 	movi	r7,511
 813aff0:	01800044 	movi	r6,1
 813aff4:	e17ffd17 	ldw	r5,-12(fp)
 813aff8:	01020534 	movhi	r4,2068
 813affc:	2131c404 	addi	r4,r4,-14576
 813b000:	813aeec0 	call	813aeec <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 813b004:	01c07fc4 	movi	r7,511
 813b008:	000d883a 	mov	r6,zero
 813b00c:	e17ffe17 	ldw	r5,-8(fp)
 813b010:	01020534 	movhi	r4,2068
 813b014:	2131c104 	addi	r4,r4,-14588
 813b018:	813aeec0 	call	813aeec <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 813b01c:	01c07fc4 	movi	r7,511
 813b020:	01800044 	movi	r6,1
 813b024:	e17fff17 	ldw	r5,-4(fp)
 813b028:	01020534 	movhi	r4,2068
 813b02c:	2131c704 	addi	r4,r4,-14564
 813b030:	813aeec0 	call	813aeec <alt_open_fd>
}  
 813b034:	0001883a 	nop
 813b038:	e037883a 	mov	sp,fp
 813b03c:	dfc00117 	ldw	ra,4(sp)
 813b040:	df000017 	ldw	fp,0(sp)
 813b044:	dec00204 	addi	sp,sp,8
 813b048:	f800283a 	ret

0813b04c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 813b04c:	defffe04 	addi	sp,sp,-8
 813b050:	dfc00115 	stw	ra,4(sp)
 813b054:	df000015 	stw	fp,0(sp)
 813b058:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 813b05c:	d0a00d17 	ldw	r2,-32716(gp)
 813b060:	10000326 	beq	r2,zero,813b070 <alt_get_errno+0x24>
 813b064:	d0a00d17 	ldw	r2,-32716(gp)
 813b068:	103ee83a 	callr	r2
 813b06c:	00000106 	br	813b074 <alt_get_errno+0x28>
 813b070:	d0a6d504 	addi	r2,gp,-25772
}
 813b074:	e037883a 	mov	sp,fp
 813b078:	dfc00117 	ldw	ra,4(sp)
 813b07c:	df000017 	ldw	fp,0(sp)
 813b080:	dec00204 	addi	sp,sp,8
 813b084:	f800283a 	ret

0813b088 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 813b088:	defffb04 	addi	sp,sp,-20
 813b08c:	dfc00415 	stw	ra,16(sp)
 813b090:	df000315 	stw	fp,12(sp)
 813b094:	dc000215 	stw	r16,8(sp)
 813b098:	df000304 	addi	fp,sp,12
 813b09c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 813b0a0:	e0bffe17 	ldw	r2,-8(fp)
 813b0a4:	10800217 	ldw	r2,8(r2)
 813b0a8:	10d00034 	orhi	r3,r2,16384
 813b0ac:	e0bffe17 	ldw	r2,-8(fp)
 813b0b0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 813b0b4:	e03ffd15 	stw	zero,-12(fp)
 813b0b8:	00002306 	br	813b148 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 813b0bc:	04020534 	movhi	r16,2068
 813b0c0:	8431c104 	addi	r16,r16,-14588
 813b0c4:	e0bffd17 	ldw	r2,-12(fp)
 813b0c8:	01400304 	movi	r5,12
 813b0cc:	1009883a 	mov	r4,r2
 813b0d0:	812c2b80 	call	812c2b8 <__mulsi3>
 813b0d4:	8085883a 	add	r2,r16,r2
 813b0d8:	10c00017 	ldw	r3,0(r2)
 813b0dc:	e0bffe17 	ldw	r2,-8(fp)
 813b0e0:	10800017 	ldw	r2,0(r2)
 813b0e4:	1880151e 	bne	r3,r2,813b13c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 813b0e8:	04020534 	movhi	r16,2068
 813b0ec:	8431c104 	addi	r16,r16,-14588
 813b0f0:	e0bffd17 	ldw	r2,-12(fp)
 813b0f4:	01400304 	movi	r5,12
 813b0f8:	1009883a 	mov	r4,r2
 813b0fc:	812c2b80 	call	812c2b8 <__mulsi3>
 813b100:	8085883a 	add	r2,r16,r2
 813b104:	10800204 	addi	r2,r2,8
 813b108:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 813b10c:	10000b0e 	bge	r2,zero,813b13c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 813b110:	01400304 	movi	r5,12
 813b114:	e13ffd17 	ldw	r4,-12(fp)
 813b118:	812c2b80 	call	812c2b8 <__mulsi3>
 813b11c:	1007883a 	mov	r3,r2
 813b120:	00820534 	movhi	r2,2068
 813b124:	10b1c104 	addi	r2,r2,-14588
 813b128:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 813b12c:	e0bffe17 	ldw	r2,-8(fp)
 813b130:	18800226 	beq	r3,r2,813b13c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 813b134:	00bffcc4 	movi	r2,-13
 813b138:	00000806 	br	813b15c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 813b13c:	e0bffd17 	ldw	r2,-12(fp)
 813b140:	10800044 	addi	r2,r2,1
 813b144:	e0bffd15 	stw	r2,-12(fp)
 813b148:	d0a00c17 	ldw	r2,-32720(gp)
 813b14c:	1007883a 	mov	r3,r2
 813b150:	e0bffd17 	ldw	r2,-12(fp)
 813b154:	18bfd92e 	bgeu	r3,r2,813b0bc <__alt_data_end+0xfc13b0bc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 813b158:	0005883a 	mov	r2,zero
}
 813b15c:	e6ffff04 	addi	sp,fp,-4
 813b160:	dfc00217 	ldw	ra,8(sp)
 813b164:	df000117 	ldw	fp,4(sp)
 813b168:	dc000017 	ldw	r16,0(sp)
 813b16c:	dec00304 	addi	sp,sp,12
 813b170:	f800283a 	ret

0813b174 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 813b174:	defff604 	addi	sp,sp,-40
 813b178:	dfc00915 	stw	ra,36(sp)
 813b17c:	df000815 	stw	fp,32(sp)
 813b180:	df000804 	addi	fp,sp,32
 813b184:	e13ffd15 	stw	r4,-12(fp)
 813b188:	e17ffe15 	stw	r5,-8(fp)
 813b18c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 813b190:	00bfffc4 	movi	r2,-1
 813b194:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 813b198:	00bffb44 	movi	r2,-19
 813b19c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 813b1a0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 813b1a4:	d1600a04 	addi	r5,gp,-32728
 813b1a8:	e13ffd17 	ldw	r4,-12(fp)
 813b1ac:	813b4980 	call	813b498 <alt_find_dev>
 813b1b0:	e0bff815 	stw	r2,-32(fp)
 813b1b4:	e0bff817 	ldw	r2,-32(fp)
 813b1b8:	1000051e 	bne	r2,zero,813b1d0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 813b1bc:	e13ffd17 	ldw	r4,-12(fp)
 813b1c0:	813b5280 	call	813b528 <alt_find_file>
 813b1c4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 813b1c8:	00800044 	movi	r2,1
 813b1cc:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 813b1d0:	e0bff817 	ldw	r2,-32(fp)
 813b1d4:	10002b26 	beq	r2,zero,813b284 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 813b1d8:	e13ff817 	ldw	r4,-32(fp)
 813b1dc:	813b6300 	call	813b630 <alt_get_fd>
 813b1e0:	e0bff915 	stw	r2,-28(fp)
 813b1e4:	e0bff917 	ldw	r2,-28(fp)
 813b1e8:	1000030e 	bge	r2,zero,813b1f8 <open+0x84>
    {
      status = index;
 813b1ec:	e0bff917 	ldw	r2,-28(fp)
 813b1f0:	e0bffa15 	stw	r2,-24(fp)
 813b1f4:	00002506 	br	813b28c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 813b1f8:	01400304 	movi	r5,12
 813b1fc:	e13ff917 	ldw	r4,-28(fp)
 813b200:	812c2b80 	call	812c2b8 <__mulsi3>
 813b204:	1007883a 	mov	r3,r2
 813b208:	00820534 	movhi	r2,2068
 813b20c:	10b1c104 	addi	r2,r2,-14588
 813b210:	1885883a 	add	r2,r3,r2
 813b214:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 813b218:	e0fffe17 	ldw	r3,-8(fp)
 813b21c:	00900034 	movhi	r2,16384
 813b220:	10bfffc4 	addi	r2,r2,-1
 813b224:	1886703a 	and	r3,r3,r2
 813b228:	e0bffc17 	ldw	r2,-16(fp)
 813b22c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 813b230:	e0bffb17 	ldw	r2,-20(fp)
 813b234:	1000051e 	bne	r2,zero,813b24c <open+0xd8>
 813b238:	e13ffc17 	ldw	r4,-16(fp)
 813b23c:	813b0880 	call	813b088 <alt_file_locked>
 813b240:	e0bffa15 	stw	r2,-24(fp)
 813b244:	e0bffa17 	ldw	r2,-24(fp)
 813b248:	10001016 	blt	r2,zero,813b28c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 813b24c:	e0bff817 	ldw	r2,-32(fp)
 813b250:	10800317 	ldw	r2,12(r2)
 813b254:	10000826 	beq	r2,zero,813b278 <open+0x104>
 813b258:	e0bff817 	ldw	r2,-32(fp)
 813b25c:	10800317 	ldw	r2,12(r2)
 813b260:	e1ffff17 	ldw	r7,-4(fp)
 813b264:	e1bffe17 	ldw	r6,-8(fp)
 813b268:	e17ffd17 	ldw	r5,-12(fp)
 813b26c:	e13ffc17 	ldw	r4,-16(fp)
 813b270:	103ee83a 	callr	r2
 813b274:	00000106 	br	813b27c <open+0x108>
 813b278:	0005883a 	mov	r2,zero
 813b27c:	e0bffa15 	stw	r2,-24(fp)
 813b280:	00000206 	br	813b28c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 813b284:	00bffb44 	movi	r2,-19
 813b288:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 813b28c:	e0bffa17 	ldw	r2,-24(fp)
 813b290:	1000090e 	bge	r2,zero,813b2b8 <open+0x144>
  {
    alt_release_fd (index);  
 813b294:	e13ff917 	ldw	r4,-28(fp)
 813b298:	813991c0 	call	813991c <alt_release_fd>
    ALT_ERRNO = -status;
 813b29c:	813b04c0 	call	813b04c <alt_get_errno>
 813b2a0:	1007883a 	mov	r3,r2
 813b2a4:	e0bffa17 	ldw	r2,-24(fp)
 813b2a8:	0085c83a 	sub	r2,zero,r2
 813b2ac:	18800015 	stw	r2,0(r3)
    return -1;
 813b2b0:	00bfffc4 	movi	r2,-1
 813b2b4:	00000106 	br	813b2bc <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 813b2b8:	e0bff917 	ldw	r2,-28(fp)
}
 813b2bc:	e037883a 	mov	sp,fp
 813b2c0:	dfc00117 	ldw	ra,4(sp)
 813b2c4:	df000017 	ldw	fp,0(sp)
 813b2c8:	dec00204 	addi	sp,sp,8
 813b2cc:	f800283a 	ret

0813b2d0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 813b2d0:	defffa04 	addi	sp,sp,-24
 813b2d4:	df000515 	stw	fp,20(sp)
 813b2d8:	df000504 	addi	fp,sp,20
 813b2dc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 813b2e0:	0005303a 	rdctl	r2,status
 813b2e4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 813b2e8:	e0fffc17 	ldw	r3,-16(fp)
 813b2ec:	00bfff84 	movi	r2,-2
 813b2f0:	1884703a 	and	r2,r3,r2
 813b2f4:	1001703a 	wrctl	status,r2
  
  return context;
 813b2f8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 813b2fc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 813b300:	e0bfff17 	ldw	r2,-4(fp)
 813b304:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 813b308:	e0bffd17 	ldw	r2,-12(fp)
 813b30c:	10800017 	ldw	r2,0(r2)
 813b310:	e0fffd17 	ldw	r3,-12(fp)
 813b314:	18c00117 	ldw	r3,4(r3)
 813b318:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 813b31c:	e0bffd17 	ldw	r2,-12(fp)
 813b320:	10800117 	ldw	r2,4(r2)
 813b324:	e0fffd17 	ldw	r3,-12(fp)
 813b328:	18c00017 	ldw	r3,0(r3)
 813b32c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 813b330:	e0bffd17 	ldw	r2,-12(fp)
 813b334:	e0fffd17 	ldw	r3,-12(fp)
 813b338:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 813b33c:	e0bffd17 	ldw	r2,-12(fp)
 813b340:	e0fffd17 	ldw	r3,-12(fp)
 813b344:	10c00015 	stw	r3,0(r2)
 813b348:	e0bffb17 	ldw	r2,-20(fp)
 813b34c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 813b350:	e0bffe17 	ldw	r2,-8(fp)
 813b354:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 813b358:	0001883a 	nop
 813b35c:	e037883a 	mov	sp,fp
 813b360:	df000017 	ldw	fp,0(sp)
 813b364:	dec00104 	addi	sp,sp,4
 813b368:	f800283a 	ret

0813b36c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 813b36c:	defffb04 	addi	sp,sp,-20
 813b370:	dfc00415 	stw	ra,16(sp)
 813b374:	df000315 	stw	fp,12(sp)
 813b378:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 813b37c:	d0a01017 	ldw	r2,-32704(gp)
 813b380:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 813b384:	d0a6db17 	ldw	r2,-25748(gp)
 813b388:	10800044 	addi	r2,r2,1
 813b38c:	d0a6db15 	stw	r2,-25748(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 813b390:	00002e06 	br	813b44c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 813b394:	e0bffd17 	ldw	r2,-12(fp)
 813b398:	10800017 	ldw	r2,0(r2)
 813b39c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 813b3a0:	e0bffd17 	ldw	r2,-12(fp)
 813b3a4:	10800403 	ldbu	r2,16(r2)
 813b3a8:	10803fcc 	andi	r2,r2,255
 813b3ac:	10000426 	beq	r2,zero,813b3c0 <alt_tick+0x54>
 813b3b0:	d0a6db17 	ldw	r2,-25748(gp)
 813b3b4:	1000021e 	bne	r2,zero,813b3c0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 813b3b8:	e0bffd17 	ldw	r2,-12(fp)
 813b3bc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 813b3c0:	e0bffd17 	ldw	r2,-12(fp)
 813b3c4:	10800217 	ldw	r2,8(r2)
 813b3c8:	d0e6db17 	ldw	r3,-25748(gp)
 813b3cc:	18801d36 	bltu	r3,r2,813b444 <alt_tick+0xd8>
 813b3d0:	e0bffd17 	ldw	r2,-12(fp)
 813b3d4:	10800403 	ldbu	r2,16(r2)
 813b3d8:	10803fcc 	andi	r2,r2,255
 813b3dc:	1000191e 	bne	r2,zero,813b444 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 813b3e0:	e0bffd17 	ldw	r2,-12(fp)
 813b3e4:	10800317 	ldw	r2,12(r2)
 813b3e8:	e0fffd17 	ldw	r3,-12(fp)
 813b3ec:	18c00517 	ldw	r3,20(r3)
 813b3f0:	1809883a 	mov	r4,r3
 813b3f4:	103ee83a 	callr	r2
 813b3f8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 813b3fc:	e0bfff17 	ldw	r2,-4(fp)
 813b400:	1000031e 	bne	r2,zero,813b410 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 813b404:	e13ffd17 	ldw	r4,-12(fp)
 813b408:	813b2d00 	call	813b2d0 <alt_alarm_stop>
 813b40c:	00000d06 	br	813b444 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 813b410:	e0bffd17 	ldw	r2,-12(fp)
 813b414:	10c00217 	ldw	r3,8(r2)
 813b418:	e0bfff17 	ldw	r2,-4(fp)
 813b41c:	1887883a 	add	r3,r3,r2
 813b420:	e0bffd17 	ldw	r2,-12(fp)
 813b424:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 813b428:	e0bffd17 	ldw	r2,-12(fp)
 813b42c:	10c00217 	ldw	r3,8(r2)
 813b430:	d0a6db17 	ldw	r2,-25748(gp)
 813b434:	1880032e 	bgeu	r3,r2,813b444 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 813b438:	e0bffd17 	ldw	r2,-12(fp)
 813b43c:	00c00044 	movi	r3,1
 813b440:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 813b444:	e0bffe17 	ldw	r2,-8(fp)
 813b448:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 813b44c:	e0fffd17 	ldw	r3,-12(fp)
 813b450:	d0a01004 	addi	r2,gp,-32704
 813b454:	18bfcf1e 	bne	r3,r2,813b394 <__alt_data_end+0xfc13b394>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 813b458:	0001883a 	nop
}
 813b45c:	0001883a 	nop
 813b460:	e037883a 	mov	sp,fp
 813b464:	dfc00117 	ldw	ra,4(sp)
 813b468:	df000017 	ldw	fp,0(sp)
 813b46c:	dec00204 	addi	sp,sp,8
 813b470:	f800283a 	ret

0813b474 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 813b474:	deffff04 	addi	sp,sp,-4
 813b478:	df000015 	stw	fp,0(sp)
 813b47c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 813b480:	000170fa 	wrctl	ienable,zero
}
 813b484:	0001883a 	nop
 813b488:	e037883a 	mov	sp,fp
 813b48c:	df000017 	ldw	fp,0(sp)
 813b490:	dec00104 	addi	sp,sp,4
 813b494:	f800283a 	ret

0813b498 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 813b498:	defffa04 	addi	sp,sp,-24
 813b49c:	dfc00515 	stw	ra,20(sp)
 813b4a0:	df000415 	stw	fp,16(sp)
 813b4a4:	df000404 	addi	fp,sp,16
 813b4a8:	e13ffe15 	stw	r4,-8(fp)
 813b4ac:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 813b4b0:	e0bfff17 	ldw	r2,-4(fp)
 813b4b4:	10800017 	ldw	r2,0(r2)
 813b4b8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 813b4bc:	e13ffe17 	ldw	r4,-8(fp)
 813b4c0:	812c4200 	call	812c420 <strlen>
 813b4c4:	10800044 	addi	r2,r2,1
 813b4c8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 813b4cc:	00000d06 	br	813b504 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 813b4d0:	e0bffc17 	ldw	r2,-16(fp)
 813b4d4:	10800217 	ldw	r2,8(r2)
 813b4d8:	e0fffd17 	ldw	r3,-12(fp)
 813b4dc:	180d883a 	mov	r6,r3
 813b4e0:	e17ffe17 	ldw	r5,-8(fp)
 813b4e4:	1009883a 	mov	r4,r2
 813b4e8:	813b7dc0 	call	813b7dc <memcmp>
 813b4ec:	1000021e 	bne	r2,zero,813b4f8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 813b4f0:	e0bffc17 	ldw	r2,-16(fp)
 813b4f4:	00000706 	br	813b514 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 813b4f8:	e0bffc17 	ldw	r2,-16(fp)
 813b4fc:	10800017 	ldw	r2,0(r2)
 813b500:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 813b504:	e0fffc17 	ldw	r3,-16(fp)
 813b508:	e0bfff17 	ldw	r2,-4(fp)
 813b50c:	18bff01e 	bne	r3,r2,813b4d0 <__alt_data_end+0xfc13b4d0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 813b510:	0005883a 	mov	r2,zero
}
 813b514:	e037883a 	mov	sp,fp
 813b518:	dfc00117 	ldw	ra,4(sp)
 813b51c:	df000017 	ldw	fp,0(sp)
 813b520:	dec00204 	addi	sp,sp,8
 813b524:	f800283a 	ret

0813b528 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 813b528:	defffb04 	addi	sp,sp,-20
 813b52c:	dfc00415 	stw	ra,16(sp)
 813b530:	df000315 	stw	fp,12(sp)
 813b534:	df000304 	addi	fp,sp,12
 813b538:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 813b53c:	d0a00817 	ldw	r2,-32736(gp)
 813b540:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 813b544:	00003106 	br	813b60c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 813b548:	e0bffd17 	ldw	r2,-12(fp)
 813b54c:	10800217 	ldw	r2,8(r2)
 813b550:	1009883a 	mov	r4,r2
 813b554:	812c4200 	call	812c420 <strlen>
 813b558:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 813b55c:	e0bffd17 	ldw	r2,-12(fp)
 813b560:	10c00217 	ldw	r3,8(r2)
 813b564:	e0bffe17 	ldw	r2,-8(fp)
 813b568:	10bfffc4 	addi	r2,r2,-1
 813b56c:	1885883a 	add	r2,r3,r2
 813b570:	10800003 	ldbu	r2,0(r2)
 813b574:	10803fcc 	andi	r2,r2,255
 813b578:	1080201c 	xori	r2,r2,128
 813b57c:	10bfe004 	addi	r2,r2,-128
 813b580:	10800bd8 	cmpnei	r2,r2,47
 813b584:	1000031e 	bne	r2,zero,813b594 <alt_find_file+0x6c>
    {
      len -= 1;
 813b588:	e0bffe17 	ldw	r2,-8(fp)
 813b58c:	10bfffc4 	addi	r2,r2,-1
 813b590:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 813b594:	e0bffe17 	ldw	r2,-8(fp)
 813b598:	e0ffff17 	ldw	r3,-4(fp)
 813b59c:	1885883a 	add	r2,r3,r2
 813b5a0:	10800003 	ldbu	r2,0(r2)
 813b5a4:	10803fcc 	andi	r2,r2,255
 813b5a8:	1080201c 	xori	r2,r2,128
 813b5ac:	10bfe004 	addi	r2,r2,-128
 813b5b0:	10800be0 	cmpeqi	r2,r2,47
 813b5b4:	1000081e 	bne	r2,zero,813b5d8 <alt_find_file+0xb0>
 813b5b8:	e0bffe17 	ldw	r2,-8(fp)
 813b5bc:	e0ffff17 	ldw	r3,-4(fp)
 813b5c0:	1885883a 	add	r2,r3,r2
 813b5c4:	10800003 	ldbu	r2,0(r2)
 813b5c8:	10803fcc 	andi	r2,r2,255
 813b5cc:	1080201c 	xori	r2,r2,128
 813b5d0:	10bfe004 	addi	r2,r2,-128
 813b5d4:	10000a1e 	bne	r2,zero,813b600 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 813b5d8:	e0bffd17 	ldw	r2,-12(fp)
 813b5dc:	10800217 	ldw	r2,8(r2)
 813b5e0:	e0fffe17 	ldw	r3,-8(fp)
 813b5e4:	180d883a 	mov	r6,r3
 813b5e8:	e17fff17 	ldw	r5,-4(fp)
 813b5ec:	1009883a 	mov	r4,r2
 813b5f0:	813b7dc0 	call	813b7dc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 813b5f4:	1000021e 	bne	r2,zero,813b600 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 813b5f8:	e0bffd17 	ldw	r2,-12(fp)
 813b5fc:	00000706 	br	813b61c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 813b600:	e0bffd17 	ldw	r2,-12(fp)
 813b604:	10800017 	ldw	r2,0(r2)
 813b608:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 813b60c:	e0fffd17 	ldw	r3,-12(fp)
 813b610:	d0a00804 	addi	r2,gp,-32736
 813b614:	18bfcc1e 	bne	r3,r2,813b548 <__alt_data_end+0xfc13b548>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 813b618:	0005883a 	mov	r2,zero
}
 813b61c:	e037883a 	mov	sp,fp
 813b620:	dfc00117 	ldw	ra,4(sp)
 813b624:	df000017 	ldw	fp,0(sp)
 813b628:	dec00204 	addi	sp,sp,8
 813b62c:	f800283a 	ret

0813b630 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 813b630:	defffa04 	addi	sp,sp,-24
 813b634:	dfc00515 	stw	ra,20(sp)
 813b638:	df000415 	stw	fp,16(sp)
 813b63c:	dc000315 	stw	r16,12(sp)
 813b640:	df000404 	addi	fp,sp,16
 813b644:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 813b648:	00bffa04 	movi	r2,-24
 813b64c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 813b650:	e03ffc15 	stw	zero,-16(fp)
 813b654:	00001d06 	br	813b6cc <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 813b658:	04020534 	movhi	r16,2068
 813b65c:	8431c104 	addi	r16,r16,-14588
 813b660:	e0bffc17 	ldw	r2,-16(fp)
 813b664:	01400304 	movi	r5,12
 813b668:	1009883a 	mov	r4,r2
 813b66c:	812c2b80 	call	812c2b8 <__mulsi3>
 813b670:	8085883a 	add	r2,r16,r2
 813b674:	10800017 	ldw	r2,0(r2)
 813b678:	1000111e 	bne	r2,zero,813b6c0 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 813b67c:	04020534 	movhi	r16,2068
 813b680:	8431c104 	addi	r16,r16,-14588
 813b684:	e0bffc17 	ldw	r2,-16(fp)
 813b688:	01400304 	movi	r5,12
 813b68c:	1009883a 	mov	r4,r2
 813b690:	812c2b80 	call	812c2b8 <__mulsi3>
 813b694:	8085883a 	add	r2,r16,r2
 813b698:	e0fffe17 	ldw	r3,-8(fp)
 813b69c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 813b6a0:	d0e00c17 	ldw	r3,-32720(gp)
 813b6a4:	e0bffc17 	ldw	r2,-16(fp)
 813b6a8:	1880020e 	bge	r3,r2,813b6b4 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 813b6ac:	e0bffc17 	ldw	r2,-16(fp)
 813b6b0:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
 813b6b4:	e0bffc17 	ldw	r2,-16(fp)
 813b6b8:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 813b6bc:	00000606 	br	813b6d8 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 813b6c0:	e0bffc17 	ldw	r2,-16(fp)
 813b6c4:	10800044 	addi	r2,r2,1
 813b6c8:	e0bffc15 	stw	r2,-16(fp)
 813b6cc:	e0bffc17 	ldw	r2,-16(fp)
 813b6d0:	10800810 	cmplti	r2,r2,32
 813b6d4:	103fe01e 	bne	r2,zero,813b658 <__alt_data_end+0xfc13b658>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 813b6d8:	e0bffd17 	ldw	r2,-12(fp)
}
 813b6dc:	e6ffff04 	addi	sp,fp,-4
 813b6e0:	dfc00217 	ldw	ra,8(sp)
 813b6e4:	df000117 	ldw	fp,4(sp)
 813b6e8:	dc000017 	ldw	r16,0(sp)
 813b6ec:	dec00304 	addi	sp,sp,12
 813b6f0:	f800283a 	ret

0813b6f4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 813b6f4:	defffe04 	addi	sp,sp,-8
 813b6f8:	df000115 	stw	fp,4(sp)
 813b6fc:	df000104 	addi	fp,sp,4
 813b700:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 813b704:	e0bfff17 	ldw	r2,-4(fp)
 813b708:	10bffe84 	addi	r2,r2,-6
 813b70c:	10c00428 	cmpgeui	r3,r2,16
 813b710:	18001a1e 	bne	r3,zero,813b77c <alt_exception_cause_generated_bad_addr+0x88>
 813b714:	100690ba 	slli	r3,r2,2
 813b718:	00820534 	movhi	r2,2068
 813b71c:	10adcb04 	addi	r2,r2,-18644
 813b720:	1885883a 	add	r2,r3,r2
 813b724:	10800017 	ldw	r2,0(r2)
 813b728:	1000683a 	jmp	r2
 813b72c:	0813b76c 	andhi	zero,at,20189
 813b730:	0813b76c 	andhi	zero,at,20189
 813b734:	0813b77c 	xorhi	zero,at,20189
 813b738:	0813b77c 	xorhi	zero,at,20189
 813b73c:	0813b77c 	xorhi	zero,at,20189
 813b740:	0813b76c 	andhi	zero,at,20189
 813b744:	0813b774 	orhi	zero,at,20189
 813b748:	0813b77c 	xorhi	zero,at,20189
 813b74c:	0813b76c 	andhi	zero,at,20189
 813b750:	0813b76c 	andhi	zero,at,20189
 813b754:	0813b77c 	xorhi	zero,at,20189
 813b758:	0813b76c 	andhi	zero,at,20189
 813b75c:	0813b774 	orhi	zero,at,20189
 813b760:	0813b77c 	xorhi	zero,at,20189
 813b764:	0813b77c 	xorhi	zero,at,20189
 813b768:	0813b76c 	andhi	zero,at,20189
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 813b76c:	00800044 	movi	r2,1
 813b770:	00000306 	br	813b780 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 813b774:	0005883a 	mov	r2,zero
 813b778:	00000106 	br	813b780 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 813b77c:	0005883a 	mov	r2,zero
  }
}
 813b780:	e037883a 	mov	sp,fp
 813b784:	df000017 	ldw	fp,0(sp)
 813b788:	dec00104 	addi	sp,sp,4
 813b78c:	f800283a 	ret

0813b790 <atexit>:
 813b790:	200b883a 	mov	r5,r4
 813b794:	000f883a 	mov	r7,zero
 813b798:	000d883a 	mov	r6,zero
 813b79c:	0009883a 	mov	r4,zero
 813b7a0:	813b8581 	jmpi	813b858 <__register_exitproc>

0813b7a4 <exit>:
 813b7a4:	defffe04 	addi	sp,sp,-8
 813b7a8:	000b883a 	mov	r5,zero
 813b7ac:	dc000015 	stw	r16,0(sp)
 813b7b0:	dfc00115 	stw	ra,4(sp)
 813b7b4:	2021883a 	mov	r16,r4
 813b7b8:	813b9700 	call	813b970 <__call_exitprocs>
 813b7bc:	00820534 	movhi	r2,2068
 813b7c0:	10b63b04 	addi	r2,r2,-10004
 813b7c4:	11000017 	ldw	r4,0(r2)
 813b7c8:	20800f17 	ldw	r2,60(r4)
 813b7cc:	10000126 	beq	r2,zero,813b7d4 <exit+0x30>
 813b7d0:	103ee83a 	callr	r2
 813b7d4:	8009883a 	mov	r4,r16
 813b7d8:	813baf00 	call	813baf0 <_exit>

0813b7dc <memcmp>:
 813b7dc:	01c000c4 	movi	r7,3
 813b7e0:	3980192e 	bgeu	r7,r6,813b848 <memcmp+0x6c>
 813b7e4:	2144b03a 	or	r2,r4,r5
 813b7e8:	11c4703a 	and	r2,r2,r7
 813b7ec:	10000f26 	beq	r2,zero,813b82c <memcmp+0x50>
 813b7f0:	20800003 	ldbu	r2,0(r4)
 813b7f4:	28c00003 	ldbu	r3,0(r5)
 813b7f8:	10c0151e 	bne	r2,r3,813b850 <memcmp+0x74>
 813b7fc:	31bfff84 	addi	r6,r6,-2
 813b800:	01ffffc4 	movi	r7,-1
 813b804:	00000406 	br	813b818 <memcmp+0x3c>
 813b808:	20800003 	ldbu	r2,0(r4)
 813b80c:	28c00003 	ldbu	r3,0(r5)
 813b810:	31bfffc4 	addi	r6,r6,-1
 813b814:	10c00e1e 	bne	r2,r3,813b850 <memcmp+0x74>
 813b818:	21000044 	addi	r4,r4,1
 813b81c:	29400044 	addi	r5,r5,1
 813b820:	31fff91e 	bne	r6,r7,813b808 <__alt_data_end+0xfc13b808>
 813b824:	0005883a 	mov	r2,zero
 813b828:	f800283a 	ret
 813b82c:	20c00017 	ldw	r3,0(r4)
 813b830:	28800017 	ldw	r2,0(r5)
 813b834:	18bfee1e 	bne	r3,r2,813b7f0 <__alt_data_end+0xfc13b7f0>
 813b838:	31bfff04 	addi	r6,r6,-4
 813b83c:	21000104 	addi	r4,r4,4
 813b840:	29400104 	addi	r5,r5,4
 813b844:	39bff936 	bltu	r7,r6,813b82c <__alt_data_end+0xfc13b82c>
 813b848:	303fe91e 	bne	r6,zero,813b7f0 <__alt_data_end+0xfc13b7f0>
 813b84c:	003ff506 	br	813b824 <__alt_data_end+0xfc13b824>
 813b850:	10c5c83a 	sub	r2,r2,r3
 813b854:	f800283a 	ret

0813b858 <__register_exitproc>:
 813b858:	defffa04 	addi	sp,sp,-24
 813b85c:	dc000315 	stw	r16,12(sp)
 813b860:	04020534 	movhi	r16,2068
 813b864:	84363b04 	addi	r16,r16,-10004
 813b868:	80c00017 	ldw	r3,0(r16)
 813b86c:	dc400415 	stw	r17,16(sp)
 813b870:	dfc00515 	stw	ra,20(sp)
 813b874:	18805217 	ldw	r2,328(r3)
 813b878:	2023883a 	mov	r17,r4
 813b87c:	10003726 	beq	r2,zero,813b95c <__register_exitproc+0x104>
 813b880:	10c00117 	ldw	r3,4(r2)
 813b884:	010007c4 	movi	r4,31
 813b888:	20c00e16 	blt	r4,r3,813b8c4 <__register_exitproc+0x6c>
 813b88c:	1a000044 	addi	r8,r3,1
 813b890:	8800221e 	bne	r17,zero,813b91c <__register_exitproc+0xc4>
 813b894:	18c00084 	addi	r3,r3,2
 813b898:	18c7883a 	add	r3,r3,r3
 813b89c:	18c7883a 	add	r3,r3,r3
 813b8a0:	12000115 	stw	r8,4(r2)
 813b8a4:	10c7883a 	add	r3,r2,r3
 813b8a8:	19400015 	stw	r5,0(r3)
 813b8ac:	0005883a 	mov	r2,zero
 813b8b0:	dfc00517 	ldw	ra,20(sp)
 813b8b4:	dc400417 	ldw	r17,16(sp)
 813b8b8:	dc000317 	ldw	r16,12(sp)
 813b8bc:	dec00604 	addi	sp,sp,24
 813b8c0:	f800283a 	ret
 813b8c4:	00800034 	movhi	r2,0
 813b8c8:	10800004 	addi	r2,r2,0
 813b8cc:	10002626 	beq	r2,zero,813b968 <__register_exitproc+0x110>
 813b8d0:	01006404 	movi	r4,400
 813b8d4:	d9400015 	stw	r5,0(sp)
 813b8d8:	d9800115 	stw	r6,4(sp)
 813b8dc:	d9c00215 	stw	r7,8(sp)
 813b8e0:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 813b8e4:	d9400017 	ldw	r5,0(sp)
 813b8e8:	d9800117 	ldw	r6,4(sp)
 813b8ec:	d9c00217 	ldw	r7,8(sp)
 813b8f0:	10001d26 	beq	r2,zero,813b968 <__register_exitproc+0x110>
 813b8f4:	81000017 	ldw	r4,0(r16)
 813b8f8:	10000115 	stw	zero,4(r2)
 813b8fc:	02000044 	movi	r8,1
 813b900:	22405217 	ldw	r9,328(r4)
 813b904:	0007883a 	mov	r3,zero
 813b908:	12400015 	stw	r9,0(r2)
 813b90c:	20805215 	stw	r2,328(r4)
 813b910:	10006215 	stw	zero,392(r2)
 813b914:	10006315 	stw	zero,396(r2)
 813b918:	883fde26 	beq	r17,zero,813b894 <__alt_data_end+0xfc13b894>
 813b91c:	18c9883a 	add	r4,r3,r3
 813b920:	2109883a 	add	r4,r4,r4
 813b924:	1109883a 	add	r4,r2,r4
 813b928:	21802215 	stw	r6,136(r4)
 813b92c:	01800044 	movi	r6,1
 813b930:	12406217 	ldw	r9,392(r2)
 813b934:	30cc983a 	sll	r6,r6,r3
 813b938:	4992b03a 	or	r9,r9,r6
 813b93c:	12406215 	stw	r9,392(r2)
 813b940:	21c04215 	stw	r7,264(r4)
 813b944:	01000084 	movi	r4,2
 813b948:	893fd21e 	bne	r17,r4,813b894 <__alt_data_end+0xfc13b894>
 813b94c:	11006317 	ldw	r4,396(r2)
 813b950:	218cb03a 	or	r6,r4,r6
 813b954:	11806315 	stw	r6,396(r2)
 813b958:	003fce06 	br	813b894 <__alt_data_end+0xfc13b894>
 813b95c:	18805304 	addi	r2,r3,332
 813b960:	18805215 	stw	r2,328(r3)
 813b964:	003fc606 	br	813b880 <__alt_data_end+0xfc13b880>
 813b968:	00bfffc4 	movi	r2,-1
 813b96c:	003fd006 	br	813b8b0 <__alt_data_end+0xfc13b8b0>

0813b970 <__call_exitprocs>:
 813b970:	defff504 	addi	sp,sp,-44
 813b974:	df000915 	stw	fp,36(sp)
 813b978:	dd400615 	stw	r21,24(sp)
 813b97c:	dc800315 	stw	r18,12(sp)
 813b980:	dfc00a15 	stw	ra,40(sp)
 813b984:	ddc00815 	stw	r23,32(sp)
 813b988:	dd800715 	stw	r22,28(sp)
 813b98c:	dd000515 	stw	r20,20(sp)
 813b990:	dcc00415 	stw	r19,16(sp)
 813b994:	dc400215 	stw	r17,8(sp)
 813b998:	dc000115 	stw	r16,4(sp)
 813b99c:	d9000015 	stw	r4,0(sp)
 813b9a0:	2839883a 	mov	fp,r5
 813b9a4:	04800044 	movi	r18,1
 813b9a8:	057fffc4 	movi	r21,-1
 813b9ac:	00820534 	movhi	r2,2068
 813b9b0:	10b63b04 	addi	r2,r2,-10004
 813b9b4:	12000017 	ldw	r8,0(r2)
 813b9b8:	45005217 	ldw	r20,328(r8)
 813b9bc:	44c05204 	addi	r19,r8,328
 813b9c0:	a0001c26 	beq	r20,zero,813ba34 <__call_exitprocs+0xc4>
 813b9c4:	a0800117 	ldw	r2,4(r20)
 813b9c8:	15ffffc4 	addi	r23,r2,-1
 813b9cc:	b8000d16 	blt	r23,zero,813ba04 <__call_exitprocs+0x94>
 813b9d0:	14000044 	addi	r16,r2,1
 813b9d4:	8421883a 	add	r16,r16,r16
 813b9d8:	8421883a 	add	r16,r16,r16
 813b9dc:	84402004 	addi	r17,r16,128
 813b9e0:	a463883a 	add	r17,r20,r17
 813b9e4:	a421883a 	add	r16,r20,r16
 813b9e8:	e0001e26 	beq	fp,zero,813ba64 <__call_exitprocs+0xf4>
 813b9ec:	80804017 	ldw	r2,256(r16)
 813b9f0:	e0801c26 	beq	fp,r2,813ba64 <__call_exitprocs+0xf4>
 813b9f4:	bdffffc4 	addi	r23,r23,-1
 813b9f8:	843fff04 	addi	r16,r16,-4
 813b9fc:	8c7fff04 	addi	r17,r17,-4
 813ba00:	bd7ff91e 	bne	r23,r21,813b9e8 <__alt_data_end+0xfc13b9e8>
 813ba04:	00800034 	movhi	r2,0
 813ba08:	10800004 	addi	r2,r2,0
 813ba0c:	10000926 	beq	r2,zero,813ba34 <__call_exitprocs+0xc4>
 813ba10:	a0800117 	ldw	r2,4(r20)
 813ba14:	1000301e 	bne	r2,zero,813bad8 <__call_exitprocs+0x168>
 813ba18:	a0800017 	ldw	r2,0(r20)
 813ba1c:	10003226 	beq	r2,zero,813bae8 <__call_exitprocs+0x178>
 813ba20:	a009883a 	mov	r4,r20
 813ba24:	98800015 	stw	r2,0(r19)
 813ba28:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 813ba2c:	9d000017 	ldw	r20,0(r19)
 813ba30:	a03fe41e 	bne	r20,zero,813b9c4 <__alt_data_end+0xfc13b9c4>
 813ba34:	dfc00a17 	ldw	ra,40(sp)
 813ba38:	df000917 	ldw	fp,36(sp)
 813ba3c:	ddc00817 	ldw	r23,32(sp)
 813ba40:	dd800717 	ldw	r22,28(sp)
 813ba44:	dd400617 	ldw	r21,24(sp)
 813ba48:	dd000517 	ldw	r20,20(sp)
 813ba4c:	dcc00417 	ldw	r19,16(sp)
 813ba50:	dc800317 	ldw	r18,12(sp)
 813ba54:	dc400217 	ldw	r17,8(sp)
 813ba58:	dc000117 	ldw	r16,4(sp)
 813ba5c:	dec00b04 	addi	sp,sp,44
 813ba60:	f800283a 	ret
 813ba64:	a0800117 	ldw	r2,4(r20)
 813ba68:	80c00017 	ldw	r3,0(r16)
 813ba6c:	10bfffc4 	addi	r2,r2,-1
 813ba70:	15c01426 	beq	r2,r23,813bac4 <__call_exitprocs+0x154>
 813ba74:	80000015 	stw	zero,0(r16)
 813ba78:	183fde26 	beq	r3,zero,813b9f4 <__alt_data_end+0xfc13b9f4>
 813ba7c:	95c8983a 	sll	r4,r18,r23
 813ba80:	a0806217 	ldw	r2,392(r20)
 813ba84:	a5800117 	ldw	r22,4(r20)
 813ba88:	2084703a 	and	r2,r4,r2
 813ba8c:	10000b26 	beq	r2,zero,813babc <__call_exitprocs+0x14c>
 813ba90:	a0806317 	ldw	r2,396(r20)
 813ba94:	2088703a 	and	r4,r4,r2
 813ba98:	20000c1e 	bne	r4,zero,813bacc <__call_exitprocs+0x15c>
 813ba9c:	89400017 	ldw	r5,0(r17)
 813baa0:	d9000017 	ldw	r4,0(sp)
 813baa4:	183ee83a 	callr	r3
 813baa8:	a0800117 	ldw	r2,4(r20)
 813baac:	15bfbf1e 	bne	r2,r22,813b9ac <__alt_data_end+0xfc13b9ac>
 813bab0:	98800017 	ldw	r2,0(r19)
 813bab4:	153fcf26 	beq	r2,r20,813b9f4 <__alt_data_end+0xfc13b9f4>
 813bab8:	003fbc06 	br	813b9ac <__alt_data_end+0xfc13b9ac>
 813babc:	183ee83a 	callr	r3
 813bac0:	003ff906 	br	813baa8 <__alt_data_end+0xfc13baa8>
 813bac4:	a5c00115 	stw	r23,4(r20)
 813bac8:	003feb06 	br	813ba78 <__alt_data_end+0xfc13ba78>
 813bacc:	89000017 	ldw	r4,0(r17)
 813bad0:	183ee83a 	callr	r3
 813bad4:	003ff406 	br	813baa8 <__alt_data_end+0xfc13baa8>
 813bad8:	a0800017 	ldw	r2,0(r20)
 813badc:	a027883a 	mov	r19,r20
 813bae0:	1029883a 	mov	r20,r2
 813bae4:	003fb606 	br	813b9c0 <__alt_data_end+0xfc13b9c0>
 813bae8:	0005883a 	mov	r2,zero
 813baec:	003ffb06 	br	813badc <__alt_data_end+0xfc13badc>

0813baf0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 813baf0:	defffd04 	addi	sp,sp,-12
 813baf4:	df000215 	stw	fp,8(sp)
 813baf8:	df000204 	addi	fp,sp,8
 813bafc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 813bb00:	0001883a 	nop
 813bb04:	e0bfff17 	ldw	r2,-4(fp)
 813bb08:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 813bb0c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 813bb10:	10000226 	beq	r2,zero,813bb1c <_exit+0x2c>
    ALT_SIM_FAIL();
 813bb14:	002af070 	cmpltui	zero,zero,43969
 813bb18:	00000106 	br	813bb20 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 813bb1c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 813bb20:	003fff06 	br	813bb20 <__alt_data_end+0xfc13bb20>
