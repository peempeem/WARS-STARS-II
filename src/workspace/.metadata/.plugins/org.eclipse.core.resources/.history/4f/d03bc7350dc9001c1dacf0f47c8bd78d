#ifndef DISPLAY_H
#define DISPLAY_H

#include "vga.h"
#include "gdu.h"
#include "timer.h"
#include <stdio.h>

static void start_render() {
    static int frame = 0;
    while (!is_vblank());
    set_frame(frame);
    gdu_set_frame(get_frame(!frame));
    gdu_run();
    frame = !frame;
}

typedef struct FADE {
    float       start;
    float       end;
    uint16_t    color;
} fade_t;

static fade_t create_fade(uint16_t color, float seconds) {
    float time = get_time();
    fade_t fade = {
        time,
        time + seconds,
        color
    };
    return fade;
}

static int fade_to(fade_t* fade) {
    float bias = (get_time() - fade->start) / (fade->end - fade->start);
    int done = bias > 1;
    if (done)
        bias = 1;
    set_aura(fade->color, (uint32_t) (64 * bias));
    return done;
}

static int fade_from(fade_t* fade) {
    float bias = (get_time() - fade->start) / (fade->end - fade->start);
    int done = bias > 1;
    if (done)
        bias = 1;
    bias = 1 - bias;
    set_aura(fade->color, (uint32_t) (64 * bias));
    return done;
}

static int is_clicked(mouse_t* mouse, game_object_t* object) {
    return (mouse->x >= object->sprite.screen_x && 
        mouse->x <= object->sprite.screen_x + object->sprite.end_x &&
        mouse->y >= object->sprite.screen_y && 
        mouse->y <= object->sprite.screen_y + object->sprite.end_y);
}

#endif